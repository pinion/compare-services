[
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "some-public-api-https",
        "title": "Some Public API HTTPS (V7)",
        "metadata": {
            "id": "8a2e833e75f4975301762cee5aa52452",
            "audit": {
                "createTimestamp": "2020-12-04T08:46:26.981+0000",
                "createUserId": "DOSA_71607e5512ff435ea20837ecb17f85a7",
                "modifyTimestamp": "2023-07-21T03:47:11.580+0000",
                "modifyUserId": "DOSA_71607e5512ff435ea20837ecb17f85a7"
            },
            "scope": {
                "id": "e4efe9b572583eae0172798d82f90596",
                "kind": "Environment",
                "name": "on-premise",
                "title": "Minikube",
                "selfLink": "/management/v1alpha1/environments/on-premise"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "56638",
            "references": [
                {
                    "id": "8a2e8aed75d8459b01762cee59a05b62",
                    "kind": "APIService",
                    "name": "some-public-api-https",
                    "scopeKind": "Environment",
                    "scopeName": "on-premise",
                    "selfLink": "/management/v1alpha1/environments/on-premise/apiservices/some-public-api-https",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/on-premise/apiservicerevisions/some-public-api-https"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayAgent",
            "externalAPIID": "a46b51c0-f848-4ede-ba67-2fe8906ba007"
        },
        "finalizers": [],
        "tags": [
            "public_public",
            "APIID_eedcbbd5-5ef3-45e5-b335-a23680bb0172"
        ],
        "spec": {
            "apiService": "some-public-api-https",
            "definition": {
                "type": "oas2",
                "value": "ewogICJzd2FnZ2VyIiA6ICIyLjAiLAogICJpbmZvIiA6IHsKICAgICJkZXNjcmlwdGlvbiIgOiAiVGhpcyBpcyBhIHNhbXBsZSBzZXJ2ZXIgUGV0c3RvcmUgc2VydmVyLiAgWW91IGNhbiBmaW5kIG91dCBtb3JlIGFib3V0IFN3YWdnZXIgYXQgW2h0dHA6Ly9zd2FnZ2VyLmlvXShodHRwOi8vc3dhZ2dlci5pbykgb3Igb24gW2lyYy5mcmVlbm9kZS5uZXQsICNzd2FnZ2VyXShodHRwOi8vc3dhZ2dlci5pby9pcmMvKS4gIEZvciB0aGlzIHNhbXBsZSwgeW91IGNhbiB1c2UgdGhlIGFwaSBrZXkgYHNwZWNpYWwta2V5YCB0byB0ZXN0IHRoZSBhdXRob3JpemF0aW9uIGZpbHRlcnMuIiwKICAgICJ2ZXJzaW9uIiA6ICIxLjAuNSIsCiAgICAidGl0bGUiIDogIlNvbWUgUHVibGljIEFQSSBIVFRQUyIsCiAgICAidGVybXNPZlNlcnZpY2UiIDogImh0dHA6Ly9zd2FnZ2VyLmlvL3Rlcm1zLyIsCiAgICAiY29udGFjdCIgOiB7CiAgICAgICJlbWFpbCIgOiAiYXBpdGVhbUBzd2FnZ2VyLmlvIgogICAgfSwKICAgICJsaWNlbnNlIiA6IHsKICAgICAgIm5hbWUiIDogIkFwYWNoZSAyLjAiLAogICAgICAidXJsIiA6ICJodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbCIKICAgIH0KICB9LAogICJob3N0IiA6ICJ0cmFmZmljLmF4d2F5LWFtcGxpZnktY2VudHJhbC5jb20iLAogICJiYXNlUGF0aCIgOiAiL3B1YmxpY2FwaSIsCiAgInRhZ3MiIDogWyB7CiAgICAibmFtZSIgOiAicGV0IiwKICAgICJkZXNjcmlwdGlvbiIgOiAiRXZlcnl0aGluZyBhYm91dCB5b3VyIFBldHMiLAogICAgImV4dGVybmFsRG9jcyIgOiB7CiAgICAgICJkZXNjcmlwdGlvbiIgOiAiRmluZCBvdXQgbW9yZSIsCiAgICAgICJ1cmwiIDogImh0dHA6Ly9zd2FnZ2VyLmlvIgogICAgfQogIH0sIHsKICAgICJuYW1lIiA6ICJzdG9yZSIsCiAgICAiZGVzY3JpcHRpb24iIDogIkFjY2VzcyB0byBQZXRzdG9yZSBvcmRlcnMiCiAgfSwgewogICAgIm5hbWUiIDogInVzZXIiLAogICAgImRlc2NyaXB0aW9uIiA6ICJPcGVyYXRpb25zIGFib3V0IHVzZXIiLAogICAgImV4dGVybmFsRG9jcyIgOiB7CiAgICAgICJkZXNjcmlwdGlvbiIgOiAiRmluZCBvdXQgbW9yZSBhYm91dCBvdXIgc3RvcmUiLAogICAgICAidXJsIiA6ICJodHRwOi8vc3dhZ2dlci5pbyIKICAgIH0KICB9IF0sCiAgInNjaGVtZXMiIDogWyAiaHR0cHMiIF0sCiAgInNlY3VyaXR5IiA6IFsgewogICAgIkFQSSBLZXkiIDogWyBdCiAgfSBdLAogICJwYXRocyIgOiB7CiAgICAiL3BldCIgOiB7CiAgICAgICJwb3N0IiA6IHsKICAgICAgICAidGFncyIgOiBbICJwZXQiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkFkZCBhIG5ldyBwZXQgdG8gdGhlIHN0b3JlIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImFkZFBldCIsCiAgICAgICAgImNvbnN1bWVzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJpbiIgOiAiYm9keSIsCiAgICAgICAgICAibmFtZSIgOiAiYm9keSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlBldCBvYmplY3QgdGhhdCBuZWVkcyB0byBiZSBhZGRlZCB0byB0aGUgc3RvcmUiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvUGV0IgogICAgICAgICAgfQogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDEiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkNyZWF0ZWQiCiAgICAgICAgICB9LAogICAgICAgICAgIjQwNSIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCBpbnB1dCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJwdXQiIDogewogICAgICAgICJ0YWdzIiA6IFsgInBldCIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiVXBkYXRlIGFuIGV4aXN0aW5nIHBldCIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJ1cGRhdGVQZXQiLAogICAgICAgICJjb25zdW1lcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAiaW4iIDogImJvZHkiLAogICAgICAgICAgIm5hbWUiIDogImJvZHkiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJQZXQgb2JqZWN0IHRoYXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhlIHN0b3JlIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL1BldCIKICAgICAgICAgIH0KICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiMjAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJPSyIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIElEIHN1cHBsaWVkIgogICAgICAgICAgfSwKICAgICAgICAgICI0MDQiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlBldCBub3QgZm91bmQiCiAgICAgICAgICB9LAogICAgICAgICAgIjQwNSIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVmFsaWRhdGlvbiBleGNlcHRpb24iCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi91c2VyL3t1c2VybmFtZX0iIDogewogICAgICAiZ2V0IiA6IHsKICAgICAgICAidGFncyIgOiBbICJ1c2VyIiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJHZXQgdXNlciBieSB1c2VyIG5hbWUiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiZ2V0VXNlckJ5TmFtZSIsCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgIm5hbWUiIDogInVzZXJuYW1lIiwKICAgICAgICAgICJpbiIgOiAicGF0aCIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlRoZSBuYW1lIHRoYXQgbmVlZHMgdG8gYmUgZmV0Y2hlZC4gVXNlIHVzZXIxIGZvciB0ZXN0aW5nLiAiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvVXNlciIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgdXNlcm5hbWUgc3VwcGxpZWQiCiAgICAgICAgICB9LAogICAgICAgICAgIjQwNCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVXNlciBub3QgZm91bmQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicHV0IiA6IHsKICAgICAgICAidGFncyIgOiBbICJ1c2VyIiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJVcGRhdGVkIHVzZXIiLAogICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVGhpcyBjYW4gb25seSBiZSBkb25lIGJ5IHRoZSBsb2dnZWQgaW4gdXNlci4iLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAidXBkYXRlVXNlciIsCiAgICAgICAgImNvbnN1bWVzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iIF0sCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgIm5hbWUiIDogInVzZXJuYW1lIiwKICAgICAgICAgICJpbiIgOiAicGF0aCIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIm5hbWUgdGhhdCBuZWVkIHRvIGJlIHVwZGF0ZWQiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0sIHsKICAgICAgICAgICJpbiIgOiAiYm9keSIsCiAgICAgICAgICAibmFtZSIgOiAiYm9keSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlVwZGF0ZWQgdXNlciBvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvVXNlciIKICAgICAgICAgIH0KICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiMjAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJPSyIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIHVzZXIgc3VwcGxpZWQiCiAgICAgICAgICB9LAogICAgICAgICAgIjQwNCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVXNlciBub3QgZm91bmQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAiZGVsZXRlIiA6IHsKICAgICAgICAidGFncyIgOiBbICJ1c2VyIiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJEZWxldGUgdXNlciIsCiAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJUaGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgdGhlIGxvZ2dlZCBpbiB1c2VyLiIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJkZWxldGVVc2VyIiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAidXNlcm5hbWUiLAogICAgICAgICAgImluIiA6ICJwYXRoIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVGhlIG5hbWUgdGhhdCBuZWVkcyB0byBiZSBkZWxldGVkIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiNDAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIHVzZXJuYW1lIHN1cHBsaWVkIgogICAgICAgICAgfSwKICAgICAgICAgICIyMDQiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIk5vIENvbnRlbnQiCiAgICAgICAgICB9LAogICAgICAgICAgIjQwNCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVXNlciBub3QgZm91bmQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi9wZXQvZmluZEJ5U3RhdHVzIiA6IHsKICAgICAgImdldCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAicGV0IiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJGaW5kcyBQZXRzIGJ5IHN0YXR1cyIsCiAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJNdWx0aXBsZSBzdGF0dXMgdmFsdWVzIGNhbiBiZSBwcm92aWRlZCB3aXRoIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmdzIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImZpbmRQZXRzQnlTdGF0dXMiLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJuYW1lIiA6ICJzdGF0dXMiLAogICAgICAgICAgImluIiA6ICJxdWVyeSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlN0YXR1cyB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIGNvbnNpZGVyZWQgZm9yIGZpbHRlciIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiIDogewogICAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIiwKICAgICAgICAgICAgImVudW0iIDogWyAiYXZhaWxhYmxlIiwgInBlbmRpbmciLCAic29sZCIgXSwKICAgICAgICAgICAgImRlZmF1bHQiIDogImF2YWlsYWJsZSIKICAgICAgICAgIH0sCiAgICAgICAgICAiY29sbGVjdGlvbkZvcm1hdCIgOiAibXVsdGkiCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgICAidHlwZSIgOiAiYXJyYXkiLAogICAgICAgICAgICAgICJpdGVtcyIgOiB7CiAgICAgICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9QZXQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgIjQwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCBzdGF0dXMgdmFsdWUiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi91c2VyL2NyZWF0ZVdpdGhMaXN0IiA6IHsKICAgICAgInBvc3QiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkNyZWF0ZXMgbGlzdCBvZiB1c2VycyB3aXRoIGdpdmVuIGlucHV0IGFycmF5IiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImNyZWF0ZVVzZXJzV2l0aExpc3RJbnB1dCIsCiAgICAgICAgImNvbnN1bWVzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iIF0sCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgImluIiA6ICJib2R5IiwKICAgICAgICAgICJuYW1lIiA6ICJib2R5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiTGlzdCBvZiB1c2VyIG9iamVjdCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAidHlwZSIgOiAiYXJyYXkiLAogICAgICAgICAgICAiaXRlbXMiIDogewogICAgICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL1VzZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiZGVmYXVsdCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iCiAgICAgICAgICB9LAogICAgICAgICAgIjIwMSIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiQ3JlYXRlZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3BldC97cGV0SWR9L3VwbG9hZEltYWdlIiA6IHsKICAgICAgInBvc3QiIDogewogICAgICAgICJ0YWdzIiA6IFsgInBldCIgXSwKICAgICAgICAic3VtbWFyeSIgOiAidXBsb2FkcyBhbiBpbWFnZSIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJ1cGxvYWRGaWxlIiwKICAgICAgICAiY29uc3VtZXMiIDogWyAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIgXSwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJuYW1lIiA6ICJwZXRJZCIsCiAgICAgICAgICAiaW4iIDogInBhdGgiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJRCBvZiBwZXQgdG8gdXBkYXRlIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogImludGVnZXIiLAogICAgICAgICAgImZvcm1hdCIgOiAiaW50NjQiCiAgICAgICAgfSwgewogICAgICAgICAgIm5hbWUiIDogImFkZGl0aW9uYWxNZXRhZGF0YSIsCiAgICAgICAgICAiaW4iIDogImZvcm1EYXRhIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiQWRkaXRpb25hbCBkYXRhIHRvIHBhc3MgdG8gc2VydmVyIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiBmYWxzZSwKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSwgewogICAgICAgICAgIm5hbWUiIDogImZpbGUiLAogICAgICAgICAgImluIiA6ICJmb3JtRGF0YSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogImZpbGUgdG8gdXBsb2FkIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiBmYWxzZSwKICAgICAgICAgICJ0eXBlIiA6ICJmaWxlIgogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvQXBpUmVzcG9uc2UiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3N0b3JlL2ludmVudG9yeSIgOiB7CiAgICAgICJnZXQiIDogewogICAgICAgICJ0YWdzIiA6IFsgInN0b3JlIiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJSZXR1cm5zIHBldCBpbnZlbnRvcmllcyBieSBzdGF0dXMiLAogICAgICAgICJkZXNjcmlwdGlvbiIgOiAiUmV0dXJucyBhIG1hcCBvZiBzdGF0dXMgY29kZXMgdG8gcXVhbnRpdGllcyIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJnZXRJbnZlbnRvcnkiLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgInR5cGUiIDogIm9iamVjdCIsCiAgICAgICAgICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIiA6IHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAgICJmb3JtYXQiIDogImludDMyIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICIvdXNlci9sb2dpbiIgOiB7CiAgICAgICJnZXQiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkxvZ3MgdXNlciBpbnRvIHRoZSBzeXN0ZW0iLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAibG9naW5Vc2VyIiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAidXNlcm5hbWUiLAogICAgICAgICAgImluIiA6ICJxdWVyeSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlRoZSB1c2VyIG5hbWUgZm9yIGxvZ2luIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LCB7CiAgICAgICAgICAibmFtZSIgOiAicGFzc3dvcmQiLAogICAgICAgICAgImluIiA6ICJxdWVyeSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlRoZSBwYXNzd29yZCBmb3IgbG9naW4gaW4gY2xlYXIgdGV4dCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAiaGVhZGVycyIgOiB7CiAgICAgICAgICAgICAgIlgtUmF0ZS1MaW1pdCIgOiB7CiAgICAgICAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQzMiIsCiAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogImNhbGxzIHBlciBob3VyIGFsbG93ZWQgYnkgdGhlIHVzZXIiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAiWC1FeHBpcmVzLUFmdGVyIiA6IHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciLAogICAgICAgICAgICAgICAgImZvcm1hdCIgOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiZGF0ZSBpbiBVVEMgd2hlbiB0b2tlbiBleHBpcmVzIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgdXNlcm5hbWUvcGFzc3dvcmQgc3VwcGxpZWQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi91c2VyIiA6IHsKICAgICAgInBvc3QiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkNyZWF0ZSB1c2VyIiwKICAgICAgICAiZGVzY3JpcHRpb24iIDogIlRoaXMgY2FuIG9ubHkgYmUgZG9uZSBieSB0aGUgbG9nZ2VkIGluIHVzZXIuIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImNyZWF0ZVVzZXIiLAogICAgICAgICJjb25zdW1lcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiBdLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJpbiIgOiAiYm9keSIsCiAgICAgICAgICAibmFtZSIgOiAiYm9keSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkNyZWF0ZWQgdXNlciBvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvVXNlciIKICAgICAgICAgIH0KICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiZGVmYXVsdCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iCiAgICAgICAgICB9LAogICAgICAgICAgIjIwMSIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiQ3JlYXRlZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3VzZXIvY3JlYXRlV2l0aEFycmF5IiA6IHsKICAgICAgInBvc3QiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkNyZWF0ZXMgbGlzdCBvZiB1c2VycyB3aXRoIGdpdmVuIGlucHV0IGFycmF5IiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImNyZWF0ZVVzZXJzV2l0aEFycmF5SW5wdXQiLAogICAgICAgICJjb25zdW1lcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiBdLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJpbiIgOiAiYm9keSIsCiAgICAgICAgICAibmFtZSIgOiAiYm9keSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkxpc3Qgb2YgdXNlciBvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgInR5cGUiIDogImFycmF5IiwKICAgICAgICAgICAgIml0ZW1zIiA6IHsKICAgICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9Vc2VyIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgImRlZmF1bHQiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIgogICAgICAgICAgfSwKICAgICAgICAgICIyMDEiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkNyZWF0ZWQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi9wZXQvZmluZEJ5VGFncyIgOiB7CiAgICAgICJnZXQiIDogewogICAgICAgICJ0YWdzIiA6IFsgInBldCIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiRmluZHMgUGV0cyBieSB0YWdzIiwKICAgICAgICAiZGVzY3JpcHRpb24iIDogIk11bHRpcGxlIHRhZ3MgY2FuIGJlIHByb3ZpZGVkIHdpdGggY29tbWEgc2VwYXJhdGVkIHN0cmluZ3MuIFVzZSB0YWcxLCB0YWcyLCB0YWczIGZvciB0ZXN0aW5nLiIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJmaW5kUGV0c0J5VGFncyIsCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgIm5hbWUiIDogInRhZ3MiLAogICAgICAgICAgImluIiA6ICJxdWVyeSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlRhZ3MgdG8gZmlsdGVyIGJ5IiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogImFycmF5IiwKICAgICAgICAgICJpdGVtcyIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgICB9LAogICAgICAgICAgImNvbGxlY3Rpb25Gb3JtYXQiIDogIm11bHRpIgogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgInR5cGUiIDogImFycmF5IiwKICAgICAgICAgICAgICAiaXRlbXMiIDogewogICAgICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvUGV0IgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgdGFnIHZhbHVlIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImRlcHJlY2F0ZWQiIDogdHJ1ZQogICAgICB9CiAgICB9LAogICAgIi91c2VyL2xvZ291dCIgOiB7CiAgICAgICJnZXQiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkxvZ3Mgb3V0IGN1cnJlbnQgbG9nZ2VkIGluIHVzZXIgc2Vzc2lvbiIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJsb2dvdXRVc2VyIiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgImRlZmF1bHQiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIgogICAgICAgICAgfSwKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIk9LIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICIvc3RvcmUvb3JkZXIiIDogewogICAgICAicG9zdCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAic3RvcmUiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIlBsYWNlIGFuIG9yZGVyIGZvciBhIHBldCIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJwbGFjZU9yZGVyIiwKICAgICAgICAiY29uc3VtZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIgXSwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAiaW4iIDogImJvZHkiLAogICAgICAgICAgIm5hbWUiIDogImJvZHkiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJvcmRlciBwbGFjZWQgZm9yIHB1cmNoYXNpbmcgdGhlIHBldCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9PcmRlciIKICAgICAgICAgIH0KICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiMjAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsCiAgICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL09yZGVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgIjQwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCBPcmRlciIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3BldC97cGV0SWR9IiA6IHsKICAgICAgImdldCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAicGV0IiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJGaW5kIHBldCBieSBJRCIsCiAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJSZXR1cm5zIGEgc2luZ2xlIHBldCIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJnZXRQZXRCeUlkIiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAicGV0SWQiLAogICAgICAgICAgImluIiA6ICJwYXRoIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSUQgb2YgcGV0IHRvIHJldHVybiIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvUGV0IgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgIjQwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCBJRCBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJQZXQgbm90IGZvdW5kIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInBvc3QiIDogewogICAgICAgICJ0YWdzIiA6IFsgInBldCIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiVXBkYXRlcyBhIHBldCBpbiB0aGUgc3RvcmUgd2l0aCBmb3JtIGRhdGEiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAidXBkYXRlUGV0V2l0aEZvcm0iLAogICAgICAgICJjb25zdW1lcyIgOiBbICJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiIF0sCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgIm5hbWUiIDogInBldElkIiwKICAgICAgICAgICJpbiIgOiAicGF0aCIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIklEIG9mIHBldCB0aGF0IG5lZWRzIHRvIGJlIHVwZGF0ZWQiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQ2NCIKICAgICAgICB9LCB7CiAgICAgICAgICAibmFtZSIgOiAibmFtZSIsCiAgICAgICAgICAiaW4iIDogImZvcm1EYXRhIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVXBkYXRlZCBuYW1lIG9mIHRoZSBwZXQiLAogICAgICAgICAgInJlcXVpcmVkIiA6IGZhbHNlLAogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LCB7CiAgICAgICAgICAibmFtZSIgOiAic3RhdHVzIiwKICAgICAgICAgICJpbiIgOiAiZm9ybURhdGEiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJVcGRhdGVkIHN0YXR1cyBvZiB0aGUgcGV0IiwKICAgICAgICAgICJyZXF1aXJlZCIgOiBmYWxzZSwKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMSIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiQ3JlYXRlZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA1IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIGlucHV0IgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgImRlbGV0ZSIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAicGV0IiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJEZWxldGVzIGEgcGV0IiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImRlbGV0ZVBldCIsCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgIm5hbWUiIDogImFwaV9rZXkiLAogICAgICAgICAgImluIiA6ICJoZWFkZXIiLAogICAgICAgICAgInJlcXVpcmVkIiA6IGZhbHNlLAogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LCB7CiAgICAgICAgICAibmFtZSIgOiAicGV0SWQiLAogICAgICAgICAgImluIiA6ICJwYXRoIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiUGV0IGlkIHRvIGRlbGV0ZSIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgSUQgc3VwcGxpZWQiCiAgICAgICAgICB9LAogICAgICAgICAgIjIwNCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiTm8gQ29udGVudCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJQZXQgbm90IGZvdW5kIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICIvc3RvcmUvb3JkZXIve29yZGVySWR9IiA6IHsKICAgICAgImdldCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAic3RvcmUiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkZpbmQgcHVyY2hhc2Ugb3JkZXIgYnkgSUQiLAogICAgICAgICJkZXNjcmlwdGlvbiIgOiAiRm9yIHZhbGlkIHJlc3BvbnNlIHRyeSBpbnRlZ2VyIElEcyB3aXRoIHZhbHVlID49IDEgYW5kIDw9IDEwLiBPdGhlciB2YWx1ZXMgd2lsbCBnZW5lcmF0ZWQgZXhjZXB0aW9ucyIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJnZXRPcmRlckJ5SWQiLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJuYW1lIiA6ICJvcmRlcklkIiwKICAgICAgICAgICJpbiIgOiAicGF0aCIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIklEIG9mIHBldCB0aGF0IG5lZWRzIHRvIGJlIGZldGNoZWQiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAibWF4aW11bSIgOiAxMCwKICAgICAgICAgICJtaW5pbXVtIiA6IDEsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQ2NCIKICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiMjAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsCiAgICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL09yZGVyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgIjQwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCBJRCBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJPcmRlciBub3QgZm91bmQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAiZGVsZXRlIiA6IHsKICAgICAgICAidGFncyIgOiBbICJzdG9yZSIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiRGVsZXRlIHB1cmNoYXNlIG9yZGVyIGJ5IElEIiwKICAgICAgICAiZGVzY3JpcHRpb24iIDogIkZvciB2YWxpZCByZXNwb25zZSB0cnkgaW50ZWdlciBJRHMgd2l0aCBwb3NpdGl2ZSBpbnRlZ2VyIHZhbHVlLiBOZWdhdGl2ZSBvciBub24taW50ZWdlciB2YWx1ZXMgd2lsbCBnZW5lcmF0ZSBBUEkgZXJyb3JzIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImRlbGV0ZU9yZGVyIiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAib3JkZXJJZCIsCiAgICAgICAgICAiaW4iIDogInBhdGgiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJRCBvZiB0aGUgb3JkZXIgdGhhdCBuZWVkcyB0byBiZSBkZWxldGVkIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iIDogMSwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgSUQgc3VwcGxpZWQiCiAgICAgICAgICB9LAogICAgICAgICAgIjIwNCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiTm8gQ29udGVudCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJPcmRlciBub3QgZm91bmQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICAic2VjdXJpdHlEZWZpbml0aW9ucyIgOiB7CiAgICAiQVBJIEtleSIgOiB7CiAgICAgICJkZXNjcmlwdGlvbiIgOiAiQVBJIEtleSIsCiAgICAgICJ0eXBlIiA6ICJhcGlLZXkiLAogICAgICAibmFtZSIgOiAiS2V5SWQiLAogICAgICAiaW4iIDogImhlYWRlciIKICAgIH0KICB9LAogICJkZWZpbml0aW9ucyIgOiB7CiAgICAiT3JkZXIiIDogewogICAgICAidHlwZSIgOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiIDogewogICAgICAgICJpZCIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQ2NCIKICAgICAgICB9LAogICAgICAgICJwZXRJZCIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQ2NCIKICAgICAgICB9LAogICAgICAgICJxdWFudGl0eSIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQzMiIKICAgICAgICB9LAogICAgICAgICJzaGlwRGF0ZSIgOiB7CiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiIDogImRhdGUtdGltZSIKICAgICAgICB9LAogICAgICAgICJzdGF0dXMiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIk9yZGVyIFN0YXR1cyIsCiAgICAgICAgICAiZW51bSIgOiBbICJwbGFjZWQiLCAiYXBwcm92ZWQiLCAiZGVsaXZlcmVkIiBdCiAgICAgICAgfSwKICAgICAgICAiY29tcGxldGUiIDogewogICAgICAgICAgInR5cGUiIDogImJvb2xlYW4iCiAgICAgICAgfQogICAgICB9LAogICAgICAieG1sIiA6IHsKICAgICAgICAibmFtZSIgOiAiT3JkZXIiCiAgICAgIH0KICAgIH0sCiAgICAiQ2F0ZWdvcnkiIDogewogICAgICAidHlwZSIgOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiIDogewogICAgICAgICJpZCIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQ2NCIKICAgICAgICB9LAogICAgICAgICJuYW1lIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9LAogICAgICAieG1sIiA6IHsKICAgICAgICAibmFtZSIgOiAiQ2F0ZWdvcnkiCiAgICAgIH0KICAgIH0sCiAgICAiVXNlciIgOiB7CiAgICAgICJ0eXBlIiA6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyIgOiB7CiAgICAgICAgImlkIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0sCiAgICAgICAgInVzZXJuYW1lIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiZmlyc3ROYW1lIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAibGFzdE5hbWUiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJlbWFpbCIgOiB7CiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInBhc3N3b3JkIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicGhvbmUiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJ1c2VyU3RhdHVzIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDMyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVXNlciBTdGF0dXMiCiAgICAgICAgfQogICAgICB9LAogICAgICAieG1sIiA6IHsKICAgICAgICAibmFtZSIgOiAiVXNlciIKICAgICAgfQogICAgfSwKICAgICJUYWciIDogewogICAgICAidHlwZSIgOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiIDogewogICAgICAgICJpZCIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQ2NCIKICAgICAgICB9LAogICAgICAgICJuYW1lIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9LAogICAgICAieG1sIiA6IHsKICAgICAgICAibmFtZSIgOiAiVGFnIgogICAgICB9CiAgICB9LAogICAgIkFwaVJlc3BvbnNlIiA6IHsKICAgICAgInR5cGUiIDogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIiA6IHsKICAgICAgICAiY29kZSIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQzMiIKICAgICAgICB9LAogICAgICAgICJ0eXBlIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAibWVzc2FnZSIgOiB7CiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJQZXQiIDogewogICAgICAidHlwZSIgOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIiA6IFsgIm5hbWUiLCAicGhvdG9VcmxzIiBdLAogICAgICAicHJvcGVydGllcyIgOiB7CiAgICAgICAgImlkIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0sCiAgICAgICAgImNhdGVnb3J5IiA6IHsKICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL0NhdGVnb3J5IgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIsCiAgICAgICAgICAiZXhhbXBsZSIgOiAiZG9nZ2llIgogICAgICAgIH0sCiAgICAgICAgInBob3RvVXJscyIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiYXJyYXkiLAogICAgICAgICAgInhtbCIgOiB7CiAgICAgICAgICAgICJ3cmFwcGVkIiA6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICAiaXRlbXMiIDogewogICAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIiwKICAgICAgICAgICAgInhtbCIgOiB7CiAgICAgICAgICAgICAgIm5hbWUiIDogInBob3RvVXJsIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAidGFncyIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiYXJyYXkiLAogICAgICAgICAgInhtbCIgOiB7CiAgICAgICAgICAgICJ3cmFwcGVkIiA6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICAiaXRlbXMiIDogewogICAgICAgICAgICAieG1sIiA6IHsKICAgICAgICAgICAgICAibmFtZSIgOiAidGFnIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9UYWciCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAic3RhdHVzIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJwZXQgc3RhdHVzIGluIHRoZSBzdG9yZSIsCiAgICAgICAgICAiZW51bSIgOiBbICJhdmFpbGFibGUiLCAicGVuZGluZyIsICJzb2xkIiBdCiAgICAgICAgfQogICAgICB9LAogICAgICAieG1sIiA6IHsKICAgICAgICAibmFtZSIgOiAiUGV0IgogICAgICB9CiAgICB9CiAgfSwKICAiZXh0ZXJuYWxEb2NzIiA6IHsKICAgICJkZXNjcmlwdGlvbiIgOiAiRmluZCBvdXQgbW9yZSBhYm91dCBTd2FnZ2VyIiwKICAgICJ1cmwiIDogImh0dHA6Ly9zd2FnZ2VyLmlvIgogIH0sCiAgIngtYXh3YXkiIDogewogICAgInNlcnZpY2VUeXBlIiA6ICJyZXN0IiwKICAgICJiYXNlUGF0aHMiIDogWyAiaHR0cHM6Ly90cmFmZmljLmF4d2F5LWFtcGxpZnktY2VudHJhbC5jb20iIF0sCiAgICAiZXhwaXJlZCIgOiBmYWxzZSwKICAgICJyZXRpcmVtZW50RGF0ZSIgOiAwLAogICAgImNvcnNFbmFibGVkIiA6IHRydWUsCiAgICAiZGVwcmVjYXRlZCIgOiBmYWxzZSwKICAgICJhdmFpbGFibGVTREsiIDogewogICAgICAiaW9zLXN3aWZ0IiA6ICIvZGlzY292ZXJ5L3Nkay9hNDZiNTFjMC1mODQ4LTRlZGUtYmE2Ny0yZmU4OTA2YmEwMDcvaW9zLXN3aWZ0IiwKICAgICAgInRpdGFuaXVtIiA6ICIvZGlzY292ZXJ5L3Nkay9hNDZiNTFjMC1mODQ4LTRlZGUtYmE2Ny0yZmU4OTA2YmEwMDcvdGl0YW5pdW0iLAogICAgICAiYW5kcm9pZCIgOiAiL2Rpc2NvdmVyeS9zZGsvYTQ2YjUxYzAtZjg0OC00ZWRlLWJhNjctMmZlODkwNmJhMDA3L2FuZHJvaWQiLAogICAgICAibm9kZWpzIiA6ICIvZGlzY292ZXJ5L3Nkay9hNDZiNTFjMC1mODQ4LTRlZGUtYmE2Ny0yZmU4OTA2YmEwMDcvbm9kZWpzIgogICAgfSwKICAgICJhcGlSZXNvdXJjZVR5cGUiIDogInN3YWdnZXIyMCIsCiAgICAiaWQiIDogImE0NmI1MWMwLWY4NDgtNGVkZS1iYTY3LTJmZTg5MDZiYTAwNyIsCiAgICAic3RhdGUiIDogInB1Ymxpc2hlZCIsCiAgICAidGFncyIgOiB7CiAgICAgICJwdWJsaWMiIDogWyAicHVibGljIiBdCiAgICB9CiAgfQp9",
                "version": "1.0.5",
                "contentType": "application/json"
            }
        }
    }
]
