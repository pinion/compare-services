[
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "livemacifagent",
        "title": "LiveMacifAgent (V7)",
        "metadata": {
            "id": "8a2e8a14762fdf1701764340190104c1",
            "audit": {
                "createTimestamp": "2020-12-08T16:47:22.881+0000",
                "createUserId": "DOSA_71607e5512ff435ea20837ecb17f85a7",
                "modifyTimestamp": "2023-07-21T03:47:11.651+0000",
                "modifyUserId": "DOSA_71607e5512ff435ea20837ecb17f85a7"
            },
            "scope": {
                "id": "e4efe9b572583eae0172798d82f90596",
                "kind": "Environment",
                "name": "on-premise",
                "title": "Minikube",
                "selfLink": "/management/v1alpha1/environments/on-premise"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "57244",
            "references": [
                {
                    "id": "8a2e8a14762fdf170176434017e604bd",
                    "kind": "APIService",
                    "name": "livemacifagent",
                    "scopeKind": "Environment",
                    "scopeName": "on-premise",
                    "selfLink": "/management/v1alpha1/environments/on-premise/apiservices/livemacifagent",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/on-premise/apiservicerevisions/livemacifagent"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayAgent",
            "externalAPIID": "2c1e27a8-0a85-41ec-8e0a-1012c19c893c"
        },
        "finalizers": [],
        "tags": [
            "APIID_123aec67-b621-4c1c-a9fe-177e4eaaa9aa"
        ],
        "spec": {
            "apiService": "livemacifagent",
            "definition": {
                "type": "oas2",
                "value": "",
                "version": "1.0.5",
                "contentType": "application/json"
            }
        }
    }
]
