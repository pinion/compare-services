[
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "firstapi-https",
        "title": "FirstAPI HTTPS (V7)",
        "metadata": {
            "id": "8a2e8aed75d8459b01762af197f85b2e",
            "audit": {
                "createTimestamp": "2020-12-03T23:30:44.856+0000",
                "createUserId": "DOSA_71607e5512ff435ea20837ecb17f85a7",
                "modifyTimestamp": "2023-07-21T03:47:11.462+0000",
                "modifyUserId": "DOSA_71607e5512ff435ea20837ecb17f85a7"
            },
            "scope": {
                "id": "e4efe9b572583eae0172798d82f90596",
                "kind": "Environment",
                "name": "on-premise",
                "title": "Minikube",
                "selfLink": "/management/v1alpha1/environments/on-premise"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "56625",
            "references": [
                {
                    "id": "8a2e833e75f4975301762af196892434",
                    "kind": "APIService",
                    "name": "firstapi-https",
                    "scopeKind": "Environment",
                    "scopeName": "on-premise",
                    "selfLink": "/management/v1alpha1/environments/on-premise/apiservices/firstapi-https",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/on-premise/apiservicerevisions/firstapi-https"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayAgent",
            "externalAPIID": "b68d08f0-2939-4a17-81ca-ff34561e4dcc"
        },
        "finalizers": [],
        "tags": [
            "APIID_0861c326-e428-404e-bd6b-43b2792b3d86"
        ],
        "spec": {
            "apiService": "firstapi-https",
            "definition": {
                "type": "oas2",
                "value": "",
                "version": "1.0.5",
                "contentType": "application/json"
            }
        }
    }
]
