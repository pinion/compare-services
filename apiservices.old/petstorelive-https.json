[
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "petstorelive-https.2",
        "title": "PetstoreLive HTTPS (Edge)",
        "metadata": {
            "id": "8a2e8c277649c2d601764cd1620d00de",
            "audit": {
                "createTimestamp": "2020-12-10T13:22:39.245+0000",
                "createUserId": "DOSA_724648a1f8434758a6bec93050c8677a",
                "modifyTimestamp": "2023-07-21T03:47:08.529+0000",
                "modifyUserId": "DOSA_724648a1f8434758a6bec93050c8677a"
            },
            "scope": {
                "id": "e4efe9b572583eae0172798d82f90596",
                "kind": "Environment",
                "name": "on-premise",
                "title": "Minikube",
                "selfLink": "/management/v1alpha1/environments/on-premise"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "57581",
            "references": [
                {
                    "id": "8a2e9468764785ef017647d156b40268",
                    "kind": "APIService",
                    "name": "petstorelive-https",
                    "scopeKind": "Environment",
                    "scopeName": "on-premise",
                    "selfLink": "/management/v1alpha1/environments/on-premise/apiservices/petstorelive-https",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/on-premise/apiservicerevisions/petstorelive-https.2"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayDiscoveryAgent",
            "externalAPIID": "6d20b6f7-6646-49e1-b0d1-7919c5c5aa8c",
            "externalAPIName": "PetstoreLive HTTPS",
            "GatewayType": "Edge",
            "majorHash": "2371963875021055424",
            "APIC_ID": "8a2e9468764785ef017647d15b3d0279",
            "minorHash": "966076824307907171",
            "prevAPIServiceRevisionID": "8a2e9468764785ef017647d15859026d"
        },
        "finalizers": [],
        "tags": [
            "APIID_b2f7fb16-5ffb-42bd-ac7b-5ac21665c2a7",
            "type_live"
        ],
        "spec": {
            "apiService": "petstorelive-https",
            "definition": {
                "type": "oas2",
                "value": "",
                "version": "1.0.5",
                "contentType": "application/json"
            }
        }
    },
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "petstorelive-https.3",
        "title": "PetstoreLive HTTPS (Edge)",
        "metadata": {
            "id": "8a2e8c277649c2d601764cea8fce00fa",
            "audit": {
                "createTimestamp": "2020-12-10T13:50:09.358+0000",
                "createUserId": "DOSA_724648a1f8434758a6bec93050c8677a",
                "modifyTimestamp": "2023-07-21T03:47:08.618+0000",
                "modifyUserId": "DOSA_724648a1f8434758a6bec93050c8677a"
            },
            "scope": {
                "id": "e4efe9b572583eae0172798d82f90596",
                "kind": "Environment",
                "name": "on-premise",
                "title": "Minikube",
                "selfLink": "/management/v1alpha1/environments/on-premise"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "57582",
            "references": [
                {
                    "id": "8a2e9468764785ef017647d156b40268",
                    "kind": "APIService",
                    "name": "petstorelive-https",
                    "scopeKind": "Environment",
                    "scopeName": "on-premise",
                    "selfLink": "/management/v1alpha1/environments/on-premise/apiservices/petstorelive-https",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/on-premise/apiservicerevisions/petstorelive-https.3"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayDiscoveryAgent",
            "externalAPIID": "6d20b6f7-6646-49e1-b0d1-7919c5c5aa8c",
            "externalAPIName": "PetstoreLive HTTPS",
            "GatewayType": "Edge",
            "majorHash": "10760798821710543417",
            "minorHash": "17826808923793425199",
            "prevAPIServiceRevisionID": "8a2e8c277649c2d601764cd1620d00de"
        },
        "finalizers": [],
        "tags": [
            "APIID_b2f7fb16-5ffb-42bd-ac7b-5ac21665c2a7",
            "type_live"
        ],
        "spec": {
            "apiService": "petstorelive-https",
            "definition": {
                "type": "oas2",
                "value": "ewogICJzd2FnZ2VyIiA6ICIyLjAiLAogICJpbmZvIiA6IHsKICAgICJkZXNjcmlwdGlvbiIgOiAiIyBIZWxsbyBmcm9tIGRlbW8iLAogICAgInZlcnNpb24iIDogIjEuMC41IiwKICAgICJ0aXRsZSIgOiAiUGV0c3RvcmVMaXZlIEhUVFBTIiwKICAgICJ0ZXJtc09mU2VydmljZSIgOiAiaHR0cDovL3N3YWdnZXIuaW8vdGVybXMvIiwKICAgICJjb250YWN0IiA6IHsKICAgICAgImVtYWlsIiA6ICJhcGl0ZWFtQHN3YWdnZXIuaW8iCiAgICB9LAogICAgImxpY2Vuc2UiIDogewogICAgICAibmFtZSIgOiAiQXBhY2hlIDIuMCIsCiAgICAgICJ1cmwiIDogImh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sIgogICAgfQogIH0sCiAgImhvc3QiIDogIjE3Mi4xNy4wLjEwOjgwNjUiLAogICJiYXNlUGF0aCIgOiAiL3YzY2hhbmdlIiwKICAidGFncyIgOiBbIHsKICAgICJuYW1lIiA6ICJwZXQiLAogICAgImRlc2NyaXB0aW9uIiA6ICJFdmVyeXRoaW5nIGFib3V0IHlvdXIgUGV0cyIsCiAgICAiZXh0ZXJuYWxEb2NzIiA6IHsKICAgICAgImRlc2NyaXB0aW9uIiA6ICJGaW5kIG91dCBtb3JlIiwKICAgICAgInVybCIgOiAiaHR0cDovL3N3YWdnZXIuaW8iCiAgICB9CiAgfSwgewogICAgIm5hbWUiIDogInN0b3JlIiwKICAgICJkZXNjcmlwdGlvbiIgOiAiQWNjZXNzIHRvIFBldHN0b3JlIG9yZGVycyIKICB9LCB7CiAgICAibmFtZSIgOiAidXNlciIsCiAgICAiZGVzY3JpcHRpb24iIDogIk9wZXJhdGlvbnMgYWJvdXQgdXNlciIsCiAgICAiZXh0ZXJuYWxEb2NzIiA6IHsKICAgICAgImRlc2NyaXB0aW9uIiA6ICJGaW5kIG91dCBtb3JlIGFib3V0IG91ciBzdG9yZSIsCiAgICAgICJ1cmwiIDogImh0dHA6Ly9zd2FnZ2VyLmlvIgogICAgfQogIH0gXSwKICAic2NoZW1lcyIgOiBbICJodHRwcyIgXSwKICAic2VjdXJpdHkiIDogWyB7CiAgICAiQVBJIEtleSIgOiBbIF0KICB9IF0sCiAgInBhdGhzIiA6IHsKICAgICIvcGV0IiA6IHsKICAgICAgInBvc3QiIDogewogICAgICAgICJ0YWdzIiA6IFsgInBldCIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiQWRkIGEgbmV3IHBldCB0byB0aGUgc3RvcmUiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiYWRkUGV0IiwKICAgICAgICAiY29uc3VtZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgImluIiA6ICJib2R5IiwKICAgICAgICAgICJuYW1lIiA6ICJib2R5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiUGV0IG9iamVjdCB0aGF0IG5lZWRzIHRvIGJlIGFkZGVkIHRvIHRoZSBzdG9yZSIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9QZXQiCiAgICAgICAgICB9CiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMSIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiQ3JlYXRlZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA1IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIGlucHV0IgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgInB1dCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAicGV0IiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJVcGRhdGUgYW4gZXhpc3RpbmcgcGV0IiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogInVwZGF0ZVBldCIsCiAgICAgICAgImNvbnN1bWVzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJpbiIgOiAiYm9keSIsCiAgICAgICAgICAibmFtZSIgOiAiYm9keSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlBldCBvYmplY3QgdGhhdCBuZWVkcyB0byBiZSBhZGRlZCB0byB0aGUgc3RvcmUiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvUGV0IgogICAgICAgICAgfQogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIk9LIgogICAgICAgICAgfSwKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgSUQgc3VwcGxpZWQiCiAgICAgICAgICB9LAogICAgICAgICAgIjQwNCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiUGV0IG5vdCBmb3VuZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA1IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJWYWxpZGF0aW9uIGV4Y2VwdGlvbiIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3VzZXIve3VzZXJuYW1lfSIgOiB7CiAgICAgICJnZXQiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkdldCB1c2VyIGJ5IHVzZXIgbmFtZSIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJnZXRVc2VyQnlOYW1lIiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAidXNlcm5hbWUiLAogICAgICAgICAgImluIiA6ICJwYXRoIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVGhlIG5hbWUgdGhhdCBuZWVkcyB0byBiZSBmZXRjaGVkLiBVc2UgdXNlcjEgZm9yIHRlc3RpbmcuICIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9Vc2VyIgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgIjQwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCB1c2VybmFtZSBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJVc2VyIG5vdCBmb3VuZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJwdXQiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIlVwZGF0ZWQgdXNlciIsCiAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJUaGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgdGhlIGxvZ2dlZCBpbiB1c2VyLiIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJ1cGRhdGVVc2VyIiwKICAgICAgICAiY29uc3VtZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIgXSwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAidXNlcm5hbWUiLAogICAgICAgICAgImluIiA6ICJwYXRoIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAibmFtZSB0aGF0IG5lZWQgdG8gYmUgdXBkYXRlZCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSwgewogICAgICAgICAgImluIiA6ICJib2R5IiwKICAgICAgICAgICJuYW1lIiA6ICJib2R5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVXBkYXRlZCB1c2VyIG9iamVjdCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9Vc2VyIgogICAgICAgICAgfQogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIk9LIgogICAgICAgICAgfSwKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgdXNlciBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJVc2VyIG5vdCBmb3VuZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJkZWxldGUiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkRlbGV0ZSB1c2VyIiwKICAgICAgICAiZGVzY3JpcHRpb24iIDogIlRoaXMgY2FuIG9ubHkgYmUgZG9uZSBieSB0aGUgbG9nZ2VkIGluIHVzZXIuIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImRlbGV0ZVVzZXIiLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJuYW1lIiA6ICJ1c2VybmFtZSIsCiAgICAgICAgICAiaW4iIDogInBhdGgiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJUaGUgbmFtZSB0aGF0IG5lZWRzIHRvIGJlIGRlbGV0ZWQiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgdXNlcm5hbWUgc3VwcGxpZWQiCiAgICAgICAgICB9LAogICAgICAgICAgIjIwNCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiTm8gQ29udGVudCIKICAgICAgICAgIH0sCiAgICAgICAgICAiNDA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJVc2VyIG5vdCBmb3VuZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3BldC9maW5kQnlTdGF0dXMiIDogewogICAgICAiZ2V0IiA6IHsKICAgICAgICAidGFncyIgOiBbICJwZXQiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkZpbmRzIFBldHMgYnkgc3RhdHVzIiwKICAgICAgICAiZGVzY3JpcHRpb24iIDogIk11bHRpcGxlIHN0YXR1cyB2YWx1ZXMgY2FuIGJlIHByb3ZpZGVkIHdpdGggY29tbWEgc2VwYXJhdGVkIHN0cmluZ3MiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiZmluZFBldHNCeVN0YXR1cyIsCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgIm5hbWUiIDogInN0YXR1cyIsCiAgICAgICAgICAiaW4iIDogInF1ZXJ5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiU3RhdHVzIHZhbHVlcyB0aGF0IG5lZWQgdG8gYmUgY29uc2lkZXJlZCBmb3IgZmlsdGVyIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogImFycmF5IiwKICAgICAgICAgICJpdGVtcyIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciLAogICAgICAgICAgICAiZW51bSIgOiBbICJhdmFpbGFibGUiLCAicGVuZGluZyIsICJzb2xkIiBdLAogICAgICAgICAgICAiZGVmYXVsdCIgOiAiYXZhaWxhYmxlIgogICAgICAgICAgfSwKICAgICAgICAgICJjb2xsZWN0aW9uRm9ybWF0IiA6ICJtdWx0aSIKICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiMjAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsCiAgICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAgICJ0eXBlIiA6ICJhcnJheSIsCiAgICAgICAgICAgICAgIml0ZW1zIiA6IHsKICAgICAgICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL1BldCIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIHN0YXR1cyB2YWx1ZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3VzZXIvY3JlYXRlV2l0aExpc3QiIDogewogICAgICAicG9zdCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAidXNlciIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiQ3JlYXRlcyBsaXN0IG9mIHVzZXJzIHdpdGggZ2l2ZW4gaW5wdXQgYXJyYXkiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiY3JlYXRlVXNlcnNXaXRoTGlzdElucHV0IiwKICAgICAgICAiY29uc3VtZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIgXSwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAiaW4iIDogImJvZHkiLAogICAgICAgICAgIm5hbWUiIDogImJvZHkiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJMaXN0IG9mIHVzZXIgb2JqZWN0IiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJhcnJheSIsCiAgICAgICAgICAgICJpdGVtcyIgOiB7CiAgICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvVXNlciIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICJkZWZhdWx0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJzdWNjZXNzZnVsIG9wZXJhdGlvbiIKICAgICAgICAgIH0sCiAgICAgICAgICAiMjAxIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJDcmVhdGVkIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICIvcGV0L3twZXRJZH0vdXBsb2FkSW1hZ2UiIDogewogICAgICAicG9zdCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAicGV0IiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJ1cGxvYWRzIGFuIGltYWdlIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogInVwbG9hZEZpbGUiLAogICAgICAgICJjb25zdW1lcyIgOiBbICJtdWx0aXBhcnQvZm9ybS1kYXRhIiBdLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgIm5hbWUiIDogInBldElkIiwKICAgICAgICAgICJpbiIgOiAicGF0aCIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIklEIG9mIHBldCB0byB1cGRhdGUiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQ2NCIKICAgICAgICB9LCB7CiAgICAgICAgICAibmFtZSIgOiAiYWRkaXRpb25hbE1ldGFkYXRhIiwKICAgICAgICAgICJpbiIgOiAiZm9ybURhdGEiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJBZGRpdGlvbmFsIGRhdGEgdG8gcGFzcyB0byBzZXJ2ZXIiLAogICAgICAgICAgInJlcXVpcmVkIiA6IGZhbHNlLAogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LCB7CiAgICAgICAgICAibmFtZSIgOiAiZmlsZSIsCiAgICAgICAgICAiaW4iIDogImZvcm1EYXRhIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiZmlsZSB0byB1cGxvYWQiLAogICAgICAgICAgInJlcXVpcmVkIiA6IGZhbHNlLAogICAgICAgICAgInR5cGUiIDogImZpbGUiCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9BcGlSZXNwb25zZSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICIvdXNlci9sb2dpbiIgOiB7CiAgICAgICJnZXQiIDogewogICAgICAgICJ0YWdzIiA6IFsgInVzZXIiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkxvZ3MgdXNlciBpbnRvIHRoZSBzeXN0ZW0iLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAibG9naW5Vc2VyIiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAidXNlcm5hbWUiLAogICAgICAgICAgImluIiA6ICJxdWVyeSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlRoZSB1c2VyIG5hbWUgZm9yIGxvZ2luIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LCB7CiAgICAgICAgICAibmFtZSIgOiAicGFzc3dvcmQiLAogICAgICAgICAgImluIiA6ICJxdWVyeSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlRoZSBwYXNzd29yZCBmb3IgbG9naW4gaW4gY2xlYXIgdGV4dCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAiaGVhZGVycyIgOiB7CiAgICAgICAgICAgICAgIlgtUmF0ZS1MaW1pdCIgOiB7CiAgICAgICAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQzMiIsCiAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogImNhbGxzIHBlciBob3VyIGFsbG93ZWQgYnkgdGhlIHVzZXIiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAiWC1FeHBpcmVzLUFmdGVyIiA6IHsKICAgICAgICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciLAogICAgICAgICAgICAgICAgImZvcm1hdCIgOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiZGF0ZSBpbiBVVEMgd2hlbiB0b2tlbiBleHBpcmVzIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICI0MDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgdXNlcm5hbWUvcGFzc3dvcmQgc3VwcGxpZWQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi9zdG9yZS9pbnZlbnRvcnkiIDogewogICAgICAiZ2V0IiA6IHsKICAgICAgICAidGFncyIgOiBbICJzdG9yZSIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiUmV0dXJucyBwZXQgaW52ZW50b3JpZXMgYnkgc3RhdHVzIiwKICAgICAgICAiZGVzY3JpcHRpb24iIDogIlJldHVybnMgYSBtYXAgb2Ygc3RhdHVzIGNvZGVzIHRvIHF1YW50aXRpZXMiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiZ2V0SW52ZW50b3J5IiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiMjAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJzdWNjZXNzZnVsIG9wZXJhdGlvbiIsCiAgICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAgICJ0eXBlIiA6ICJvYmplY3QiLAogICAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyIgOiB7CiAgICAgICAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgICAiZm9ybWF0IiA6ICJpbnQzMiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3VzZXIiIDogewogICAgICAicG9zdCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAidXNlciIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiQ3JlYXRlIHVzZXIiLAogICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVGhpcyBjYW4gb25seSBiZSBkb25lIGJ5IHRoZSBsb2dnZWQgaW4gdXNlci4iLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiY3JlYXRlVXNlciIsCiAgICAgICAgImNvbnN1bWVzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iIF0sCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgImluIiA6ICJib2R5IiwKICAgICAgICAgICJuYW1lIiA6ICJib2R5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiQ3JlYXRlZCB1c2VyIG9iamVjdCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9Vc2VyIgogICAgICAgICAgfQogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICJkZWZhdWx0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJzdWNjZXNzZnVsIG9wZXJhdGlvbiIKICAgICAgICAgIH0sCiAgICAgICAgICAiMjAxIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJDcmVhdGVkIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICIvdXNlci9jcmVhdGVXaXRoQXJyYXkiIDogewogICAgICAicG9zdCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAidXNlciIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiQ3JlYXRlcyBsaXN0IG9mIHVzZXJzIHdpdGggZ2l2ZW4gaW5wdXQgYXJyYXkiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiY3JlYXRlVXNlcnNXaXRoQXJyYXlJbnB1dCIsCiAgICAgICAgImNvbnN1bWVzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iIF0sCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgImluIiA6ICJib2R5IiwKICAgICAgICAgICJuYW1lIiA6ICJib2R5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiTGlzdCBvZiB1c2VyIG9iamVjdCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJzY2hlbWEiIDogewogICAgICAgICAgICAidHlwZSIgOiAiYXJyYXkiLAogICAgICAgICAgICAiaXRlbXMiIDogewogICAgICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL1VzZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiZGVmYXVsdCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iCiAgICAgICAgICB9LAogICAgICAgICAgIjIwMSIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiQ3JlYXRlZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiL3BldC9maW5kQnlUYWdzIiA6IHsKICAgICAgImdldCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAicGV0IiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJGaW5kcyBQZXRzIGJ5IHRhZ3MiLAogICAgICAgICJkZXNjcmlwdGlvbiIgOiAiTXVsdGlwbGUgdGFncyBjYW4gYmUgcHJvdmlkZWQgd2l0aCBjb21tYSBzZXBhcmF0ZWQgc3RyaW5ncy4gVXNlIHRhZzEsIHRhZzIsIHRhZzMgZm9yIHRlc3RpbmcuIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImZpbmRQZXRzQnlUYWdzIiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAidGFncyIsCiAgICAgICAgICAiaW4iIDogInF1ZXJ5IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiVGFncyB0byBmaWx0ZXIgYnkiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAidHlwZSIgOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIiA6IHsKICAgICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICAgIH0sCiAgICAgICAgICAiY29sbGVjdGlvbkZvcm1hdCIgOiAibXVsdGkiCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgICAidHlwZSIgOiAiYXJyYXkiLAogICAgICAgICAgICAgICJpdGVtcyIgOiB7CiAgICAgICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9QZXQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgIjQwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCB0YWcgdmFsdWUiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAiZGVwcmVjYXRlZCIgOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICAiL3VzZXIvbG9nb3V0IiA6IHsKICAgICAgImdldCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAidXNlciIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiTG9ncyBvdXQgY3VycmVudCBsb2dnZWQgaW4gdXNlciBzZXNzaW9uIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImxvZ291dFVzZXIiLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiZGVmYXVsdCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iCiAgICAgICAgICB9LAogICAgICAgICAgIjIwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiT0siCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi9zdG9yZS9vcmRlciIgOiB7CiAgICAgICJwb3N0IiA6IHsKICAgICAgICAidGFncyIgOiBbICJzdG9yZSIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiUGxhY2UgYW4gb3JkZXIgZm9yIGEgcGV0IiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogInBsYWNlT3JkZXIiLAogICAgICAgICJjb25zdW1lcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiBdLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJpbiIgOiAiYm9keSIsCiAgICAgICAgICAibmFtZSIgOiAiYm9keSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIm9yZGVyIHBsYWNlZCBmb3IgcHVyY2hhc2luZyB0aGUgcGV0IiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL09yZGVyIgogICAgICAgICAgfQogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvT3JkZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIE9yZGVyIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICIvcGV0L3twZXRJZH0iIDogewogICAgICAiZ2V0IiA6IHsKICAgICAgICAidGFncyIgOiBbICJwZXQiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkZpbmQgcGV0IGJ5IElEIiwKICAgICAgICAiZGVzY3JpcHRpb24iIDogIlJldHVybnMgYSBzaW5nbGUgcGV0IiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImdldFBldEJ5SWQiLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJuYW1lIiA6ICJwZXRJZCIsCiAgICAgICAgICAiaW4iIDogInBhdGgiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJRCBvZiBwZXQgdG8gcmV0dXJuIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogImludGVnZXIiLAogICAgICAgICAgImZvcm1hdCIgOiAiaW50NjQiCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjIwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAic3VjY2Vzc2Z1bCBvcGVyYXRpb24iLAogICAgICAgICAgICAic2NoZW1hIiA6IHsKICAgICAgICAgICAgICAiJHJlZiIgOiAiIy9kZWZpbml0aW9ucy9QZXQiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIElEIHN1cHBsaWVkIgogICAgICAgICAgfSwKICAgICAgICAgICI0MDQiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlBldCBub3QgZm91bmQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAicG9zdCIgOiB7CiAgICAgICAgInRhZ3MiIDogWyAicGV0IiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJVcGRhdGVzIGEgcGV0IGluIHRoZSBzdG9yZSB3aXRoIGZvcm0gZGF0YSIsCiAgICAgICAgIm9wZXJhdGlvbklkIiA6ICJ1cGRhdGVQZXRXaXRoRm9ybSIsCiAgICAgICAgImNvbnN1bWVzIiA6IFsgImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIgXSwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAicGV0SWQiLAogICAgICAgICAgImluIiA6ICJwYXRoIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSUQgb2YgcGV0IHRoYXQgbmVlZHMgdG8gYmUgdXBkYXRlZCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0sIHsKICAgICAgICAgICJuYW1lIiA6ICJuYW1lIiwKICAgICAgICAgICJpbiIgOiAiZm9ybURhdGEiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJVcGRhdGVkIG5hbWUgb2YgdGhlIHBldCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogZmFsc2UsCiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0sIHsKICAgICAgICAgICJuYW1lIiA6ICJzdGF0dXMiLAogICAgICAgICAgImluIiA6ICJmb3JtRGF0YSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlVwZGF0ZWQgc3RhdHVzIG9mIHRoZSBwZXQiLAogICAgICAgICAgInJlcXVpcmVkIiA6IGZhbHNlLAogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9IF0sCiAgICAgICAgInJlc3BvbnNlcyIgOiB7CiAgICAgICAgICAiMjAxIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJDcmVhdGVkIgogICAgICAgICAgfSwKICAgICAgICAgICI0MDUiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIkludmFsaWQgaW5wdXQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICAiZGVsZXRlIiA6IHsKICAgICAgICAidGFncyIgOiBbICJwZXQiIF0sCiAgICAgICAgInN1bW1hcnkiIDogIkRlbGV0ZXMgYSBwZXQiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiZGVsZXRlUGV0IiwKICAgICAgICAicHJvZHVjZXMiIDogWyAiYXBwbGljYXRpb24vanNvbiIsICJhcHBsaWNhdGlvbi94bWwiIF0sCiAgICAgICAgInBhcmFtZXRlcnMiIDogWyB7CiAgICAgICAgICAibmFtZSIgOiAiYXBpX2tleSIsCiAgICAgICAgICAiaW4iIDogImhlYWRlciIsCiAgICAgICAgICAicmVxdWlyZWQiIDogZmFsc2UsCiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0sIHsKICAgICAgICAgICJuYW1lIiA6ICJwZXRJZCIsCiAgICAgICAgICAiaW4iIDogInBhdGgiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJQZXQgaWQgdG8gZGVsZXRlIiwKICAgICAgICAgICJyZXF1aXJlZCIgOiB0cnVlLAogICAgICAgICAgInR5cGUiIDogImludGVnZXIiLAogICAgICAgICAgImZvcm1hdCIgOiAiaW50NjQiCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjQwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCBJRCBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiMjA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJObyBDb250ZW50IgogICAgICAgICAgfSwKICAgICAgICAgICI0MDQiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIlBldCBub3QgZm91bmQiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIi9zdG9yZS9vcmRlci97b3JkZXJJZH0iIDogewogICAgICAiZ2V0IiA6IHsKICAgICAgICAidGFncyIgOiBbICJzdG9yZSIgXSwKICAgICAgICAic3VtbWFyeSIgOiAiRmluZCBwdXJjaGFzZSBvcmRlciBieSBJRCIsCiAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJGb3IgdmFsaWQgcmVzcG9uc2UgdHJ5IGludGVnZXIgSURzIHdpdGggdmFsdWUgPj0gMSBhbmQgPD0gMTAuIE90aGVyIHZhbHVlcyB3aWxsIGdlbmVyYXRlZCBleGNlcHRpb25zIiwKICAgICAgICAib3BlcmF0aW9uSWQiIDogImdldE9yZGVyQnlJZCIsCiAgICAgICAgInByb2R1Y2VzIiA6IFsgImFwcGxpY2F0aW9uL2pzb24iLCAiYXBwbGljYXRpb24veG1sIiBdLAogICAgICAgICJwYXJhbWV0ZXJzIiA6IFsgewogICAgICAgICAgIm5hbWUiIDogIm9yZGVySWQiLAogICAgICAgICAgImluIiA6ICJwYXRoIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSUQgb2YgcGV0IHRoYXQgbmVlZHMgdG8gYmUgZmV0Y2hlZCIsCiAgICAgICAgICAicmVxdWlyZWQiIDogdHJ1ZSwKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtYXhpbXVtIiA6IDEwLAogICAgICAgICAgIm1pbmltdW0iIDogMSwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0gXSwKICAgICAgICAicmVzcG9uc2VzIiA6IHsKICAgICAgICAgICIyMDAiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInN1Y2Nlc3NmdWwgb3BlcmF0aW9uIiwKICAgICAgICAgICAgInNjaGVtYSIgOiB7CiAgICAgICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvT3JkZXIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiNDAwIiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJJbnZhbGlkIElEIHN1cHBsaWVkIgogICAgICAgICAgfSwKICAgICAgICAgICI0MDQiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIk9yZGVyIG5vdCBmb3VuZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJkZWxldGUiIDogewogICAgICAgICJ0YWdzIiA6IFsgInN0b3JlIiBdLAogICAgICAgICJzdW1tYXJ5IiA6ICJEZWxldGUgcHVyY2hhc2Ugb3JkZXIgYnkgSUQiLAogICAgICAgICJkZXNjcmlwdGlvbiIgOiAiRm9yIHZhbGlkIHJlc3BvbnNlIHRyeSBpbnRlZ2VyIElEcyB3aXRoIHBvc2l0aXZlIGludGVnZXIgdmFsdWUuIE5lZ2F0aXZlIG9yIG5vbi1pbnRlZ2VyIHZhbHVlcyB3aWxsIGdlbmVyYXRlIEFQSSBlcnJvcnMiLAogICAgICAgICJvcGVyYXRpb25JZCIgOiAiZGVsZXRlT3JkZXIiLAogICAgICAgICJwcm9kdWNlcyIgOiBbICJhcHBsaWNhdGlvbi9qc29uIiwgImFwcGxpY2F0aW9uL3htbCIgXSwKICAgICAgICAicGFyYW1ldGVycyIgOiBbIHsKICAgICAgICAgICJuYW1lIiA6ICJvcmRlcklkIiwKICAgICAgICAgICJpbiIgOiAicGF0aCIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIklEIG9mIHRoZSBvcmRlciB0aGF0IG5lZWRzIHRvIGJlIGRlbGV0ZWQiLAogICAgICAgICAgInJlcXVpcmVkIiA6IHRydWUsCiAgICAgICAgICAidHlwZSIgOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSIgOiAxLAogICAgICAgICAgImZvcm1hdCIgOiAiaW50NjQiCiAgICAgICAgfSBdLAogICAgICAgICJyZXNwb25zZXMiIDogewogICAgICAgICAgIjQwMCIgOiB7CiAgICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiSW52YWxpZCBJRCBzdXBwbGllZCIKICAgICAgICAgIH0sCiAgICAgICAgICAiMjA0IiA6IHsKICAgICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJObyBDb250ZW50IgogICAgICAgICAgfSwKICAgICAgICAgICI0MDQiIDogewogICAgICAgICAgICAiZGVzY3JpcHRpb24iIDogIk9yZGVyIG5vdCBmb3VuZCIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJzZWN1cml0eURlZmluaXRpb25zIiA6IHsKICAgICJBUEkgS2V5IiA6IHsKICAgICAgImRlc2NyaXB0aW9uIiA6ICJBUEkgS2V5IiwKICAgICAgInR5cGUiIDogImFwaUtleSIsCiAgICAgICJuYW1lIiA6ICJLZXlJZCIsCiAgICAgICJpbiIgOiAiaGVhZGVyIgogICAgfQogIH0sCiAgImRlZmluaXRpb25zIiA6IHsKICAgICJPcmRlciIgOiB7CiAgICAgICJ0eXBlIiA6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyIgOiB7CiAgICAgICAgImlkIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0sCiAgICAgICAgInBldElkIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0sCiAgICAgICAgInF1YW50aXR5IiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDMyIgogICAgICAgIH0sCiAgICAgICAgInNoaXBEYXRlIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCIgOiAiZGF0ZS10aW1lIgogICAgICAgIH0sCiAgICAgICAgInN0YXR1cyIgOiB7CiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiIgOiAiT3JkZXIgU3RhdHVzIiwKICAgICAgICAgICJlbnVtIiA6IFsgInBsYWNlZCIsICJhcHByb3ZlZCIsICJkZWxpdmVyZWQiIF0KICAgICAgICB9LAogICAgICAgICJjb21wbGV0ZSIgOiB7CiAgICAgICAgICAidHlwZSIgOiAiYm9vbGVhbiIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJ4bWwiIDogewogICAgICAgICJuYW1lIiA6ICJPcmRlciIKICAgICAgfQogICAgfSwKICAgICJDYXRlZ29yeSIgOiB7CiAgICAgICJ0eXBlIiA6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyIgOiB7CiAgICAgICAgImlkIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJ4bWwiIDogewogICAgICAgICJuYW1lIiA6ICJDYXRlZ29yeSIKICAgICAgfQogICAgfSwKICAgICJVc2VyIiA6IHsKICAgICAgInR5cGUiIDogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIiA6IHsKICAgICAgICAiaWQiIDogewogICAgICAgICAgInR5cGUiIDogImludGVnZXIiLAogICAgICAgICAgImZvcm1hdCIgOiAiaW50NjQiCiAgICAgICAgfSwKICAgICAgICAidXNlcm5hbWUiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJmaXJzdE5hbWUiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJsYXN0TmFtZSIgOiB7CiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImVtYWlsIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicGFzc3dvcmQiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJwaG9uZSIgOiB7CiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgInVzZXJTdGF0dXMiIDogewogICAgICAgICAgInR5cGUiIDogImludGVnZXIiLAogICAgICAgICAgImZvcm1hdCIgOiAiaW50MzIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIiA6ICJVc2VyIFN0YXR1cyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJ4bWwiIDogewogICAgICAgICJuYW1lIiA6ICJVc2VyIgogICAgICB9CiAgICB9LAogICAgIlRhZyIgOiB7CiAgICAgICJ0eXBlIiA6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyIgOiB7CiAgICAgICAgImlkIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDY0IgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9CiAgICAgIH0sCiAgICAgICJ4bWwiIDogewogICAgICAgICJuYW1lIiA6ICJUYWciCiAgICAgIH0KICAgIH0sCiAgICAiQXBpUmVzcG9uc2UiIDogewogICAgICAidHlwZSIgOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiIDogewogICAgICAgICJjb2RlIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJpbnRlZ2VyIiwKICAgICAgICAgICJmb3JtYXQiIDogImludDMyIgogICAgICAgIH0sCiAgICAgICAgInR5cGUiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIKICAgICAgICB9LAogICAgICAgICJtZXNzYWdlIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgIlBldCIgOiB7CiAgICAgICJ0eXBlIiA6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiIDogWyAibmFtZSIsICJwaG90b1VybHMiIF0sCiAgICAgICJwcm9wZXJ0aWVzIiA6IHsKICAgICAgICAiaWQiIDogewogICAgICAgICAgInR5cGUiIDogImludGVnZXIiLAogICAgICAgICAgImZvcm1hdCIgOiAiaW50NjQiCiAgICAgICAgfSwKICAgICAgICAiY2F0ZWdvcnkiIDogewogICAgICAgICAgIiRyZWYiIDogIiMvZGVmaW5pdGlvbnMvQ2F0ZWdvcnkiCiAgICAgICAgfSwKICAgICAgICAibmFtZSIgOiB7CiAgICAgICAgICAidHlwZSIgOiAic3RyaW5nIiwKICAgICAgICAgICJleGFtcGxlIiA6ICJkb2dnaWUiCiAgICAgICAgfSwKICAgICAgICAicGhvdG9VcmxzIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJhcnJheSIsCiAgICAgICAgICAieG1sIiA6IHsKICAgICAgICAgICAgIndyYXBwZWQiIDogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgICJpdGVtcyIgOiB7CiAgICAgICAgICAgICJ0eXBlIiA6ICJzdHJpbmciLAogICAgICAgICAgICAieG1sIiA6IHsKICAgICAgICAgICAgICAibmFtZSIgOiAicGhvdG9VcmwiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJ0YWdzIiA6IHsKICAgICAgICAgICJ0eXBlIiA6ICJhcnJheSIsCiAgICAgICAgICAieG1sIiA6IHsKICAgICAgICAgICAgIndyYXBwZWQiIDogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgICJpdGVtcyIgOiB7CiAgICAgICAgICAgICJ4bWwiIDogewogICAgICAgICAgICAgICJuYW1lIiA6ICJ0YWciCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICIkcmVmIiA6ICIjL2RlZmluaXRpb25zL1RhZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJzdGF0dXMiIDogewogICAgICAgICAgInR5cGUiIDogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iIDogInBldCBzdGF0dXMgaW4gdGhlIHN0b3JlIiwKICAgICAgICAgICJlbnVtIiA6IFsgImF2YWlsYWJsZSIsICJwZW5kaW5nIiwgInNvbGQiIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgICJ4bWwiIDogewogICAgICAgICJuYW1lIiA6ICJQZXQiCiAgICAgIH0KICAgIH0KICB9LAogICJleHRlcm5hbERvY3MiIDogewogICAgImRlc2NyaXB0aW9uIiA6ICJGaW5kIG91dCBtb3JlIGFib3V0IFN3YWdnZXIiLAogICAgInVybCIgOiAiaHR0cDovL3N3YWdnZXIuaW8iCiAgfSwKICAieC1heHdheSIgOiB7CiAgICAic2VydmljZVR5cGUiIDogInJlc3QiLAogICAgImJhc2VQYXRocyIgOiBbICJodHRwczovLzE3Mi4xNy4wLjEwOjgwNjUiIF0sCiAgICAiZXhwaXJlZCIgOiBmYWxzZSwKICAgICJyZXRpcmVtZW50RGF0ZSIgOiAwLAogICAgImNvcnNFbmFibGVkIiA6IHRydWUsCiAgICAiZGVwcmVjYXRlZCIgOiBmYWxzZSwKICAgICJhdmFpbGFibGVTREsiIDogewogICAgICAiaW9zLXN3aWZ0IiA6ICIvZGlzY292ZXJ5L3Nkay82ZDIwYjZmNy02NjQ2LTQ5ZTEtYjBkMS03OTE5YzVjNWFhOGMvaW9zLXN3aWZ0IiwKICAgICAgInRpdGFuaXVtIiA6ICIvZGlzY292ZXJ5L3Nkay82ZDIwYjZmNy02NjQ2LTQ5ZTEtYjBkMS03OTE5YzVjNWFhOGMvdGl0YW5pdW0iLAogICAgICAiYW5kcm9pZCIgOiAiL2Rpc2NvdmVyeS9zZGsvNmQyMGI2ZjctNjY0Ni00OWUxLWIwZDEtNzkxOWM1YzVhYThjL2FuZHJvaWQiLAogICAgICAibm9kZWpzIiA6ICIvZGlzY292ZXJ5L3Nkay82ZDIwYjZmNy02NjQ2LTQ5ZTEtYjBkMS03OTE5YzVjNWFhOGMvbm9kZWpzIgogICAgfSwKICAgICJhcGlSZXNvdXJjZVR5cGUiIDogInN3YWdnZXIyMCIsCiAgICAiaWQiIDogIjZkMjBiNmY3LTY2NDYtNDllMS1iMGQxLTc5MTljNWM1YWE4YyIsCiAgICAic3RhdGUiIDogInB1Ymxpc2hlZCIsCiAgICAidGFncyIgOiB7CiAgICAgICJ0eXBlIiA6IFsgImxpdmUiIF0KICAgIH0KICB9Cn0=",
                "version": "1.0.5",
                "contentType": "application/json"
            }
        }
    },
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "petstorelive-https",
        "title": "PetstoreLive HTTPS (V7)",
        "metadata": {
            "id": "8a2e9468764785ef017647d15859026d",
            "audit": {
                "createTimestamp": "2020-12-09T14:04:30.681+0000",
                "createUserId": "DOSA_724648a1f8434758a6bec93050c8677a",
                "modifyTimestamp": "2023-07-21T03:47:08.430+0000",
                "modifyUserId": "DOSA_724648a1f8434758a6bec93050c8677a"
            },
            "scope": {
                "id": "e4efe9b572583eae0172798d82f90596",
                "kind": "Environment",
                "name": "on-premise",
                "title": "Minikube",
                "selfLink": "/management/v1alpha1/environments/on-premise"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "57426",
            "references": [
                {
                    "id": "8a2e9468764785ef017647d156b40268",
                    "kind": "APIService",
                    "name": "petstorelive-https",
                    "scopeKind": "Environment",
                    "scopeName": "on-premise",
                    "selfLink": "/management/v1alpha1/environments/on-premise/apiservices/petstorelive-https",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/on-premise/apiservicerevisions/petstorelive-https"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayAgent",
            "externalAPIID": "6d20b6f7-6646-49e1-b0d1-7919c5c5aa8c"
        },
        "finalizers": [],
        "tags": [
            "APIID_b2f7fb16-5ffb-42bd-ac7b-5ac21665c2a7",
            "type_live"
        ],
        "spec": {
            "apiService": "petstorelive-https",
            "definition": {
                "type": "oas2",
                "value": "",
                "version": "1.0.5",
                "contentType": "application/json"
            }
        }
    }
]
