[
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "e130460d-6e0f-11ec-8f15-000c29f56a2a.1",
        "title": "FHIR Patient - 2022/01/05 - r 1",
        "metadata": {
            "id": "8a2e90957de216a6017e29b91cc92ab1",
            "audit": {
                "createTimestamp": "2022-01-05T10:11:44.457+0000",
                "createUserId": "service-account-324df404-581a-4dd8-a9b6-b89fa18d8019",
                "modifyTimestamp": "2023-07-21T03:46:55.337+0000",
                "modifyUserId": "service-account-324df404-581a-4dd8-a9b6-b89fa18d8019"
            },
            "scope": {
                "id": "8a2e8ff97dca5e85017e29b2d385720f",
                "kind": "Environment",
                "name": "apigateway-v1-7.7",
                "title": "apigateway-v1-7.7",
                "selfLink": "/management/v1alpha1/environments/apigateway-v1-7.7"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "2",
            "references": [
                {
                    "id": "8a2e866e7de2adbf017e29b91a253283",
                    "kind": "APIService",
                    "name": "e130460d-6e0f-11ec-8f15-000c29f56a2a",
                    "scopeKind": "Environment",
                    "scopeName": "apigateway-v1-7.7",
                    "selfLink": "/management/v1alpha1/environments/apigateway-v1-7.7/apiservices/e130460d-6e0f-11ec-8f15-000c29f56a2a",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/apigateway-v1-7.7/apiservicerevisions/e130460d-6e0f-11ec-8f15-000c29f56a2a.1"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayDiscoveryAgent",
            "externalAPIID": "c96ad9d7-b34a-4ffc-bfb4-ec7d2543bf01",
            "externalAPIName": "FHIR Patient",
            "GatewayType": "Edge",
            "majorHash": "10795401067117095711",
            "externalAPIPrimaryKey": "vhost:-path:/patient-routingKey:",
            "minorHash": "737758422486670159"
        },
        "finalizers": [],
        "tags": [
            "Category_ Individuals",
            "Industry_Healthcare",
            "Type_Demo_FHIR",
            "APIID_de8f8ee5-326b-4892-b4b4-a0ad39616705",
            "Standard_FHIR",
            "Category_Identification"
        ],
        "spec": {
            "apiService": "e130460d-6e0f-11ec-8f15-000c29f56a2a",
            "definition": {
                "type": "oas2",
                "value": "",
                "version": "DSTU2",
                "contentType": "application/json"
            }
        }
    }
]
