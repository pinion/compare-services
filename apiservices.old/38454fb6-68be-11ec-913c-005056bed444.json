[
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "38454fb6-68be-11ec-913c-005056bed444.1",
        "title": "FHIR Device - 2021/12/29 - r 1",
        "metadata": {
            "id": "8a2e8a6f7dca5fce017e06dd55eb62ae",
            "audit": {
                "createTimestamp": "2021-12-29T15:44:35.819+0000",
                "createUserId": "service-account-f161c415-37e3-4bd4-b146-15f9256921d7",
                "modifyTimestamp": "2023-07-21T03:47:06.891+0000",
                "modifyUserId": "service-account-f161c415-37e3-4bd4-b146-15f9256921d7"
            },
            "scope": {
                "id": "8a2e8ff97dca5e85017e06d566714811",
                "kind": "Environment",
                "name": "gtw-v7",
                "title": "gtw-v7",
                "selfLink": "/management/v1alpha1/environments/gtw-v7"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "2",
            "references": [
                {
                    "id": "8a2e866e7de2adbf017e06dd53336639",
                    "kind": "APIService",
                    "name": "38454fb6-68be-11ec-913c-005056bed444",
                    "scopeKind": "Environment",
                    "scopeName": "gtw-v7",
                    "selfLink": "/management/v1alpha1/environments/gtw-v7/apiservices/38454fb6-68be-11ec-913c-005056bed444",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/gtw-v7/apiservicerevisions/38454fb6-68be-11ec-913c-005056bed444.1"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayDiscoveryAgent",
            "externalAPIID": "f4e0bf7c-73fd-414b-b156-ab728420e153",
            "externalAPIName": "FHIR Device",
            "GatewayType": "Edge",
            "majorHash": "16966307386843984943",
            "externalAPIPrimaryKey": "vhost:-path:/device-routingKey:",
            "minorHash": "440936055928799885"
        },
        "finalizers": [],
        "tags": [
            "Industry_Healthcare",
            "Type_Demo_FHIR",
            "Category_ Devices",
            "APIID_c9676bc3-5782-4559-bd70-ecc92b1f84f2",
            "Standard_FHIR",
            "Category_Identification"
        ],
        "spec": {
            "apiService": "38454fb6-68be-11ec-913c-005056bed444",
            "definition": {
                "type": "oas2",
                "value": "",
                "version": "DSTU2",
                "contentType": "application/json"
            }
        }
    }
]
