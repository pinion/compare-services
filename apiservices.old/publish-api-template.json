[
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "publish-api-template",
        "title": "Publish API Template (V7)",
        "metadata": {
            "id": "8a2e814276478524017647d14b060212",
            "audit": {
                "createTimestamp": "2020-12-09T14:04:27.270+0000",
                "createUserId": "DOSA_724648a1f8434758a6bec93050c8677a",
                "modifyTimestamp": "2023-07-21T03:47:11.684+0000",
                "modifyUserId": "DOSA_724648a1f8434758a6bec93050c8677a"
            },
            "scope": {
                "id": "e4efe9b572583eae0172798d82f90596",
                "kind": "Environment",
                "name": "on-premise",
                "title": "Minikube",
                "selfLink": "/management/v1alpha1/environments/on-premise"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "57422",
            "references": [
                {
                    "id": "8a2e9468764785ef017647d149500258",
                    "kind": "APIService",
                    "name": "publish-api-template",
                    "scopeKind": "Environment",
                    "scopeName": "on-premise",
                    "selfLink": "/management/v1alpha1/environments/on-premise/apiservices/publish-api-template",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/on-premise/apiservicerevisions/publish-api-template"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayAgent",
            "externalAPIID": "dbac6d3d-817a-408b-b22c-12d2e5b331bb"
        },
        "finalizers": [],
        "tags": [
            "domaine_IARD",
            "env_interne",
            "category_payment",
            "APIID_3a117571-51ba-475b-baee-e90a4f0ab3f6"
        ],
        "spec": {
            "apiService": "publish-api-template",
            "definition": {
                "type": "oas2",
                "value": "",
                "version": "1.0.0",
                "contentType": "application/json"
            }
        }
    },
    {
        "group": "management",
        "apiVersion": "v1alpha1",
        "kind": "APIServiceRevision",
        "name": "publish-api-template.2",
        "title": "Publish API Template (Edge)",
        "metadata": {
            "id": "8a2e8c277649c2d601764cd151e800d0",
            "audit": {
                "createTimestamp": "2020-12-10T13:22:35.112+0000",
                "createUserId": "DOSA_724648a1f8434758a6bec93050c8677a",
                "modifyTimestamp": "2023-07-21T03:47:08.464+0000",
                "modifyUserId": "DOSA_724648a1f8434758a6bec93050c8677a"
            },
            "scope": {
                "id": "e4efe9b572583eae0172798d82f90596",
                "kind": "Environment",
                "name": "on-premise",
                "title": "Minikube",
                "selfLink": "/management/v1alpha1/environments/on-premise"
            },
            "acl": [],
            "accessRights": {
                "canChangeOwner": true,
                "canDelete": true,
                "canWrite": true,
                "canRead": true
            },
            "resourceVersion": "57579",
            "references": [
                {
                    "id": "8a2e9468764785ef017647d149500258",
                    "kind": "APIService",
                    "name": "publish-api-template",
                    "scopeKind": "Environment",
                    "scopeName": "on-premise",
                    "selfLink": "/management/v1alpha1/environments/on-premise/apiservices/publish-api-template",
                    "type": "hard",
                    "group": "management"
                }
            ],
            "selfLink": "/management/v1alpha1/environments/on-premise/apiservicerevisions/publish-api-template.2"
        },
        "attributes": {
            "createdBy": "EnterpriseEdgeGatewayDiscoveryAgent",
            "externalAPIID": "dbac6d3d-817a-408b-b22c-12d2e5b331bb",
            "externalAPIName": "Publish API Template",
            "GatewayType": "Edge",
            "majorHash": "6189895294132883173",
            "APIC_ID": "8a2e9468764785ef017647d14d7d025f",
            "minorHash": "9565565093179011531",
            "prevAPIServiceRevisionID": "8a2e814276478524017647d14b060212"
        },
        "finalizers": [],
        "tags": [
            "domaine_IARD",
            "env_interne",
            "category_payment",
            "APIID_3a117571-51ba-475b-baee-e90a4f0ab3f6"
        ],
        "spec": {
            "apiService": "publish-api-template",
            "definition": {
                "type": "oas2",
                "value": "",
                "version": "1.0.0",
                "contentType": "application/json"
            }
        }
    }
]
