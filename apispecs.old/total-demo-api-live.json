{
  "swagger" : "2.0",
  "info" : {
    "description" : "An API Builder service",
    "version" : "live",
    "title" : "Total Demo API-Live"
  },
  "host" : "traffic.axway-amplify-central.com",
  "basePath" : "/api/total/maxxing",
  "schemes" : [ "https" ],
  "paths" : {
    "/user" : {
      "get" : {
        "tags" : [ "user" ],
        "description" : "Find all users",
        "operationId" : "findUser",
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The find all succeeded, and the results are available.",
            "schema" : {
              "type" : "object",
              "required" : [ "key", "request-id", "success" ],
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "success" : {
                  "type" : "boolean"
                },
                "request-id" : {
                  "type" : "string"
                },
                "message" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string",
                  "enum" : [ "users" ]
                },
                "users" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/user-full"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user" ],
        "description" : "Create a user",
        "operationId" : "createUser",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded", "multipart/form-data" ],
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Create",
          "description" : "Create body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "adresse" : {
                "type" : "string",
                "description" : "adresse field"
              },
              "tel" : {
                "type" : "string",
                "description" : "tel field"
              },
              "nom" : {
                "type" : "string",
                "description" : "nom field"
              },
              "email" : {
                "type" : "string",
                "description" : "email field"
              }
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "201" : {
            "description" : "The create succeeded.",
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "The URL to the newly created instance."
              }
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "description" : "Deletes all users",
        "operationId" : "deleteUser",
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "The delete succeeded."
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/user/distinct/{field}" : {
      "get" : {
        "tags" : [ "user" ],
        "description" : "Find distinct users",
        "operationId" : "findUserDistinctByFIELD",
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of records to fetch. The value must be greater than 0, and no greater than 1000.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of records to skip. The value must not be less than 0.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "Constrains values for fields. The value should be encoded JSON.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "A dictionary of one or more fields specifying sorting of results. In general, you can sort based on any predefined field that you can query using the where operator, as well as on custom fields. The value should be encoded JSON.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "field",
          "in" : "path",
          "description" : "The field name that must be distinct.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Distinct fields response.",
            "schema" : {
              "type" : "object",
              "required" : [ "key", "request-id", "success" ],
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "success" : {
                  "type" : "boolean"
                },
                "request-id" : {
                  "type" : "string"
                },
                "message" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string",
                  "enum" : [ "users" ]
                },
                "users" : {
                  "type" : "array",
                  "uniqueItems" : true,
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/user/query" : {
      "get" : {
        "tags" : [ "user" ],
        "description" : "Query users",
        "operationId" : "findUserQuery",
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of records to fetch. The value must be greater than 0, and no greater than 1000.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of records to skip. The value must not be less than 0.",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "Constrains values for fields. The value should be encoded JSON.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "A dictionary of one or more fields specifying sorting of results. In general, you can sort based on any predefined field that you can query using the where operator, as well as on custom fields. The value should be encoded JSON.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sel",
          "in" : "query",
          "description" : "Selects which fields to return from the query. Others are excluded. The value should be encoded JSON.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "unsel",
          "in" : "query",
          "description" : "Selects which fields to not return from the query. Others are included. The value should be encoded JSON.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The query succeeded, and the results are available.",
            "schema" : {
              "type" : "object",
              "required" : [ "key", "request-id", "success" ],
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "success" : {
                  "type" : "boolean"
                },
                "request-id" : {
                  "type" : "string"
                },
                "message" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string",
                  "enum" : [ "users" ]
                },
                "users" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/user-full"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/user/count" : {
      "get" : {
        "tags" : [ "user" ],
        "description" : "Count users",
        "operationId" : "findUserCount",
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ {
          "name" : "where",
          "in" : "query",
          "description" : "Constrains values for fields. The value should be encoded JSON.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The count succeeded, and the results are available.",
            "schema" : {
              "type" : "object",
              "required" : [ "key", "request-id", "success" ],
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "success" : {
                  "type" : "boolean"
                },
                "request-id" : {
                  "type" : "string"
                },
                "message" : {
                  "type" : "string"
                },
                "user" : {
                  "type" : "integer"
                },
                "url" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string",
                  "enum" : [ "user" ]
                }
              }
            }
          },
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/user/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "description" : "Find one user by ID",
        "operationId" : "findUserByID",
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The user ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The find succeeded, and the results are available.",
            "schema" : {
              "type" : "object",
              "required" : [ "key", "request-id", "success" ],
              "properties" : {
                "code" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "success" : {
                  "type" : "boolean"
                },
                "request-id" : {
                  "type" : "string"
                },
                "message" : {
                  "type" : "string"
                },
                "user" : {
                  "$ref" : "#/definitions/user-full"
                },
                "url" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string",
                  "enum" : [ "user" ]
                }
              }
            }
          },
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "description" : "Update a specific user",
        "operationId" : "updateUserByID",
        "consumes" : [ "application/json", "application/x-www-form-urlencoded", "multipart/form-data" ],
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The user ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Update",
          "description" : "Update body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "adresse" : {
                "type" : "string",
                "description" : "adresse field"
              },
              "tel" : {
                "type" : "string",
                "description" : "tel field"
              },
              "nom" : {
                "type" : "string",
                "description" : "nom field"
              },
              "email" : {
                "type" : "string",
                "description" : "email field"
              }
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "The update succeeded."
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "description" : "Delete a specific user",
        "operationId" : "deleteUserByID",
        "produces" : [ "application/json", "application/xml", "text/yaml", "text/csv", "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The user ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "Response from server",
            "schema" : {
              "$ref" : "#/definitions/ResponseModel"
            }
          },
          "500" : {
            "description" : "Something went wrong during the request; check out the logs on your server.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "204" : {
            "description" : "The delete succeeded."
          },
          "404" : {
            "description" : "No results were found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          },
          "504" : {
            "description" : "The request took too long to process, and the server timed it out.",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "user-full" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "nom" : {
          "type" : "string"
        },
        "adresse" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "tel" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "ResponseModel" : {
      "type" : "object",
      "required" : [ "request-id", "success" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "success" : {
          "type" : "boolean"
        },
        "request-id" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "ErrorModel" : {
      "type" : "object",
      "required" : [ "code", "message", "request-id", "success" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "success" : {
          "type" : "boolean",
          "default" : false
        },
        "request-id" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    }
  },
  "x-axway" : {
    "serviceType" : "rest",
    "image" : "/api/portal/v1.3/discovery/swagger/apis/17613d93-7c00-4920-92b6-1def13a5755e/image",
    "basePaths" : [ "https://traffic.axway-amplify-central.com" ],
    "expired" : false,
    "retirementDate" : 0,
    "corsEnabled" : true,
    "deprecated" : false,
    "availableSDK" : {
      "ios-swift" : "/discovery/sdk/17613d93-7c00-4920-92b6-1def13a5755e/ios-swift",
      "titanium" : "/discovery/sdk/17613d93-7c00-4920-92b6-1def13a5755e/titanium",
      "android" : "/discovery/sdk/17613d93-7c00-4920-92b6-1def13a5755e/android",
      "nodejs" : "/discovery/sdk/17613d93-7c00-4920-92b6-1def13a5755e/nodejs"
    },
    "apiResourceType" : "swagger20",
    "id" : "17613d93-7c00-4920-92b6-1def13a5755e",
    "state" : "published",
    "tags" : {
      "internal" : [ "true" ]
    }
  }
}