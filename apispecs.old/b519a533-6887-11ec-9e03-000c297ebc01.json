{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Outscale",
    "description" : "Welcome to the OUTSCALE API documentation.<br /><br />\n\nThe OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />\n\nNote that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />\n\nYou can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.",
    "termsOfService" : "https://en.outscale.com/terms-of-service/",
    "contact" : {
      "email" : "support@outscale.com"
    },
    "license" : {
      "name" : "BSD 3 Clause",
      "url" : "https://opensource.org/licenses/BSD-3-Clause"
    },
    "version" : "1.15"
  },
  "servers" : [ {
    "url" : "https://api-env.demo.axway.com:8065/api/v1"
  } ],
  "paths" : {
    "/ReadLocations" : {
      "post" : {
        "tags" : [ "Location" ],
        "operationId" : "ReadLocations",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Locations" : {
                      "type" : "array",
                      "description" : "Information about one or more locations.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Code" : {
                            "type" : "string",
                            "description" : "The location code, to be set as the `Location` parameter of the *CreateDirectLink* method when creating a DirectLink."
                          },
                          "Name" : {
                            "type" : "string",
                            "description" : "The name and description of the location, corresponding to a datacenter."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the DirectLink location."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadVpnConnections" : {
      "post" : {
        "tags" : [ "VpnConnection" ],
        "operationId" : "ReadVpnConnections",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the VPN connections (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ConnectionTypes" : {
                        "type" : "array",
                        "description" : "The types of the VPN connections (only `ipsec.1` is supported).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VpnConnectionIds" : {
                        "type" : "array",
                        "description" : "The IDs of the VPN connections.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteDestinationIpRanges" : {
                        "type" : "array",
                        "description" : "The destination IP ranges.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ClientGatewayIds" : {
                        "type" : "array",
                        "description" : "The IDs of the client gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "BgpAsns" : {
                        "type" : "array",
                        "description" : "The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "StaticRoutesOnly" : {
                        "type" : "boolean",
                        "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the VPN connections, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the VPN connections.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the VPN connections.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VirtualGatewayIds" : {
                        "type" : "array",
                        "description" : "The IDs of the virtual gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "VpnConnections" : {
                      "type" : "array",
                      "description" : "Information about one or more VPN connections.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ConnectionType" : {
                            "type" : "string",
                            "description" : "The type of VPN connection (always `ipsec.1`)."
                          },
                          "ClientGatewayId" : {
                            "type" : "string",
                            "description" : "The ID of the client gateway used on the client end of the connection."
                          },
                          "VpnOptions" : {
                            "type" : "object",
                            "properties" : {
                              "Phase1Options" : {
                                "type" : "object",
                                "properties" : {
                                  "DpdTimeoutSeconds" : {
                                    "type" : "integer",
                                    "description" : "The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds."
                                  },
                                  "StartupAction" : {
                                    "type" : "string",
                                    "description" : "The action to carry out when establishing tunnels for a VPN connection."
                                  },
                                  "Phase1IntegrityAlgorithms" : {
                                    "type" : "array",
                                    "description" : "The integrity algorithms allowed for the VPN tunnel for phase 1.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "Phase1LifetimeSeconds" : {
                                    "type" : "integer",
                                    "description" : "The lifetime for phase 1 of the IKE negotiation process, in seconds."
                                  },
                                  "Phase1EncryptionAlgorithms" : {
                                    "type" : "array",
                                    "description" : "The encryption algorithms allowed for the VPN tunnel for phase 1.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "ReplayWindowSize" : {
                                    "type" : "integer",
                                    "description" : "The number of packets in an IKE replay window."
                                  },
                                  "DpdTimeoutAction" : {
                                    "type" : "string",
                                    "description" : "The action to carry out after a Dead Peer Detection (DPD) timeout occurs."
                                  },
                                  "Phase1DhGroupNumbers" : {
                                    "type" : "array",
                                    "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.",
                                    "items" : {
                                      "type" : "integer"
                                    }
                                  },
                                  "IkeVersions" : {
                                    "type" : "array",
                                    "description" : "The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. "
                              },
                              "TunnelInsideIpRange" : {
                                "type" : "string",
                                "description" : "The IP range for the tunnel in your VPN connection."
                              },
                              "Phase2Options" : {
                                "type" : "object",
                                "properties" : {
                                  "Phase2EncryptionAlgorithms" : {
                                    "type" : "array",
                                    "description" : "The encryption algorithms allowed for the VPN tunnel for phase 2.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "Phase2DhGroupNumbers" : {
                                    "type" : "array",
                                    "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 2.",
                                    "items" : {
                                      "type" : "integer"
                                    }
                                  },
                                  "Phase2LifetimeSeconds" : {
                                    "type" : "integer",
                                    "description" : "The lifetime for phase 2 of the Internet Key Exchange (IKE) negociation process, in seconds."
                                  },
                                  "Phase2IntegrityAlgorithms" : {
                                    "type" : "array",
                                    "description" : "The integrity algorithms allowed for the VPN tunnel for phase 2.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "PreSharedKey" : {
                                    "type" : "string",
                                    "description" : "The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway."
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. "
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the VPN options."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the VPN connection (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                          },
                          "ClientGatewayConfiguration" : {
                            "type" : "string",
                            "description" : "Example configuration for the client gateway."
                          },
                          "Routes" : {
                            "type" : "array",
                            "description" : "Information about one or more static routes associated with the VPN connection, if any.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "RouteType" : {
                                  "type" : "string",
                                  "description" : "The type of route (always `static`)."
                                },
                                "State" : {
                                  "type" : "string",
                                  "description" : "The current state of the static route (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                                },
                                "DestinationIpRange" : {
                                  "type" : "string",
                                  "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the route."
                            }
                          },
                          "VpnConnectionId" : {
                            "type" : "string",
                            "description" : "The ID of the VPN connection."
                          },
                          "StaticRoutesOnly" : {
                            "type" : "boolean",
                            "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
                          },
                          "VirtualGatewayId" : {
                            "type" : "string",
                            "description" : "The ID of the virtual gateway used on the OUTSCALE end of the connection."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the VPN connection.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about a VPN connection."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UnlinkPublicIp" : {
      "post" : {
        "tags" : [ "PublicIp" ],
        "operationId" : "UnlinkPublicIp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "PublicIp" : {
                    "type" : "string",
                    "description" : "The EIP. This parameter is required unless you use the `LinkPublicIpId` parameter."
                  },
                  "LinkPublicIpId" : {
                    "type" : "string",
                    "description" : "The ID representing the association of the EIP with the VM or the NIC. This parameter is required unless you use the `PublicIp` parameter."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadVolumes" : {
      "post" : {
        "tags" : [ "Volume" ],
        "operationId" : "ReadVolumes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "VolumeSizes" : {
                        "type" : "array",
                        "description" : "The sizes of the volumes, in gibibytes (GiB).",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "CreationDates" : {
                        "type" : "array",
                        "description" : "The dates and times at which the volumes were created.",
                        "items" : {
                          "type" : "string",
                          "format" : "date"
                        }
                      },
                      "LinkVolumeDeleteOnVmDeletion" : {
                        "type" : "boolean",
                        "description" : "Whether the volumes are deleted or not when terminating the VMs."
                      },
                      "LinkVolumeVmIds" : {
                        "type" : "array",
                        "description" : "One or more IDs of VMs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VolumeIds" : {
                        "type" : "array",
                        "description" : "The IDs of the volumes.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SnapshotIds" : {
                        "type" : "array",
                        "description" : "The snapshots from which the volumes were created.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkVolumeDeviceNames" : {
                        "type" : "array",
                        "description" : "The VM device names.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the volumes.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the volumes.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkVolumeLinkStates" : {
                        "type" : "array",
                        "description" : "The attachment states of the volumes (`attaching` \\| `detaching` \\| `attached` \\| `detached`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VolumeTypes" : {
                        "type" : "array",
                        "description" : "The types of the volumes (`standard` \\| `gp2` \\| `io1`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SubregionNames" : {
                        "type" : "array",
                        "description" : "The names of the Subregions in which the volumes were created.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkVolumeLinkDates" : {
                        "type" : "array",
                        "description" : "The dates and times at which the volumes were created.",
                        "items" : {
                          "type" : "string",
                          "format" : "date"
                        }
                      },
                      "VolumeStates" : {
                        "type" : "array",
                        "description" : "The states of the volumes (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the volumes, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Volumes" : {
                      "type" : "array",
                      "description" : "Information about one or more volumes.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "SnapshotId" : {
                            "type" : "string",
                            "description" : "The snapshot from which the volume was created."
                          },
                          "VolumeId" : {
                            "type" : "string",
                            "description" : "The ID of the volume."
                          },
                          "VolumeType" : {
                            "type" : "string",
                            "description" : "The type of the volume (`standard` \\| `gp2` \\| `io1`)."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the volume (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`)."
                          },
                          "Size" : {
                            "type" : "integer",
                            "description" : "The size of the volume, in gibibytes (GiB)."
                          },
                          "LinkedVolumes" : {
                            "type" : "array",
                            "description" : "Information about your volume attachment.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "VolumeId" : {
                                  "type" : "string",
                                  "description" : "The ID of the volume."
                                },
                                "DeleteOnVmDeletion" : {
                                  "type" : "boolean",
                                  "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                                },
                                "State" : {
                                  "type" : "string",
                                  "description" : "The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`)."
                                },
                                "VmId" : {
                                  "type" : "string",
                                  "description" : "The ID of the VM."
                                },
                                "DeviceName" : {
                                  "type" : "string",
                                  "description" : "The name of the device."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about volume attachment."
                            }
                          },
                          "Iops" : {
                            "type" : "integer",
                            "description" : "The number of I/O operations per second (IOPS):<br />\n- For `io1` volumes, the number of provisioned IOPS<br />\n- For `gp2` volumes, the baseline performance of the volume"
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the volume.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "SubregionName" : {
                            "type" : "string",
                            "description" : "The Subregion in which the volume was created."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the volume."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteNetAccessPoint" : {
      "post" : {
        "tags" : [ "NetAccessPoint" ],
        "operationId" : "DeleteNetAccessPoint",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetAccessPointId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "NetAccessPointId" : {
                    "type" : "string",
                    "description" : "The ID of the Net access point."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeregisterVmsInLoadBalancer" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "DeregisterVmsInLoadBalancer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "BackendVmIds", "LoadBalancerName" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer."
                  },
                  "BackendVmIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of back-end VMs.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadCas" : {
      "post" : {
        "tags" : [ "Ca" ],
        "operationId" : "ReadCas",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "Descriptions" : {
                        "type" : "array",
                        "description" : "The descriptions of the CAs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "CaFingerprints" : {
                        "type" : "array",
                        "description" : "The fingerprints of the CAs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "CaIds" : {
                        "type" : "array",
                        "description" : "The IDs of the CAs.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Cas" : {
                      "type" : "array",
                      "description" : "Information about one or more CAs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Description" : {
                            "type" : "string",
                            "description" : "The description of the CA."
                          },
                          "CaId" : {
                            "type" : "string",
                            "description" : "The ID of the CA."
                          },
                          "CaFingerprint" : {
                            "type" : "string",
                            "description" : "The fingerprint of the CA."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the Client Certificate Authority (CA)."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteVms" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "DeleteVms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VmIds" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of VMs.",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Vms" : {
                      "type" : "array",
                      "description" : "Information about one or more terminated VMs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "CurrentState" : {
                            "type" : "string",
                            "description" : "The current state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the VM."
                          },
                          "PreviousState" : {
                            "type" : "string",
                            "description" : "The previous state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the state of the VM."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadAccessKeys" : {
      "post" : {
        "tags" : [ "AccessKey" ],
        "operationId" : "ReadAccessKeys",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the access keys (`ACTIVE` \\| `INACTIVE`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AccessKeyIds" : {
                        "type" : "array",
                        "description" : "The IDs of the access keys.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "AccessKeys" : {
                      "type" : "array",
                      "description" : "A list of access keys.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "CreationDate" : {
                            "type" : "string",
                            "description" : "The date and time of creation of the access key.",
                            "format" : "datetime"
                          },
                          "ExpirationDate" : {
                            "type" : "string",
                            "description" : "The date at which the access key expires.",
                            "format" : "datetime"
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
                          },
                          "AccessKeyId" : {
                            "type" : "string",
                            "description" : "The ID of the access key."
                          },
                          "LastModificationDate" : {
                            "type" : "string",
                            "description" : "The date and time of the last modification of the access key.",
                            "format" : "datetime"
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the access key."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateRoute" : {
      "post" : {
        "tags" : [ "Route" ],
        "operationId" : "UpdateRoute",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DestinationIpRange", "RouteTableId" ],
                "type" : "object",
                "properties" : {
                  "NatServiceId" : {
                    "type" : "string",
                    "description" : "The ID of a NAT service."
                  },
                  "RouteTableId" : {
                    "type" : "string",
                    "description" : "The ID of the route table."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DestinationIpRange" : {
                    "type" : "string",
                    "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of a NAT VM in your Net."
                  },
                  "NetPeeringId" : {
                    "type" : "string",
                    "description" : "The ID of a Net peering connection."
                  },
                  "GatewayId" : {
                    "type" : "string",
                    "description" : "The ID of an Internet service or virtual gateway attached to your Net."
                  },
                  "NicId" : {
                    "type" : "string",
                    "description" : "The ID of a network interface card (NIC)."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "RouteTable" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the route table."
                        },
                        "RouteTableId" : {
                          "type" : "string",
                          "description" : "The ID of the route table."
                        },
                        "RoutePropagatingVirtualGateways" : {
                          "type" : "array",
                          "description" : "Information about virtual gateways propagating routes.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "VirtualGatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the virtual gateway."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route propagating virtual gateway."
                          }
                        },
                        "LinkRouteTables" : {
                          "type" : "array",
                          "description" : "One or more associations between the route table and Subnets.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "RouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the route table."
                              },
                              "LinkRouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the association between the route table and the Subnet."
                              },
                              "SubnetId" : {
                                "type" : "string",
                                "description" : "The ID of the Subnet."
                              },
                              "Main" : {
                                "type" : "boolean",
                                "description" : "If true, the route table is the main one."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "One or more associations between the route table and the Subnets."
                          }
                        },
                        "Routes" : {
                          "type" : "array",
                          "description" : "One or more routes in the route table.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "NatServiceId" : {
                                "type" : "string",
                                "description" : "The ID of a NAT service attached to the Net."
                              },
                              "VmAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the VM."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                              },
                              "CreationMethod" : {
                                "type" : "string",
                                "description" : "The method used to create the route."
                              },
                              "DestinationIpRange" : {
                                "type" : "string",
                                "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                              },
                              "VmId" : {
                                "type" : "string",
                                "description" : "The ID of a VM specified in a route in the table."
                              },
                              "NetPeeringId" : {
                                "type" : "string",
                                "description" : "The ID of the Net peering connection."
                              },
                              "NetAccessPointId" : {
                                "type" : "string",
                                "description" : "The ID of the Net access point."
                              },
                              "GatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                              },
                              "DestinationServiceId" : {
                                "type" : "string",
                                "description" : "The ID of the OUTSCALE service."
                              },
                              "NicId" : {
                                "type" : "string",
                                "description" : "The ID of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the route table.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the route table."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/RejectNetPeering" : {
      "post" : {
        "tags" : [ "NetPeering" ],
        "operationId" : "RejectNetPeering",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetPeeringId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "NetPeeringId" : {
                    "type" : "string",
                    "description" : "The ID of the Net peering connection you want to reject."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "409" : {
            "description" : "The HTTP 409 response (Conflict).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreatePublicIp" : {
      "post" : {
        "tags" : [ "PublicIp" ],
        "operationId" : "CreatePublicIp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "PublicIp" : {
                      "type" : "object",
                      "properties" : {
                        "NicAccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the NIC."
                        },
                        "PublicIp" : {
                          "type" : "string",
                          "description" : "The External IP address (EIP) associated with the NAT service."
                        },
                        "PrivateIp" : {
                          "type" : "string",
                          "description" : "The private IP address associated with the EIP."
                        },
                        "LinkPublicIpId" : {
                          "type" : "string",
                          "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                        },
                        "VmId" : {
                          "type" : "string",
                          "description" : "The ID of the VM the External IP (EIP) is associated with (if any)."
                        },
                        "PublicIpId" : {
                          "type" : "string",
                          "description" : "The allocation ID of the EIP associated with the NAT service."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the EIP.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "NicId" : {
                          "type" : "string",
                          "description" : "The ID of the NIC the EIP is associated with (if any)."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the public IP."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteVolume" : {
      "post" : {
        "tags" : [ "Volume" ],
        "operationId" : "DeleteVolume",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VolumeId" ],
                "type" : "object",
                "properties" : {
                  "VolumeId" : {
                    "type" : "string",
                    "description" : "The ID of the volume you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateSubnet" : {
      "post" : {
        "tags" : [ "Subnet" ],
        "operationId" : "UpdateSubnet",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "MapPublicIpOnLaunch", "SubnetId" ],
                "type" : "object",
                "properties" : {
                  "MapPublicIpOnLaunch" : {
                    "type" : "boolean",
                    "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "SubnetId" : {
                    "type" : "string",
                    "description" : "The ID of the Subnet."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Subnet" : {
                      "type" : "object",
                      "properties" : {
                        "IpRange" : {
                          "type" : "string",
                          "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net in which the Subnet is."
                        },
                        "MapPublicIpOnLaunch" : {
                          "type" : "boolean",
                          "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
                        },
                        "AvailableIpsCount" : {
                          "type" : "integer",
                          "description" : "The number of available IP addresses in the Subnets."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the Subnet (`pending` \\| `available`)."
                        },
                        "SubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Subnet."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Subnet.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "SubregionName" : {
                          "type" : "string",
                          "description" : "The name of the Subregion in which the Subnet is located."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Subnet."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateServerCertificate" : {
      "post" : {
        "tags" : [ "ServerCertificate" ],
        "operationId" : "CreateServerCertificate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Body", "Name", "PrivateKey" ],
                "type" : "object",
                "properties" : {
                  "Path" : {
                    "type" : "string",
                    "description" : "The path to the server certificate, set to a slash (/) if not specified."
                  },
                  "Chain" : {
                    "type" : "string",
                    "description" : "The PEM-encoded intermediate certification authorities."
                  },
                  "PrivateKey" : {
                    "type" : "string",
                    "description" : "The PEM-encoded private key matching the certificate."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Body" : {
                    "type" : "string",
                    "description" : "The PEM-encoded X509 certificate."
                  },
                  "Name" : {
                    "type" : "string",
                    "description" : "A unique name for the certificate. Constraints: 1-128 alphanumeric characters, pluses (+), equals (=), commas (,), periods (.), at signs (@), minuses (-), or underscores (_)."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ServerCertificate" : {
                      "type" : "object",
                      "properties" : {
                        "Path" : {
                          "type" : "string",
                          "description" : "The path to the server certificate."
                        },
                        "UploadDate" : {
                          "type" : "string",
                          "description" : "The date at which the server certificate has been uploaded.",
                          "format" : "date"
                        },
                        "ExpirationDate" : {
                          "type" : "string",
                          "description" : "The date at which the server certificate expires.",
                          "format" : "date"
                        },
                        "Id" : {
                          "type" : "string",
                          "description" : "The ID of the server certificate."
                        },
                        "Name" : {
                          "type" : "string",
                          "description" : "The name of the server certificate."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the server certificate."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteVirtualGateway" : {
      "post" : {
        "tags" : [ "VirtualGateway" ],
        "operationId" : "DeleteVirtualGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VirtualGatewayId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VirtualGatewayId" : {
                    "type" : "string",
                    "description" : "The ID of the virtual gateway you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateVpnConnectionRoute" : {
      "post" : {
        "tags" : [ "VpnConnection" ],
        "operationId" : "CreateVpnConnectionRoute",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DestinationIpRange", "VpnConnectionId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DestinationIpRange" : {
                    "type" : "string",
                    "description" : "The network prefix of the route, in CIDR notation (for example, 10.12.0.0/16)."
                  },
                  "VpnConnectionId" : {
                    "type" : "string",
                    "description" : "The ID of the target VPN connection of the static route."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadSnapshotExportTasks" : {
      "post" : {
        "tags" : [ "Snapshot" ],
        "operationId" : "ReadSnapshotExportTasks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "TaskIds" : {
                        "type" : "array",
                        "description" : "The IDs of the export tasks.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "SnapshotExportTasks" : {
                      "type" : "array",
                      "description" : "Information about one or more snapshot export tasks.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "SnapshotId" : {
                            "type" : "string",
                            "description" : "The ID of the snapshot to be exported."
                          },
                          "Comment" : {
                            "type" : "string",
                            "description" : "If the snapshot export task fails, an error message appears."
                          },
                          "Progress" : {
                            "type" : "integer",
                            "description" : "The progress of the snapshot export task, as a percentage."
                          },
                          "TaskId" : {
                            "type" : "string",
                            "description" : "The ID of the snapshot export task."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the snapshot export task (`pending` \\| `active` \\| `completed` \\| `failed`)."
                          },
                          "OsuExport" : {
                            "required" : [ "DiskImageFormat", "OsuBucket" ],
                            "type" : "object",
                            "properties" : {
                              "OsuBucket" : {
                                "type" : "string",
                                "description" : "The name of the OOS bucket the snapshot is exported to."
                              },
                              "OsuPrefix" : {
                                "type" : "string",
                                "description" : "The prefix for the key of the OOS object corresponding to the snapshot."
                              },
                              "DiskImageFormat" : {
                                "type" : "string",
                                "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the snapshot export task."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the snapshot export task.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the snapshot export task."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadLoadBalancerTags" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "ReadLoadBalancerTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerNames" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerNames" : {
                    "type" : "array",
                    "description" : "One or more load balancer names.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Tags" : {
                      "type" : "array",
                      "description" : "Information about one or more load balancer tags.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "LoadBalancerName" : {
                            "type" : "string",
                            "description" : "The name of the load balancer."
                          },
                          "Value" : {
                            "type" : "string",
                            "description" : "The value of the tag."
                          },
                          "Key" : {
                            "type" : "string",
                            "description" : "The key of the tag."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the load balancer tag."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadVmTypes" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "ReadVmTypes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "VolumeSizes" : {
                        "type" : "array",
                        "description" : "The size of one ephemeral storage disk, in gibibytes (GiB).",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "VcoreCounts" : {
                        "type" : "array",
                        "description" : "The numbers of vCores.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "VolumeCounts" : {
                        "type" : "array",
                        "description" : "The maximum number of ephemeral storage disks.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "MemorySizes" : {
                        "type" : "array",
                        "description" : "The amounts of memory, in gibibytes (GiB).",
                        "items" : {
                          "type" : "number",
                          "format" : "float"
                        }
                      },
                      "VmTypeNames" : {
                        "type" : "array",
                        "description" : "The names of the VM types. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "BsuOptimized" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the VM is optimized for BSU I/O."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "VmTypes" : {
                      "type" : "array",
                      "description" : "Information about one or more VM types.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "MemorySize" : {
                            "type" : "number",
                            "description" : "The amount of memory, in gibibytes.",
                            "format" : "float"
                          },
                          "VcoreCount" : {
                            "type" : "integer",
                            "description" : "The number of vCores."
                          },
                          "MaxPrivateIps" : {
                            "type" : "integer",
                            "description" : "The maximum number of private IP addresses per network interface card (NIC)."
                          },
                          "VmTypeName" : {
                            "type" : "string",
                            "description" : "The name of the VM type."
                          },
                          "VolumeCount" : {
                            "type" : "integer",
                            "description" : "The maximum number of ephemeral storage disks."
                          },
                          "VolumeSize" : {
                            "type" : "integer",
                            "description" : "The size of one ephemeral storage disk, in gibibytes (GiB)."
                          },
                          "BsuOptimized" : {
                            "type" : "boolean",
                            "description" : "Indicates whether the VM is optimized for BSU I/O."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the VM type."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/StartVms" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "StartVms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VmIds" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of VMs.",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Vms" : {
                      "type" : "array",
                      "description" : "Information about one or more started VMs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "CurrentState" : {
                            "type" : "string",
                            "description" : "The current state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the VM."
                          },
                          "PreviousState" : {
                            "type" : "string",
                            "description" : "The previous state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the state of the VM."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/RebootVms" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "RebootVms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VmIds" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of the VMs you want to reboot.",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateDhcpOptions" : {
      "post" : {
        "tags" : [ "DhcpOption" ],
        "operationId" : "CreateDhcpOptions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "NtpServers" : {
                    "type" : "array",
                    "description" : "The IP addresses of the Network Time Protocol (NTP) servers.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DomainName" : {
                    "type" : "string",
                    "description" : "Specify a domain name (for example, MyCompany.com). You can specify only one domain name."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DomainNameServers" : {
                    "type" : "array",
                    "description" : "The IP addresses of domain name servers. If no IP addresses are specified, the `OutscaleProvidedDNS` value is set by default.",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "DhcpOptionsSet" : {
                      "type" : "object",
                      "properties" : {
                        "DhcpOptionsSetId" : {
                          "type" : "string",
                          "description" : "The ID of the DHCP options set."
                        },
                        "NtpServers" : {
                          "type" : "array",
                          "description" : "One or more IP addresses for the NTP servers.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "DomainName" : {
                          "type" : "string",
                          "description" : "The domain name."
                        },
                        "Default" : {
                          "type" : "boolean",
                          "description" : "If true, the DHCP options set is a default one. If false, it is not."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the DHCP options set.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "DomainNameServers" : {
                          "type" : "array",
                          "description" : "One or more IP addresses for the domain name servers.",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the DHCP options set."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/LinkInternetService" : {
      "post" : {
        "tags" : [ "InternetService" ],
        "operationId" : "LinkInternetService",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "InternetServiceId", "NetId" ],
                "type" : "object",
                "properties" : {
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net to which you want to attach the Internet service."
                  },
                  "InternetServiceId" : {
                    "type" : "string",
                    "description" : "The ID of the Internet service you want to attach."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadRegions" : {
      "post" : {
        "tags" : [ "Region" ],
        "operationId" : "ReadRegions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Regions" : {
                      "type" : "array",
                      "description" : "Information about one or more Regions.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Endpoint" : {
                            "type" : "string",
                            "description" : "The hostname of the gateway to access the Region."
                          },
                          "RegionName" : {
                            "type" : "string",
                            "description" : "The administrative name of the Region."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the Region."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteCa" : {
      "post" : {
        "tags" : [ "Ca" ],
        "operationId" : "DeleteCa",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "CaId" ],
                "type" : "object",
                "properties" : {
                  "CaId" : {
                    "type" : "string",
                    "description" : "The ID of the CA you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadPublicIpRanges" : {
      "post" : {
        "tags" : [ "PublicIp" ],
        "operationId" : "ReadPublicIpRanges",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "PublicIps" : {
                      "type" : "array",
                      "description" : "The list of public IPv4 addresses used in the Region, in CIDR notation.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteKeypair" : {
      "post" : {
        "tags" : [ "Keypair" ],
        "operationId" : "DeleteKeypair",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "KeypairName" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "KeypairName" : {
                    "type" : "string",
                    "description" : "The name of the keypair you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadNetAccessPointServices" : {
      "post" : {
        "tags" : [ "NetAccessPoint" ],
        "operationId" : "ReadNetAccessPointServices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "ServiceIds" : {
                        "type" : "array",
                        "description" : "The IDs of the services.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ServiceNames" : {
                        "type" : "array",
                        "description" : "The names of the services.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Services" : {
                      "type" : "array",
                      "description" : "The names of the services you can use for Net access points.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ServiceName" : {
                            "type" : "string",
                            "description" : "The name of the service."
                          },
                          "IpRanges" : {
                            "type" : "array",
                            "description" : "The list of network prefixes used by the service, in CIDR notation.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "ServiceId" : {
                            "type" : "string",
                            "description" : "The ID of the service."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the service."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UnlinkInternetService" : {
      "post" : {
        "tags" : [ "InternetService" ],
        "operationId" : "UnlinkInternetService",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "InternetServiceId", "NetId" ],
                "type" : "object",
                "properties" : {
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net from which you want to detach the Internet service."
                  },
                  "InternetServiceId" : {
                    "type" : "string",
                    "description" : "The ID of the Internet service you want to detach."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/StopVms" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "StopVms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VmIds" ],
                "type" : "object",
                "properties" : {
                  "ForceStop" : {
                    "type" : "boolean",
                    "description" : "Forces the VM to stop."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of VMs.",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Vms" : {
                      "type" : "array",
                      "description" : "Information about one or more stopped VMs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "CurrentState" : {
                            "type" : "string",
                            "description" : "The current state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the VM."
                          },
                          "PreviousState" : {
                            "type" : "string",
                            "description" : "The previous state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the state of the VM."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateVms" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "CreateVms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ImageId" ],
                "type" : "object",
                "properties" : {
                  "SecurityGroups" : {
                    "type" : "array",
                    "description" : "One or more names of security groups for the VMs.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "VmInitiatedShutdownBehavior" : {
                    "type" : "string",
                    "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated."
                  },
                  "BootOnCreation" : {
                    "type" : "boolean",
                    "description" : "By default or if true, the VM is started on creation. If false, the VM is stopped on creation."
                  },
                  "UserData" : {
                    "type" : "string",
                    "description" : "Data or script used to add a specific configuration to the VM. It must be base64-encoded."
                  },
                  "MaxVmsCount" : {
                    "type" : "integer",
                    "description" : "The maximum number of VMs you want to create. If all the VMs cannot be created, the largest possible number of VMs above MinVmsCount is created."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "BlockDeviceMappings" : {
                    "type" : "array",
                    "description" : "One or more block device mappings.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "Bsu" : {
                          "type" : "object",
                          "properties" : {
                            "SnapshotId" : {
                              "type" : "string",
                              "description" : "The ID of the snapshot used to create the volume."
                            },
                            "VolumeType" : {
                              "type" : "string",
                              "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                            },
                            "DeleteOnVmDeletion" : {
                              "type" : "boolean",
                              "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                            },
                            "Iops" : {
                              "type" : "integer",
                              "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                            },
                            "VolumeSize" : {
                              "type" : "integer",
                              "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the BSU volume to create."
                        },
                        "NoDevice" : {
                          "type" : "string",
                          "description" : "Removes the device which is included in the block device mapping of the OMI."
                        },
                        "VirtualDeviceName" : {
                          "type" : "string",
                          "description" : "The name of the virtual device (ephemeralN)."
                        },
                        "DeviceName" : {
                          "type" : "string",
                          "description" : "The name of the device."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the block device mapping."
                    }
                  },
                  "SubnetId" : {
                    "type" : "string",
                    "description" : "The ID of the Subnet in which you want to create the VM."
                  },
                  "DeletionProtection" : {
                    "type" : "boolean",
                    "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
                  },
                  "SecurityGroupIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of security group for the VMs.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "Nics" : {
                    "type" : "array",
                    "description" : "One or more NICs. If you specify this parameter, you must define one NIC as the primary network interface of the VM with `0` as its device number.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "SecondaryPrivateIpCount" : {
                          "type" : "integer",
                          "description" : "The number of secondary private IP addresses, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP address in the `PrivateIps` parameter."
                        },
                        "DeviceNumber" : {
                          "type" : "integer",
                          "description" : "The index of the VM device for the NIC attachment (between 0 and 7, both included). This parameter is required if you create a NIC when creating the VM."
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the NIC, if you are creating a NIC when creating the VM."
                        },
                        "DeleteOnVmDeletion" : {
                          "type" : "boolean",
                          "description" : "By default or if set to true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](#updatenic)."
                        },
                        "PrivateIps" : {
                          "type" : "array",
                          "description" : "One or more private IP addresses to assign to the NIC, if you create a NIC when creating a VM. Only one private IP address can be the primary private IP address.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PrivateIp" : {
                                "type" : "string",
                                "description" : "The private IP address of the NIC."
                              },
                              "IsPrimary" : {
                                "type" : "boolean",
                                "description" : "If true, the IP address is the primary private IP address of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the private IP."
                          }
                        },
                        "SubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Subnet for the NIC, if you create a NIC when creating a VM."
                        },
                        "SecurityGroupIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the NIC, if you acreate a NIC when creating a VM.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "NicId" : {
                          "type" : "string",
                          "description" : "The ID of the NIC, if you are attaching an existing NIC when creating a VM."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the network interface card (NIC) when creating a virtual machine (VM)."
                    }
                  },
                  "KeypairName" : {
                    "type" : "string",
                    "description" : "The name of the keypair."
                  },
                  "BsuOptimized" : {
                    "type" : "boolean",
                    "description" : "If true, the VM is created with optimized BSU I/O."
                  },
                  "Placement" : {
                    "type" : "object",
                    "properties" : {
                      "Tenancy" : {
                        "type" : "string",
                        "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
                      },
                      "SubregionName" : {
                        "type" : "string",
                        "description" : "The name of the Subregion."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the placement of the VM."
                  },
                  "PrivateIps" : {
                    "type" : "array",
                    "description" : "One or more private IP addresses of the VM.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "ImageId" : {
                    "type" : "string",
                    "description" : "The ID of the OMI used to create the VM. You can find the list of OMIs by calling the [ReadImages](#readimages) method."
                  },
                  "VmType" : {
                    "type" : "string",
                    "description" : "The type of VM (`t2.small` by default).<br />\nFor more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
                  },
                  "MinVmsCount" : {
                    "type" : "integer",
                    "description" : "The minimum number of VMs you want to create. If this number of VMs cannot be created, no VMs are created."
                  },
                  "Performance" : {
                    "type" : "string",
                    "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`).",
                    "enum" : [ "medium", "high", "highest" ],
                    "default" : "high"
                  },
                  "ClientToken" : {
                    "type" : "string",
                    "description" : "A unique identifier which enables you to manage the idempotency."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Vms" : {
                      "type" : "array",
                      "description" : "Information about one or more created VMs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "SecurityGroups" : {
                            "type" : "array",
                            "description" : "One or more security groups associated with the VM.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "SecurityGroupName" : {
                                  "type" : "string",
                                  "description" : "The name of the security group."
                                },
                                "SecurityGroupId" : {
                                  "type" : "string",
                                  "description" : "The ID of the security group."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the security group."
                            }
                          },
                          "CreationDate" : {
                            "type" : "string",
                            "description" : "The date and time at which the VM was created.",
                            "format" : "datetime"
                          },
                          "VmInitiatedShutdownBehavior" : {
                            "type" : "string",
                            "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted."
                          },
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net in which the VM is running."
                          },
                          "RootDeviceName" : {
                            "type" : "string",
                            "description" : "The name of the root device for the VM (for example, /dev/vda1)."
                          },
                          "PrivateDnsName" : {
                            "type" : "string",
                            "description" : "The name of the private DNS."
                          },
                          "UserData" : {
                            "type" : "string",
                            "description" : "The Base64-encoded MIME user data."
                          },
                          "BlockDeviceMappings" : {
                            "type" : "array",
                            "description" : "The block device mapping of the VM.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "Bsu" : {
                                  "type" : "object",
                                  "properties" : {
                                    "VolumeId" : {
                                      "type" : "string",
                                      "description" : "The ID of the volume."
                                    },
                                    "DeleteOnVmDeletion" : {
                                      "type" : "boolean",
                                      "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                                    },
                                    "State" : {
                                      "type" : "string",
                                      "description" : "The state of the volume."
                                    },
                                    "LinkDate" : {
                                      "type" : "string",
                                      "description" : "The time and date of attachment of the volume to the VM.",
                                      "format" : "date"
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the created BSU volume."
                                },
                                "DeviceName" : {
                                  "type" : "string",
                                  "description" : "The name of the device."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the created block device mapping."
                            }
                          },
                          "SubnetId" : {
                            "type" : "string",
                            "description" : "The ID of the Subnet for the VM."
                          },
                          "LaunchNumber" : {
                            "type" : "integer",
                            "description" : "The number for the VM when launching a group of several VMs (for example, 0, 1, 2, and so on)."
                          },
                          "BsuOptimized" : {
                            "type" : "boolean",
                            "description" : "If true, the VM is optimized for BSU I/O."
                          },
                          "IsSourceDestChecked" : {
                            "type" : "boolean",
                            "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                          },
                          "ReservationId" : {
                            "type" : "string",
                            "description" : "The reservation ID of the VM."
                          },
                          "PrivateIp" : {
                            "type" : "string",
                            "description" : "The primary private IP address of the VM."
                          },
                          "Placement" : {
                            "type" : "object",
                            "properties" : {
                              "Tenancy" : {
                                "type" : "string",
                                "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
                              },
                              "SubregionName" : {
                                "type" : "string",
                                "description" : "The name of the Subregion."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the placement of the VM."
                          },
                          "ImageId" : {
                            "type" : "string",
                            "description" : "The ID of the OMI used to create the VM."
                          },
                          "VmType" : {
                            "type" : "string",
                            "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the VM.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "ProductCodes" : {
                            "type" : "array",
                            "description" : "The product code associated with the OMI used to create the VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "Architecture" : {
                            "type" : "string",
                            "description" : "The architecture of the VM (`i386` \\| `x86_64`)."
                          },
                          "PublicIp" : {
                            "type" : "string",
                            "description" : "The public IP address of the VM."
                          },
                          "Hypervisor" : {
                            "type" : "string",
                            "description" : "The hypervisor type of the VMs (`ovm` \\| `xen`)."
                          },
                          "DeletionProtection" : {
                            "type" : "boolean",
                            "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
                          },
                          "PublicDnsName" : {
                            "type" : "string",
                            "description" : "The name of the public DNS."
                          },
                          "OsFamily" : {
                            "type" : "string",
                            "description" : "Indicates the operating system (OS) of the VM."
                          },
                          "Nics" : {
                            "type" : "array",
                            "description" : "(Net only) The network interface cards (NICs) the VMs are attached to.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "SecurityGroups" : {
                                  "type" : "array",
                                  "description" : "One or more IDs of security groups for the NIC.",
                                  "items" : {
                                    "type" : "object",
                                    "properties" : {
                                      "SecurityGroupName" : {
                                        "type" : "string",
                                        "description" : "The name of the security group."
                                      },
                                      "SecurityGroupId" : {
                                        "type" : "string",
                                        "description" : "The ID of the security group."
                                      }
                                    },
                                    "additionalProperties" : false,
                                    "description" : "Information about the security group."
                                  }
                                },
                                "NetId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Net for the NIC."
                                },
                                "LinkPublicIp" : {
                                  "type" : "object",
                                  "properties" : {
                                    "PublicIp" : {
                                      "type" : "string",
                                      "description" : "The External IP address (EIP) associated with the NIC."
                                    },
                                    "PublicIpAccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of the owner of the EIP."
                                    },
                                    "PublicDnsName" : {
                                      "type" : "string",
                                      "description" : "The name of the public DNS."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the EIP associated with the NIC."
                                },
                                "PrivateDnsName" : {
                                  "type" : "string",
                                  "description" : "The name of the private DNS."
                                },
                                "Description" : {
                                  "type" : "string",
                                  "description" : "The description of the NIC."
                                },
                                "AccountId" : {
                                  "type" : "string",
                                  "description" : "The account ID of the owner of the NIC."
                                },
                                "IsSourceDestChecked" : {
                                  "type" : "boolean",
                                  "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                                },
                                "State" : {
                                  "type" : "string",
                                  "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                                },
                                "PrivateIps" : {
                                  "type" : "array",
                                  "description" : "The private IP address or addresses of the NIC.",
                                  "items" : {
                                    "type" : "object",
                                    "properties" : {
                                      "LinkPublicIp" : {
                                        "type" : "object",
                                        "properties" : {
                                          "PublicIp" : {
                                            "type" : "string",
                                            "description" : "The External IP address (EIP) associated with the NIC."
                                          },
                                          "PublicIpAccountId" : {
                                            "type" : "string",
                                            "description" : "The account ID of the owner of the EIP."
                                          },
                                          "PublicDnsName" : {
                                            "type" : "string",
                                            "description" : "The name of the public DNS."
                                          }
                                        },
                                        "additionalProperties" : false,
                                        "description" : "Information about the EIP associated with the NIC."
                                      },
                                      "PrivateDnsName" : {
                                        "type" : "string",
                                        "description" : "The name of the private DNS."
                                      },
                                      "PrivateIp" : {
                                        "type" : "string",
                                        "description" : "The private IP address."
                                      },
                                      "IsPrimary" : {
                                        "type" : "boolean",
                                        "description" : "If true, the IP address is the primary private IP address of the NIC."
                                      }
                                    },
                                    "additionalProperties" : false,
                                    "description" : "Information about the private IP of the NIC."
                                  }
                                },
                                "LinkNic" : {
                                  "type" : "object",
                                  "properties" : {
                                    "DeviceNumber" : {
                                      "type" : "integer",
                                      "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                                    },
                                    "DeleteOnVmDeletion" : {
                                      "type" : "boolean",
                                      "description" : "If true, the NIC is deleted when the VM is terminated."
                                    },
                                    "LinkNicId" : {
                                      "type" : "string",
                                      "description" : "The ID of the NIC to attach."
                                    },
                                    "State" : {
                                      "type" : "string",
                                      "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the network interface card (NIC)."
                                },
                                "SubnetId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Subnet for the NIC."
                                },
                                "MacAddress" : {
                                  "type" : "string",
                                  "description" : "The Media Access Control (MAC) address of the NIC."
                                },
                                "NicId" : {
                                  "type" : "string",
                                  "description" : "The ID of the NIC."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the network interface card (NIC)."
                            }
                          },
                          "KeypairName" : {
                            "type" : "string",
                            "description" : "The name of the keypair used when launching the VM."
                          },
                          "RootDeviceType" : {
                            "type" : "string",
                            "description" : "The type of root device used by the VM (always `bsu`)."
                          },
                          "StateReason" : {
                            "type" : "string",
                            "description" : "The reason explaining the current state of the VM."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the VM."
                          },
                          "Performance" : {
                            "type" : "string",
                            "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`)."
                          },
                          "ClientToken" : {
                            "type" : "string",
                            "description" : "The idempotency token provided when launching the VM."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the VM."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/LinkPrivateIps" : {
      "post" : {
        "tags" : [ "Nic" ],
        "operationId" : "LinkPrivateIps",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NicId" ],
                "type" : "object",
                "properties" : {
                  "SecondaryPrivateIpCount" : {
                    "type" : "integer",
                    "description" : "The number of secondary private IP addresses to assign to the NIC."
                  },
                  "AllowRelink" : {
                    "type" : "boolean",
                    "description" : "If true, allows an IP address that is already assigned to another NIC in the same Subnet to be assigned to the NIC you specified."
                  },
                  "PrivateIps" : {
                    "type" : "array",
                    "description" : "The secondary private IP address or addresses you want to assign to the NIC within the IP address range of the Subnet.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "NicId" : {
                    "type" : "string",
                    "description" : "The ID of the NIC."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateAccount" : {
      "post" : {
        "tags" : [ "Account" ],
        "operationId" : "UpdateAccount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "CompanyName" : {
                    "type" : "string",
                    "description" : "The new name of the company for the account."
                  },
                  "MobileNumber" : {
                    "type" : "string",
                    "description" : "The new mobile phone number of the account owner."
                  },
                  "Email" : {
                    "type" : "string",
                    "description" : "The new email address for the account."
                  },
                  "ZipCode" : {
                    "type" : "string",
                    "description" : "The new ZIP code of the city."
                  },
                  "StateProvince" : {
                    "type" : "string",
                    "description" : "The new state/province of the account owner."
                  },
                  "FirstName" : {
                    "type" : "string",
                    "description" : "The new first name of the account owner."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "PhoneNumber" : {
                    "type" : "string",
                    "description" : "The new landline phone number of the account owner."
                  },
                  "Country" : {
                    "type" : "string",
                    "description" : "The new country of the account owner."
                  },
                  "LastName" : {
                    "type" : "string",
                    "description" : "The new last name of the account owner."
                  },
                  "City" : {
                    "type" : "string",
                    "description" : "The new city of the account owner."
                  },
                  "VatNumber" : {
                    "type" : "string",
                    "description" : "The new value added tax (VAT) number for the account."
                  },
                  "JobTitle" : {
                    "type" : "string",
                    "description" : "The new job title of the account owner."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Account" : {
                      "type" : "object",
                      "properties" : {
                        "Email" : {
                          "type" : "string",
                          "description" : "The email address for the account."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The ID of the account."
                        },
                        "ZipCode" : {
                          "type" : "string",
                          "description" : "The ZIP code of the city."
                        },
                        "StateProvince" : {
                          "type" : "string",
                          "description" : "The state/province of the account."
                        },
                        "FirstName" : {
                          "type" : "string",
                          "description" : "The first name of the account owner."
                        },
                        "CustomerId" : {
                          "type" : "string",
                          "description" : "The ID of the customer."
                        },
                        "City" : {
                          "type" : "string",
                          "description" : "The city of the account owner."
                        },
                        "VatNumber" : {
                          "type" : "string",
                          "description" : "The value added tax (VAT) number for the account."
                        },
                        "JobTitle" : {
                          "type" : "string",
                          "description" : "The job title of the account owner."
                        },
                        "CompanyName" : {
                          "type" : "string",
                          "description" : "The name of the company for the account."
                        },
                        "MobileNumber" : {
                          "type" : "string",
                          "description" : "The mobile phone number of the account owner."
                        },
                        "PhoneNumber" : {
                          "type" : "string",
                          "description" : "The landline phone number of the account owner."
                        },
                        "Country" : {
                          "type" : "string",
                          "description" : "The country of the account owner."
                        },
                        "LastName" : {
                          "type" : "string",
                          "description" : "The last name of the account owner."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the account."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateNetPeering" : {
      "post" : {
        "tags" : [ "NetPeering" ],
        "operationId" : "CreateNetPeering",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "AccepterNetId", "SourceNetId" ],
                "type" : "object",
                "properties" : {
                  "AccepterNetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net you want to connect with."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "SourceNetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net you send the peering request from."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "NetPeering" : {
                      "type" : "object",
                      "properties" : {
                        "SourceNet" : {
                          "type" : "object",
                          "properties" : {
                            "IpRange" : {
                              "type" : "string",
                              "description" : "The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16)."
                            },
                            "NetId" : {
                              "type" : "string",
                              "description" : "The ID of the source Net."
                            },
                            "AccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the source Net."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the source Net."
                        },
                        "State" : {
                          "type" : "object",
                          "properties" : {
                            "Message" : {
                              "type" : "string",
                              "description" : "Additional information about the state of the Net peering connection."
                            },
                            "Name" : {
                              "type" : "string",
                              "description" : "The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the state of the Net peering connection."
                        },
                        "NetPeeringId" : {
                          "type" : "string",
                          "description" : "The ID of the Net peering connection."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Net peering connection.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "AccepterNet" : {
                          "type" : "object",
                          "properties" : {
                            "IpRange" : {
                              "type" : "string",
                              "description" : "The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16)."
                            },
                            "NetId" : {
                              "type" : "string",
                              "description" : "The ID of the accepter Net."
                            },
                            "AccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the accepter Net."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the accepter Net."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Net peering connection."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateFlexibleGpu" : {
      "post" : {
        "tags" : [ "FlexibleGpu" ],
        "operationId" : "CreateFlexibleGpu",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ModelName", "SubregionName" ],
                "type" : "object",
                "properties" : {
                  "Generation" : {
                    "type" : "string",
                    "description" : "The processor generation that the fGPU must be compatible with. If not specified, the oldest possible processor generation is selected (as provided by [ReadFlexibleGpuCatalog](#readflexiblegpucatalog) for the specified model of fGPU)."
                  },
                  "ModelName" : {
                    "type" : "string",
                    "description" : "The model of fGPU you want to allocate. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
                  },
                  "DeleteOnVmDeletion" : {
                    "type" : "boolean",
                    "description" : "If true, the fGPU is deleted when the VM is terminated.",
                    "default" : false
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "SubregionName" : {
                    "type" : "string",
                    "description" : "The Subregion in which you want to create the fGPU."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "FlexibleGpu" : {
                      "type" : "object",
                      "properties" : {
                        "Generation" : {
                          "type" : "string",
                          "description" : "The compatible processor generation."
                        },
                        "ModelName" : {
                          "type" : "string",
                          "description" : "The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
                        },
                        "DeleteOnVmDeletion" : {
                          "type" : "boolean",
                          "description" : "If true, the fGPU is deleted when the VM is terminated."
                        },
                        "FlexibleGpuId" : {
                          "type" : "string",
                          "description" : "The ID of the fGPU."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`)."
                        },
                        "VmId" : {
                          "type" : "string",
                          "description" : "The ID of the VM the fGPU is attached to, if any."
                        },
                        "SubregionName" : {
                          "type" : "string",
                          "description" : "The Subregion where the fGPU is located."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the flexible GPU (fGPU)."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/SendResetPasswordEmail" : {
      "post" : {
        "tags" : [ "Account" ],
        "operationId" : "SendResetPasswordEmail",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Email" ],
                "type" : "object",
                "properties" : {
                  "Email" : {
                    "type" : "string",
                    "description" : "The email address provided for the account."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).You need to provide this token when updating the account password using the ResetAccountPassword method.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateServerCertificate" : {
      "post" : {
        "tags" : [ "ServerCertificate" ],
        "operationId" : "UpdateServerCertificate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Name" ],
                "type" : "object",
                "properties" : {
                  "NewPath" : {
                    "type" : "string",
                    "description" : "A new path for the server certificate."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "NewName" : {
                    "type" : "string",
                    "description" : "A new name for the server certificate."
                  },
                  "Name" : {
                    "type" : "string",
                    "description" : "The name of the server certificate you want to modify."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ServerCertificate" : {
                      "type" : "object",
                      "properties" : {
                        "Path" : {
                          "type" : "string",
                          "description" : "The path to the server certificate."
                        },
                        "UploadDate" : {
                          "type" : "string",
                          "description" : "The date at which the server certificate has been uploaded.",
                          "format" : "date"
                        },
                        "ExpirationDate" : {
                          "type" : "string",
                          "description" : "The date at which the server certificate expires.",
                          "format" : "date"
                        },
                        "Id" : {
                          "type" : "string",
                          "description" : "The ID of the server certificate."
                        },
                        "Name" : {
                          "type" : "string",
                          "description" : "The name of the server certificate."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the server certificate."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UnlinkRouteTable" : {
      "post" : {
        "tags" : [ "RouteTable" ],
        "operationId" : "UnlinkRouteTable",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LinkRouteTableId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "LinkRouteTableId" : {
                    "type" : "string",
                    "description" : "The ID of the association between the route table and the Subnet."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UnlinkPrivateIps" : {
      "post" : {
        "tags" : [ "Nic" ],
        "operationId" : "UnlinkPrivateIps",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NicId", "PrivateIps" ],
                "type" : "object",
                "properties" : {
                  "PrivateIps" : {
                    "type" : "array",
                    "description" : "One or more secondary private IP addresses you want to unassign from the NIC.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "NicId" : {
                    "type" : "string",
                    "description" : "The ID of the NIC."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/LinkVirtualGateway" : {
      "post" : {
        "tags" : [ "VirtualGateway" ],
        "operationId" : "LinkVirtualGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetId", "VirtualGatewayId" ],
                "type" : "object",
                "properties" : {
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net to which you want to attach the virtual gateway."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VirtualGatewayId" : {
                    "type" : "string",
                    "description" : "The ID of the virtual gateway."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "NetToVirtualGatewayLink" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net to which the virtual gateway is attached."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the attachment."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateNic" : {
      "post" : {
        "tags" : [ "Nic" ],
        "operationId" : "CreateNic",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "SubnetId" ],
                "type" : "object",
                "properties" : {
                  "Description" : {
                    "type" : "string",
                    "description" : "A description for the NIC."
                  },
                  "PrivateIps" : {
                    "type" : "array",
                    "description" : "The primary private IP address for the NIC.<br />\nThis IP address must be within the IP address range of the Subnet that you specify with the `SubnetId` attribute.<br />\nIf you do not specify this attribute, a random private IP address is selected within the IP address range of the Subnet.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "PrivateIp" : {
                          "type" : "string",
                          "description" : "The private IP address of the NIC."
                        },
                        "IsPrimary" : {
                          "type" : "boolean",
                          "description" : "If true, the IP address is the primary private IP address of the NIC."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the private IP."
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "SubnetId" : {
                    "type" : "string",
                    "description" : "The ID of the Subnet in which you want to create the NIC."
                  },
                  "SecurityGroupIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of security groups for the NIC.",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Nic" : {
                      "type" : "object",
                      "properties" : {
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the NIC.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "SecurityGroupName" : {
                                "type" : "string",
                                "description" : "The name of the security group."
                              },
                              "SecurityGroupId" : {
                                "type" : "string",
                                "description" : "The ID of the security group."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group."
                          }
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the NIC."
                        },
                        "LinkPublicIp" : {
                          "type" : "object",
                          "properties" : {
                            "PublicIp" : {
                              "type" : "string",
                              "description" : "The External IP address (EIP) associated with the NIC."
                            },
                            "LinkPublicIpId" : {
                              "type" : "string",
                              "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                            },
                            "PublicIpId" : {
                              "type" : "string",
                              "description" : "The allocation ID of the EIP."
                            },
                            "PublicIpAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the EIP."
                            },
                            "PublicDnsName" : {
                              "type" : "string",
                              "description" : "The name of the public DNS."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the EIP association."
                        },
                        "PrivateDnsName" : {
                          "type" : "string",
                          "description" : "The name of the private DNS."
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the NIC."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the NIC."
                        },
                        "LinkNic" : {
                          "type" : "object",
                          "properties" : {
                            "DeviceNumber" : {
                              "type" : "integer",
                              "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                            },
                            "DeleteOnVmDeletion" : {
                              "type" : "boolean",
                              "description" : "If true, the NIC is deleted when the VM is terminated."
                            },
                            "VmAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the VM."
                            },
                            "LinkNicId" : {
                              "type" : "string",
                              "description" : "The ID of the NIC to attach."
                            },
                            "State" : {
                              "type" : "string",
                              "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                            },
                            "VmId" : {
                              "type" : "string",
                              "description" : "The ID of the VM."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the NIC attachment."
                        },
                        "SubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Subnet."
                        },
                        "MacAddress" : {
                          "type" : "string",
                          "description" : "The Media Access Control (MAC) address of the NIC."
                        },
                        "SubregionName" : {
                          "type" : "string",
                          "description" : "The Subregion in which the NIC is located."
                        },
                        "IsSourceDestChecked" : {
                          "type" : "boolean",
                          "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                        },
                        "PrivateIps" : {
                          "type" : "array",
                          "description" : "The private IP addresses of the NIC.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "LinkPublicIp" : {
                                "type" : "object",
                                "properties" : {
                                  "PublicIp" : {
                                    "type" : "string",
                                    "description" : "The External IP address (EIP) associated with the NIC."
                                  },
                                  "LinkPublicIpId" : {
                                    "type" : "string",
                                    "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                                  },
                                  "PublicIpId" : {
                                    "type" : "string",
                                    "description" : "The allocation ID of the EIP."
                                  },
                                  "PublicIpAccountId" : {
                                    "type" : "string",
                                    "description" : "The account ID of the owner of the EIP."
                                  },
                                  "PublicDnsName" : {
                                    "type" : "string",
                                    "description" : "The name of the public DNS."
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about the EIP association."
                              },
                              "PrivateDnsName" : {
                                "type" : "string",
                                "description" : "The name of the private DNS."
                              },
                              "PrivateIp" : {
                                "type" : "string",
                                "description" : "The private IP address of the NIC."
                              },
                              "IsPrimary" : {
                                "type" : "boolean",
                                "description" : "If true, the IP address is the primary private IP address of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the private IP."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the NIC.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "NicId" : {
                          "type" : "string",
                          "description" : "The ID of the NIC."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the NIC."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteVpnConnection" : {
      "post" : {
        "tags" : [ "VpnConnection" ],
        "operationId" : "DeleteVpnConnection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VpnConnectionId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VpnConnectionId" : {
                    "type" : "string",
                    "description" : "The ID of the VPN connection you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteVpnConnectionRoute" : {
      "post" : {
        "tags" : [ "VpnConnection" ],
        "operationId" : "DeleteVpnConnectionRoute",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DestinationIpRange", "VpnConnectionId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DestinationIpRange" : {
                    "type" : "string",
                    "description" : "The network prefix of the route to delete, in CIDR notation (for example, 10.12.0.0/16)."
                  },
                  "VpnConnectionId" : {
                    "type" : "string",
                    "description" : "The ID of the target VPN connection of the static route to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadKeypairs" : {
      "post" : {
        "tags" : [ "Keypair" ],
        "operationId" : "ReadKeypairs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "KeypairNames" : {
                        "type" : "array",
                        "description" : "The names of the keypairs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "KeypairFingerprints" : {
                        "type" : "array",
                        "description" : "The fingerprints of the keypairs.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Keypairs" : {
                      "type" : "array",
                      "description" : "Information about one or more keypairs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "KeypairFingerprint" : {
                            "type" : "string",
                            "description" : "The MD5 public key fingerprint as specified in section 4 of RFC 4716."
                          },
                          "KeypairName" : {
                            "type" : "string",
                            "description" : "The name of the keypair."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the keypair."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateApiAccessRule" : {
      "post" : {
        "tags" : [ "ApiAccessRule" ],
        "operationId" : "CreateApiAccessRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Description" : {
                    "type" : "string",
                    "description" : "A description for the API access rule."
                  },
                  "CaIds" : {
                    "type" : "array",
                    "description" : " One or more IDs of Client Certificate Authorities (CAs).",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Cns" : {
                    "type" : "array",
                    "description" : "One or more Client Certificate Common Names (CNs). If this parameter is specified, you must also specify the `CaIds` parameter.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "IpRanges" : {
                    "type" : "array",
                    "description" : "One or more IP ranges, in CIDR notation (for example, 192.0.2.0/16).",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ApiAccessRule" : {
                      "type" : "object",
                      "properties" : {
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the API access rule."
                        },
                        "ApiAccessRuleId" : {
                          "type" : "string",
                          "description" : " The ID of the API access rule."
                        },
                        "CaIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Cns" : {
                          "type" : "array",
                          "description" : "One or more Client Certificate Common Names (CNs).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "IpRanges" : {
                          "type" : "array",
                          "description" : "One or more IP ranges used for the API access rule, in CIDR notation (for example, 192.0.2.0/16).",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the API access rule."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteSubnet" : {
      "post" : {
        "tags" : [ "Subnet" ],
        "operationId" : "DeleteSubnet",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "SubnetId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "SubnetId" : {
                    "type" : "string",
                    "description" : "The ID of the Subnet you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadApiAccessRules" : {
      "post" : {
        "tags" : [ "ApiAccessRule" ],
        "operationId" : "ReadApiAccessRules",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "Descriptions" : {
                        "type" : "array",
                        "description" : "One or more descriptions of API access rules.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ApiAccessRuleIds" : {
                        "type" : "array",
                        "description" : "One or more IDs of API access rules.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "CaIds" : {
                        "type" : "array",
                        "description" : "One or more IDs of Client Certificate Authorities (CAs).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Cns" : {
                        "type" : "array",
                        "description" : "One or more Client Certificate Common Names (CNs).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "IpRanges" : {
                        "type" : "array",
                        "description" : "One or more IP ranges, in CIDR notation (for example, 192.0.2.0/16).",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ApiAccessRules" : {
                      "type" : "array",
                      "description" : "A list of API access rules.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Description" : {
                            "type" : "string",
                            "description" : "The description of the API access rule."
                          },
                          "ApiAccessRuleId" : {
                            "type" : "string",
                            "description" : " The ID of the API access rule."
                          },
                          "CaIds" : {
                            "type" : "array",
                            "description" : "One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "Cns" : {
                            "type" : "array",
                            "description" : "One or more Client Certificate Common Names (CNs).",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "IpRanges" : {
                            "type" : "array",
                            "description" : "One or more IP ranges used for the API access rule, in CIDR notation (for example, 192.0.2.0/16).",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the API access rule."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeletePublicIp" : {
      "post" : {
        "tags" : [ "PublicIp" ],
        "operationId" : "DeletePublicIp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "PublicIp" : {
                    "type" : "string",
                    "description" : "The EIP. In the public Cloud, this parameter is required."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "PublicIpId" : {
                    "type" : "string",
                    "description" : "The ID representing the association of the EIP with the VM or the NIC. In a Net, this parameter is required."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateRoutePropagation" : {
      "post" : {
        "tags" : [ "VirtualGateway" ],
        "operationId" : "UpdateRoutePropagation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Enable", "RouteTableId", "VirtualGatewayId" ],
                "type" : "object",
                "properties" : {
                  "RouteTableId" : {
                    "type" : "string",
                    "description" : "The ID of the route table."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Enable" : {
                    "type" : "boolean",
                    "description" : "If true, a virtual gateway can propagate routes to a specified route table of a Net. If false, the propagation is disabled."
                  },
                  "VirtualGatewayId" : {
                    "type" : "string",
                    "description" : "The ID of the virtual gateway."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "RouteTable" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the route table."
                        },
                        "RouteTableId" : {
                          "type" : "string",
                          "description" : "The ID of the route table."
                        },
                        "RoutePropagatingVirtualGateways" : {
                          "type" : "array",
                          "description" : "Information about virtual gateways propagating routes.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "VirtualGatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the virtual gateway."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route propagating virtual gateway."
                          }
                        },
                        "LinkRouteTables" : {
                          "type" : "array",
                          "description" : "One or more associations between the route table and Subnets.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "RouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the route table."
                              },
                              "LinkRouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the association between the route table and the Subnet."
                              },
                              "SubnetId" : {
                                "type" : "string",
                                "description" : "The ID of the Subnet."
                              },
                              "Main" : {
                                "type" : "boolean",
                                "description" : "If true, the route table is the main one."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "One or more associations between the route table and the Subnets."
                          }
                        },
                        "Routes" : {
                          "type" : "array",
                          "description" : "One or more routes in the route table.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "NatServiceId" : {
                                "type" : "string",
                                "description" : "The ID of a NAT service attached to the Net."
                              },
                              "VmAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the VM."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                              },
                              "CreationMethod" : {
                                "type" : "string",
                                "description" : "The method used to create the route."
                              },
                              "DestinationIpRange" : {
                                "type" : "string",
                                "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                              },
                              "VmId" : {
                                "type" : "string",
                                "description" : "The ID of a VM specified in a route in the table."
                              },
                              "NetPeeringId" : {
                                "type" : "string",
                                "description" : "The ID of the Net peering connection."
                              },
                              "NetAccessPointId" : {
                                "type" : "string",
                                "description" : "The ID of the Net access point."
                              },
                              "GatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                              },
                              "DestinationServiceId" : {
                                "type" : "string",
                                "description" : "The ID of the OUTSCALE service."
                              },
                              "NicId" : {
                                "type" : "string",
                                "description" : "The ID of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the route table.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the route table."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateRouteTable" : {
      "post" : {
        "tags" : [ "RouteTable" ],
        "operationId" : "CreateRouteTable",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetId" ],
                "type" : "object",
                "properties" : {
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net for which you want to create a route table."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "RouteTable" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the route table."
                        },
                        "RouteTableId" : {
                          "type" : "string",
                          "description" : "The ID of the route table."
                        },
                        "RoutePropagatingVirtualGateways" : {
                          "type" : "array",
                          "description" : "Information about virtual gateways propagating routes.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "VirtualGatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the virtual gateway."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route propagating virtual gateway."
                          }
                        },
                        "LinkRouteTables" : {
                          "type" : "array",
                          "description" : "One or more associations between the route table and Subnets.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "RouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the route table."
                              },
                              "LinkRouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the association between the route table and the Subnet."
                              },
                              "SubnetId" : {
                                "type" : "string",
                                "description" : "The ID of the Subnet."
                              },
                              "Main" : {
                                "type" : "boolean",
                                "description" : "If true, the route table is the main one."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "One or more associations between the route table and the Subnets."
                          }
                        },
                        "Routes" : {
                          "type" : "array",
                          "description" : "One or more routes in the route table.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "NatServiceId" : {
                                "type" : "string",
                                "description" : "The ID of a NAT service attached to the Net."
                              },
                              "VmAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the VM."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                              },
                              "CreationMethod" : {
                                "type" : "string",
                                "description" : "The method used to create the route."
                              },
                              "DestinationIpRange" : {
                                "type" : "string",
                                "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                              },
                              "VmId" : {
                                "type" : "string",
                                "description" : "The ID of a VM specified in a route in the table."
                              },
                              "NetPeeringId" : {
                                "type" : "string",
                                "description" : "The ID of the Net peering connection."
                              },
                              "NetAccessPointId" : {
                                "type" : "string",
                                "description" : "The ID of the Net access point."
                              },
                              "GatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                              },
                              "DestinationServiceId" : {
                                "type" : "string",
                                "description" : "The ID of the OUTSCALE service."
                              },
                              "NicId" : {
                                "type" : "string",
                                "description" : "The ID of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the route table.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the route table."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadSubregions" : {
      "post" : {
        "tags" : [ "Subregion" ],
        "operationId" : "ReadSubregions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "SubregionNames" : {
                        "type" : "array",
                        "description" : "The names of the Subregions.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Subregions" : {
                      "type" : "array",
                      "description" : "Information about one or more Subregions.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "RegionName" : {
                            "type" : "string",
                            "description" : "The name of the Region containing the Subregion."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the Subregion (`available` \\| `information` \\| `impaired` \\| `unavailable`)."
                          },
                          "SubregionName" : {
                            "type" : "string",
                            "description" : "The name of the Subregion."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the Subregion."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateDirectLink" : {
      "post" : {
        "tags" : [ "DirectLink" ],
        "operationId" : "CreateDirectLink",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Bandwidth", "DirectLinkName", "Location" ],
                "type" : "object",
                "properties" : {
                  "DirectLinkName" : {
                    "type" : "string",
                    "description" : "The name of the DirectLink."
                  },
                  "Bandwidth" : {
                    "type" : "string",
                    "description" : "The bandwidth of the DirectLink (`1Gbps` \\| `10Gbps`)."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Location" : {
                    "type" : "string",
                    "description" : "The code of the requested location for the DirectLink, returned by the [ReadLocations](#readlocations) method."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "DirectLink" : {
                      "type" : "object",
                      "properties" : {
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the DirectLink."
                        },
                        "RegionName" : {
                          "type" : "string",
                          "description" : "The Region in which the DirectLink has been created."
                        },
                        "DirectLinkName" : {
                          "type" : "string",
                          "description" : "The name of the DirectLink."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the DirectLink.<br />\n* `requested`: The DirectLink is requested but the request has not been validated yet.<br />\n* `pending`: The DirectLink request has been validated. It remains in the `pending` state until you establish the physical link.<br />\n* `available`: The physical link is established and the connection is ready to use.<br />\n* `deleting`: The deletion process is in progress.<br />\n* `deleted`: The DirectLink is deleted."
                        },
                        "Bandwidth" : {
                          "type" : "string",
                          "description" : "The physical link bandwidth (either 1 Gbps or 10 Gbps)."
                        },
                        "DirectLinkId" : {
                          "type" : "string",
                          "description" : "The ID of the DirectLink (for example, dxcon-xxxxxxxx)."
                        },
                        "Location" : {
                          "type" : "string",
                          "description" : "The datacenter where the DirectLink is located."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the DirectLink."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteNet" : {
      "post" : {
        "tags" : [ "Net" ],
        "operationId" : "DeleteNet",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetId" ],
                "type" : "object",
                "properties" : {
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateLoadBalancerListeners" : {
      "post" : {
        "tags" : [ "Listener" ],
        "operationId" : "CreateLoadBalancerListeners",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Listeners", "LoadBalancerName" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer for which you want to create listeners."
                  },
                  "Listeners" : {
                    "type" : "array",
                    "description" : "One or more listeners for the load balancer.",
                    "items" : {
                      "required" : [ "BackendPort", "LoadBalancerPort", "LoadBalancerProtocol" ],
                      "type" : "object",
                      "properties" : {
                        "BackendProtocol" : {
                          "type" : "string",
                          "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                        },
                        "LoadBalancerProtocol" : {
                          "type" : "string",
                          "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                        },
                        "BackendPort" : {
                          "type" : "integer",
                          "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                        },
                        "ServerCertificateId" : {
                          "type" : "string",
                          "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                        },
                        "LoadBalancerPort" : {
                          "type" : "integer",
                          "description" : "The port on which the load balancer is listening (between `1` and `65535`, both included)."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the listener to create."
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LoadBalancer" : {
                      "type" : "object",
                      "properties" : {
                        "AccessLog" : {
                          "type" : "object",
                          "properties" : {
                            "OsuBucketPrefix" : {
                              "type" : "string",
                              "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                            },
                            "IsEnabled" : {
                              "type" : "boolean",
                              "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                            },
                            "PublicationInterval" : {
                              "type" : "integer",
                              "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                            },
                            "OsuBucketName" : {
                              "type" : "string",
                              "description" : "The name of the OOS bucket for the access logs."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about access logs."
                        },
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "BackendVmIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of back-end VMs for the load balancer.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the load balancer."
                        },
                        "DnsName" : {
                          "type" : "string",
                          "description" : "The DNS name of the load balancer."
                        },
                        "ApplicationStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The stickiness policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                              },
                              "CookieName" : {
                                "type" : "string",
                                "description" : "The name of the application cookie used for stickiness."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "SourceSecurityGroup" : {
                          "type" : "object",
                          "properties" : {
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            },
                            "SecurityGroupAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
                        },
                        "HealthCheck" : {
                          "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                          "type" : "object",
                          "properties" : {
                            "Path" : {
                              "type" : "string",
                              "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                            },
                            "UnhealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                            },
                            "Timeout" : {
                              "type" : "integer",
                              "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                            },
                            "CheckInterval" : {
                              "type" : "integer",
                              "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                            },
                            "Port" : {
                              "type" : "integer",
                              "description" : "The port number (between `1` and `65535`, both included)."
                            },
                            "HealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                            },
                            "Protocol" : {
                              "type" : "string",
                              "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the health check configuration."
                        },
                        "LoadBalancerType" : {
                          "type" : "string",
                          "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
                        },
                        "LoadBalancerName" : {
                          "type" : "string",
                          "description" : "The name of the load balancer."
                        },
                        "Subnets" : {
                          "type" : "array",
                          "description" : "The ID of the Subnet in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Listeners" : {
                          "type" : "array",
                          "description" : "The listeners for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyNames" : {
                                "type" : "array",
                                "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "BackendProtocol" : {
                                "type" : "string",
                                "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "LoadBalancerProtocol" : {
                                "type" : "string",
                                "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "BackendPort" : {
                                "type" : "integer",
                                "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                              },
                              "ServerCertificateId" : {
                                "type" : "string",
                                "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                              },
                              "LoadBalancerPort" : {
                                "type" : "integer",
                                "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the listener."
                          }
                        },
                        "SubregionNames" : {
                          "type" : "array",
                          "description" : "The ID of the Subregion in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "LoadBalancerStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "CookieExpirationPeriod" : {
                                "type" : "integer",
                                "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                              },
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The name of the stickiness policy."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the load balancer.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the load balancer."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadNetAccessPoints" : {
      "post" : {
        "tags" : [ "NetAccessPoint" ],
        "operationId" : "ReadNetAccessPoints",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the Net access points (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NetAccessPointIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Net access points.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ServiceNames" : {
                        "type" : "array",
                        "description" : "The names of the services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the Net access points, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the Net access points.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the Net access points.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "NetAccessPoints" : {
                      "type" : "array",
                      "description" : "One or more Net access points.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net with which the Net access point is associated."
                          },
                          "ServiceName" : {
                            "type" : "string",
                            "description" : "The name of the service with which the Net access point is associated."
                          },
                          "RouteTableIds" : {
                            "type" : "array",
                            "description" : "The ID of the route tables associated with the Net access point.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the Net access point (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                          },
                          "NetAccessPointId" : {
                            "type" : "string",
                            "description" : "The ID of the Net access point."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the Net access point.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the Net access point."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadVms" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "ReadVms",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the VMs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the VMs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the VMs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VmIds" : {
                        "type" : "array",
                        "description" : "One or more IDs of VMs.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Vms" : {
                      "type" : "array",
                      "description" : "Information about one or more VMs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "SecurityGroups" : {
                            "type" : "array",
                            "description" : "One or more security groups associated with the VM.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "SecurityGroupName" : {
                                  "type" : "string",
                                  "description" : "The name of the security group."
                                },
                                "SecurityGroupId" : {
                                  "type" : "string",
                                  "description" : "The ID of the security group."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the security group."
                            }
                          },
                          "CreationDate" : {
                            "type" : "string",
                            "description" : "The date and time at which the VM was created.",
                            "format" : "datetime"
                          },
                          "VmInitiatedShutdownBehavior" : {
                            "type" : "string",
                            "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted."
                          },
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net in which the VM is running."
                          },
                          "RootDeviceName" : {
                            "type" : "string",
                            "description" : "The name of the root device for the VM (for example, /dev/vda1)."
                          },
                          "PrivateDnsName" : {
                            "type" : "string",
                            "description" : "The name of the private DNS."
                          },
                          "UserData" : {
                            "type" : "string",
                            "description" : "The Base64-encoded MIME user data."
                          },
                          "BlockDeviceMappings" : {
                            "type" : "array",
                            "description" : "The block device mapping of the VM.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "Bsu" : {
                                  "type" : "object",
                                  "properties" : {
                                    "VolumeId" : {
                                      "type" : "string",
                                      "description" : "The ID of the volume."
                                    },
                                    "DeleteOnVmDeletion" : {
                                      "type" : "boolean",
                                      "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                                    },
                                    "State" : {
                                      "type" : "string",
                                      "description" : "The state of the volume."
                                    },
                                    "LinkDate" : {
                                      "type" : "string",
                                      "description" : "The time and date of attachment of the volume to the VM.",
                                      "format" : "date"
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the created BSU volume."
                                },
                                "DeviceName" : {
                                  "type" : "string",
                                  "description" : "The name of the device."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the created block device mapping."
                            }
                          },
                          "SubnetId" : {
                            "type" : "string",
                            "description" : "The ID of the Subnet for the VM."
                          },
                          "LaunchNumber" : {
                            "type" : "integer",
                            "description" : "The number for the VM when launching a group of several VMs (for example, 0, 1, 2, and so on)."
                          },
                          "BsuOptimized" : {
                            "type" : "boolean",
                            "description" : "If true, the VM is optimized for BSU I/O."
                          },
                          "IsSourceDestChecked" : {
                            "type" : "boolean",
                            "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                          },
                          "ReservationId" : {
                            "type" : "string",
                            "description" : "The reservation ID of the VM."
                          },
                          "PrivateIp" : {
                            "type" : "string",
                            "description" : "The primary private IP address of the VM."
                          },
                          "Placement" : {
                            "type" : "object",
                            "properties" : {
                              "Tenancy" : {
                                "type" : "string",
                                "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
                              },
                              "SubregionName" : {
                                "type" : "string",
                                "description" : "The name of the Subregion."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the placement of the VM."
                          },
                          "ImageId" : {
                            "type" : "string",
                            "description" : "The ID of the OMI used to create the VM."
                          },
                          "VmType" : {
                            "type" : "string",
                            "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the VM.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "ProductCodes" : {
                            "type" : "array",
                            "description" : "The product code associated with the OMI used to create the VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "Architecture" : {
                            "type" : "string",
                            "description" : "The architecture of the VM (`i386` \\| `x86_64`)."
                          },
                          "PublicIp" : {
                            "type" : "string",
                            "description" : "The public IP address of the VM."
                          },
                          "Hypervisor" : {
                            "type" : "string",
                            "description" : "The hypervisor type of the VMs (`ovm` \\| `xen`)."
                          },
                          "DeletionProtection" : {
                            "type" : "boolean",
                            "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
                          },
                          "PublicDnsName" : {
                            "type" : "string",
                            "description" : "The name of the public DNS."
                          },
                          "OsFamily" : {
                            "type" : "string",
                            "description" : "Indicates the operating system (OS) of the VM."
                          },
                          "Nics" : {
                            "type" : "array",
                            "description" : "(Net only) The network interface cards (NICs) the VMs are attached to.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "SecurityGroups" : {
                                  "type" : "array",
                                  "description" : "One or more IDs of security groups for the NIC.",
                                  "items" : {
                                    "type" : "object",
                                    "properties" : {
                                      "SecurityGroupName" : {
                                        "type" : "string",
                                        "description" : "The name of the security group."
                                      },
                                      "SecurityGroupId" : {
                                        "type" : "string",
                                        "description" : "The ID of the security group."
                                      }
                                    },
                                    "additionalProperties" : false,
                                    "description" : "Information about the security group."
                                  }
                                },
                                "NetId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Net for the NIC."
                                },
                                "LinkPublicIp" : {
                                  "type" : "object",
                                  "properties" : {
                                    "PublicIp" : {
                                      "type" : "string",
                                      "description" : "The External IP address (EIP) associated with the NIC."
                                    },
                                    "PublicIpAccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of the owner of the EIP."
                                    },
                                    "PublicDnsName" : {
                                      "type" : "string",
                                      "description" : "The name of the public DNS."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the EIP associated with the NIC."
                                },
                                "PrivateDnsName" : {
                                  "type" : "string",
                                  "description" : "The name of the private DNS."
                                },
                                "Description" : {
                                  "type" : "string",
                                  "description" : "The description of the NIC."
                                },
                                "AccountId" : {
                                  "type" : "string",
                                  "description" : "The account ID of the owner of the NIC."
                                },
                                "IsSourceDestChecked" : {
                                  "type" : "boolean",
                                  "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                                },
                                "State" : {
                                  "type" : "string",
                                  "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                                },
                                "PrivateIps" : {
                                  "type" : "array",
                                  "description" : "The private IP address or addresses of the NIC.",
                                  "items" : {
                                    "type" : "object",
                                    "properties" : {
                                      "LinkPublicIp" : {
                                        "type" : "object",
                                        "properties" : {
                                          "PublicIp" : {
                                            "type" : "string",
                                            "description" : "The External IP address (EIP) associated with the NIC."
                                          },
                                          "PublicIpAccountId" : {
                                            "type" : "string",
                                            "description" : "The account ID of the owner of the EIP."
                                          },
                                          "PublicDnsName" : {
                                            "type" : "string",
                                            "description" : "The name of the public DNS."
                                          }
                                        },
                                        "additionalProperties" : false,
                                        "description" : "Information about the EIP associated with the NIC."
                                      },
                                      "PrivateDnsName" : {
                                        "type" : "string",
                                        "description" : "The name of the private DNS."
                                      },
                                      "PrivateIp" : {
                                        "type" : "string",
                                        "description" : "The private IP address."
                                      },
                                      "IsPrimary" : {
                                        "type" : "boolean",
                                        "description" : "If true, the IP address is the primary private IP address of the NIC."
                                      }
                                    },
                                    "additionalProperties" : false,
                                    "description" : "Information about the private IP of the NIC."
                                  }
                                },
                                "LinkNic" : {
                                  "type" : "object",
                                  "properties" : {
                                    "DeviceNumber" : {
                                      "type" : "integer",
                                      "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                                    },
                                    "DeleteOnVmDeletion" : {
                                      "type" : "boolean",
                                      "description" : "If true, the NIC is deleted when the VM is terminated."
                                    },
                                    "LinkNicId" : {
                                      "type" : "string",
                                      "description" : "The ID of the NIC to attach."
                                    },
                                    "State" : {
                                      "type" : "string",
                                      "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the network interface card (NIC)."
                                },
                                "SubnetId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Subnet for the NIC."
                                },
                                "MacAddress" : {
                                  "type" : "string",
                                  "description" : "The Media Access Control (MAC) address of the NIC."
                                },
                                "NicId" : {
                                  "type" : "string",
                                  "description" : "The ID of the NIC."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the network interface card (NIC)."
                            }
                          },
                          "KeypairName" : {
                            "type" : "string",
                            "description" : "The name of the keypair used when launching the VM."
                          },
                          "RootDeviceType" : {
                            "type" : "string",
                            "description" : "The type of root device used by the VM (always `bsu`)."
                          },
                          "StateReason" : {
                            "type" : "string",
                            "description" : "The reason explaining the current state of the VM."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the VM."
                          },
                          "Performance" : {
                            "type" : "string",
                            "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`)."
                          },
                          "ClientToken" : {
                            "type" : "string",
                            "description" : "The idempotency token provided when launching the VM."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the VM."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UnlinkVolume" : {
      "post" : {
        "tags" : [ "Volume" ],
        "operationId" : "UnlinkVolume",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VolumeId" ],
                "type" : "object",
                "properties" : {
                  "VolumeId" : {
                    "type" : "string",
                    "description" : "The ID of the volume you want to detach."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "ForceUnlink" : {
                    "type" : "boolean",
                    "description" : "Forces the detachment of the volume in case of previous failure. Important: This action may damage your data or file systems."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateImageExportTask" : {
      "post" : {
        "tags" : [ "Image" ],
        "operationId" : "CreateImageExportTask",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ImageId", "OsuExport" ],
                "type" : "object",
                "properties" : {
                  "ImageId" : {
                    "type" : "string",
                    "description" : "The ID of the OMI to export."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "OsuExport" : {
                    "required" : [ "DiskImageFormat", "OsuBucket" ],
                    "type" : "object",
                    "properties" : {
                      "OsuManifestUrl" : {
                        "type" : "string",
                        "description" : "The URL of the manifest file."
                      },
                      "OsuApiKey" : {
                        "type" : "object",
                        "properties" : {
                          "SecretKey" : {
                            "type" : "string",
                            "description" : "The secret key of the OOS account that enables you to access the bucket."
                          },
                          "ApiKeyId" : {
                            "type" : "string",
                            "description" : "The API key of the OOS account that enables you to access the bucket."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the OOS API key."
                      },
                      "OsuBucket" : {
                        "type" : "string",
                        "description" : "The name of the OOS bucket where you want to export the object."
                      },
                      "OsuPrefix" : {
                        "type" : "string",
                        "description" : "The prefix for the key of the OOS object."
                      },
                      "DiskImageFormat" : {
                        "type" : "string",
                        "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the OOS export task to create."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "ImageExportTask" : {
                      "type" : "object",
                      "properties" : {
                        "Comment" : {
                          "type" : "string",
                          "description" : "If the OMI export task fails, an error message appears."
                        },
                        "Progress" : {
                          "type" : "integer",
                          "description" : "The progress of the OMI export task, as a percentage."
                        },
                        "TaskId" : {
                          "type" : "string",
                          "description" : "The ID of the OMI export task."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the OMI export task (`pending/queued` \\| `pending` \\| `completed` \\| `failed` \\| `cancelled`)."
                        },
                        "ImageId" : {
                          "type" : "string",
                          "description" : "The ID of the OMI to be exported."
                        },
                        "OsuExport" : {
                          "required" : [ "DiskImageFormat", "OsuBucket" ],
                          "type" : "object",
                          "properties" : {
                            "OsuManifestUrl" : {
                              "type" : "string",
                              "description" : "The URL of the manifest file."
                            },
                            "OsuBucket" : {
                              "type" : "string",
                              "description" : "The name of the OOS bucket the OMI is exported to."
                            },
                            "OsuPrefix" : {
                              "type" : "string",
                              "description" : "The prefix for the key of the OOS object corresponding to the image."
                            },
                            "DiskImageFormat" : {
                              "type" : "string",
                              "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the OMI export task."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the image export task.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the OMI export task."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UnlinkFlexibleGpu" : {
      "post" : {
        "tags" : [ "FlexibleGpu" ],
        "operationId" : "UnlinkFlexibleGpu",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "FlexibleGpuId" ],
                "type" : "object",
                "properties" : {
                  "FlexibleGpuId" : {
                    "type" : "string",
                    "description" : "The ID of the fGPU you want to detach from your VM."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateSnapshot" : {
      "post" : {
        "tags" : [ "Snapshot" ],
        "operationId" : "UpdateSnapshot",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "PermissionsToCreateVolume", "SnapshotId" ],
                "type" : "object",
                "properties" : {
                  "SnapshotId" : {
                    "type" : "string",
                    "description" : "The ID of the snapshot."
                  },
                  "PermissionsToCreateVolume" : {
                    "type" : "object",
                    "properties" : {
                      "Additions" : {
                        "type" : "object",
                        "properties" : {
                          "AccountIds" : {
                            "type" : "array",
                            "description" : "The account ID of one or more users who have permissions for the resource.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "GlobalPermission" : {
                            "type" : "boolean",
                            "description" : "If true, the resource is public. If false, the resource is private."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the users who have permissions for the resource."
                      },
                      "Removals" : {
                        "type" : "object",
                        "properties" : {
                          "AccountIds" : {
                            "type" : "array",
                            "description" : "The account ID of one or more users who have permissions for the resource.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "GlobalPermission" : {
                            "type" : "boolean",
                            "description" : "If true, the resource is public. If false, the resource is private."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the users who have permissions for the resource."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the permissions for the resource."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Snapshot" : {
                      "type" : "object",
                      "properties" : {
                        "SnapshotId" : {
                          "type" : "string",
                          "description" : "The ID of the snapshot."
                        },
                        "VolumeId" : {
                          "type" : "string",
                          "description" : "The ID of the volume used to create the snapshot."
                        },
                        "Progress" : {
                          "type" : "integer",
                          "description" : "The progress of the snapshot, as a percentage."
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the snapshot."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the snapshot."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the snapshot (`in-queue` \\| `completed` \\| `error`)."
                        },
                        "PermissionsToCreateVolume" : {
                          "type" : "object",
                          "properties" : {
                            "AccountIds" : {
                              "type" : "array",
                              "description" : "The account ID of one or more users who have permissions for the resource.",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "GlobalPermission" : {
                              "type" : "boolean",
                              "description" : "If true, the resource is public. If false, the resource is private."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the users who have permissions for the resource."
                        },
                        "VolumeSize" : {
                          "type" : "integer",
                          "description" : "The size of the volume used to create the snapshot, in gibibytes (GiB)."
                        },
                        "AccountAlias" : {
                          "type" : "string",
                          "description" : "The account alias of the owner of the snapshot."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the snapshot.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the snapshot."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteApiAccessRule" : {
      "post" : {
        "tags" : [ "ApiAccessRule" ],
        "operationId" : "DeleteApiAccessRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ApiAccessRuleId" ],
                "type" : "object",
                "properties" : {
                  "ApiAccessRuleId" : {
                    "type" : "string",
                    "description" : "The ID of the API access rule you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateVm" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "UpdateVm",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VmId" ],
                "type" : "object",
                "properties" : {
                  "VmInitiatedShutdownBehavior" : {
                    "type" : "string",
                    "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated."
                  },
                  "IsSourceDestChecked" : {
                    "type" : "boolean",
                    "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                  },
                  "UserData" : {
                    "type" : "string",
                    "description" : "The Base64-encoded MIME user data."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "BlockDeviceMappings" : {
                    "type" : "array",
                    "description" : "One or more block device mappings of the VM.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "Bsu" : {
                          "type" : "object",
                          "properties" : {
                            "VolumeId" : {
                              "type" : "string",
                              "description" : "The ID of the volume."
                            },
                            "DeleteOnVmDeletion" : {
                              "type" : "boolean",
                              "description" : "If set to true, the volume is deleted when terminating the VM. If set to false, the volume is not deleted when terminating the VM."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the BSU volume."
                        },
                        "NoDevice" : {
                          "type" : "string",
                          "description" : "Removes the device which is included in the block device mapping of the OMI."
                        },
                        "VirtualDeviceName" : {
                          "type" : "string",
                          "description" : "The name of the virtual device (ephemeralN)."
                        },
                        "DeviceName" : {
                          "type" : "string",
                          "description" : "The name of the device."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the block device mapping."
                    }
                  },
                  "VmType" : {
                    "type" : "string",
                    "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM."
                  },
                  "DeletionProtection" : {
                    "type" : "boolean",
                    "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
                  },
                  "Performance" : {
                    "type" : "string",
                    "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`).",
                    "enum" : [ "medium", "high", "highest" ]
                  },
                  "SecurityGroupIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of security groups for the VM.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "KeypairName" : {
                    "type" : "string",
                    "description" : "The name of the keypair.<br />\nTo complete the replacement, manually replace the old public key with the new public key in the ~/.ssh/authorized_keys file located in the VM. Restart the VM to apply the change."
                  },
                  "BsuOptimized" : {
                    "type" : "boolean",
                    "description" : "If true, the VM is optimized for BSU I/O."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Vm" : {
                      "type" : "object",
                      "properties" : {
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more security groups associated with the VM.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "SecurityGroupName" : {
                                "type" : "string",
                                "description" : "The name of the security group."
                              },
                              "SecurityGroupId" : {
                                "type" : "string",
                                "description" : "The ID of the security group."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group."
                          }
                        },
                        "CreationDate" : {
                          "type" : "string",
                          "description" : "The date and time at which the VM was created.",
                          "format" : "datetime"
                        },
                        "VmInitiatedShutdownBehavior" : {
                          "type" : "string",
                          "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted."
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net in which the VM is running."
                        },
                        "RootDeviceName" : {
                          "type" : "string",
                          "description" : "The name of the root device for the VM (for example, /dev/vda1)."
                        },
                        "PrivateDnsName" : {
                          "type" : "string",
                          "description" : "The name of the private DNS."
                        },
                        "UserData" : {
                          "type" : "string",
                          "description" : "The Base64-encoded MIME user data."
                        },
                        "BlockDeviceMappings" : {
                          "type" : "array",
                          "description" : "The block device mapping of the VM.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "Bsu" : {
                                "type" : "object",
                                "properties" : {
                                  "VolumeId" : {
                                    "type" : "string",
                                    "description" : "The ID of the volume."
                                  },
                                  "DeleteOnVmDeletion" : {
                                    "type" : "boolean",
                                    "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                                  },
                                  "State" : {
                                    "type" : "string",
                                    "description" : "The state of the volume."
                                  },
                                  "LinkDate" : {
                                    "type" : "string",
                                    "description" : "The time and date of attachment of the volume to the VM.",
                                    "format" : "date"
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about the created BSU volume."
                              },
                              "DeviceName" : {
                                "type" : "string",
                                "description" : "The name of the device."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the created block device mapping."
                          }
                        },
                        "SubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Subnet for the VM."
                        },
                        "LaunchNumber" : {
                          "type" : "integer",
                          "description" : "The number for the VM when launching a group of several VMs (for example, 0, 1, 2, and so on)."
                        },
                        "BsuOptimized" : {
                          "type" : "boolean",
                          "description" : "If true, the VM is optimized for BSU I/O."
                        },
                        "IsSourceDestChecked" : {
                          "type" : "boolean",
                          "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                        },
                        "ReservationId" : {
                          "type" : "string",
                          "description" : "The reservation ID of the VM."
                        },
                        "PrivateIp" : {
                          "type" : "string",
                          "description" : "The primary private IP address of the VM."
                        },
                        "Placement" : {
                          "type" : "object",
                          "properties" : {
                            "Tenancy" : {
                              "type" : "string",
                              "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
                            },
                            "SubregionName" : {
                              "type" : "string",
                              "description" : "The name of the Subregion."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the placement of the VM."
                        },
                        "ImageId" : {
                          "type" : "string",
                          "description" : "The ID of the OMI used to create the VM."
                        },
                        "VmType" : {
                          "type" : "string",
                          "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the VM.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "ProductCodes" : {
                          "type" : "array",
                          "description" : "The product code associated with the OMI used to create the VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Architecture" : {
                          "type" : "string",
                          "description" : "The architecture of the VM (`i386` \\| `x86_64`)."
                        },
                        "PublicIp" : {
                          "type" : "string",
                          "description" : "The public IP address of the VM."
                        },
                        "Hypervisor" : {
                          "type" : "string",
                          "description" : "The hypervisor type of the VMs (`ovm` \\| `xen`)."
                        },
                        "DeletionProtection" : {
                          "type" : "boolean",
                          "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
                        },
                        "PublicDnsName" : {
                          "type" : "string",
                          "description" : "The name of the public DNS."
                        },
                        "OsFamily" : {
                          "type" : "string",
                          "description" : "Indicates the operating system (OS) of the VM."
                        },
                        "Nics" : {
                          "type" : "array",
                          "description" : "(Net only) The network interface cards (NICs) the VMs are attached to.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "SecurityGroups" : {
                                "type" : "array",
                                "description" : "One or more IDs of security groups for the NIC.",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "SecurityGroupName" : {
                                      "type" : "string",
                                      "description" : "The name of the security group."
                                    },
                                    "SecurityGroupId" : {
                                      "type" : "string",
                                      "description" : "The ID of the security group."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the security group."
                                }
                              },
                              "NetId" : {
                                "type" : "string",
                                "description" : "The ID of the Net for the NIC."
                              },
                              "LinkPublicIp" : {
                                "type" : "object",
                                "properties" : {
                                  "PublicIp" : {
                                    "type" : "string",
                                    "description" : "The External IP address (EIP) associated with the NIC."
                                  },
                                  "PublicIpAccountId" : {
                                    "type" : "string",
                                    "description" : "The account ID of the owner of the EIP."
                                  },
                                  "PublicDnsName" : {
                                    "type" : "string",
                                    "description" : "The name of the public DNS."
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about the EIP associated with the NIC."
                              },
                              "PrivateDnsName" : {
                                "type" : "string",
                                "description" : "The name of the private DNS."
                              },
                              "Description" : {
                                "type" : "string",
                                "description" : "The description of the NIC."
                              },
                              "AccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the NIC."
                              },
                              "IsSourceDestChecked" : {
                                "type" : "boolean",
                                "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                              },
                              "PrivateIps" : {
                                "type" : "array",
                                "description" : "The private IP address or addresses of the NIC.",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "LinkPublicIp" : {
                                      "type" : "object",
                                      "properties" : {
                                        "PublicIp" : {
                                          "type" : "string",
                                          "description" : "The External IP address (EIP) associated with the NIC."
                                        },
                                        "PublicIpAccountId" : {
                                          "type" : "string",
                                          "description" : "The account ID of the owner of the EIP."
                                        },
                                        "PublicDnsName" : {
                                          "type" : "string",
                                          "description" : "The name of the public DNS."
                                        }
                                      },
                                      "additionalProperties" : false,
                                      "description" : "Information about the EIP associated with the NIC."
                                    },
                                    "PrivateDnsName" : {
                                      "type" : "string",
                                      "description" : "The name of the private DNS."
                                    },
                                    "PrivateIp" : {
                                      "type" : "string",
                                      "description" : "The private IP address."
                                    },
                                    "IsPrimary" : {
                                      "type" : "boolean",
                                      "description" : "If true, the IP address is the primary private IP address of the NIC."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the private IP of the NIC."
                                }
                              },
                              "LinkNic" : {
                                "type" : "object",
                                "properties" : {
                                  "DeviceNumber" : {
                                    "type" : "integer",
                                    "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                                  },
                                  "DeleteOnVmDeletion" : {
                                    "type" : "boolean",
                                    "description" : "If true, the NIC is deleted when the VM is terminated."
                                  },
                                  "LinkNicId" : {
                                    "type" : "string",
                                    "description" : "The ID of the NIC to attach."
                                  },
                                  "State" : {
                                    "type" : "string",
                                    "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about the network interface card (NIC)."
                              },
                              "SubnetId" : {
                                "type" : "string",
                                "description" : "The ID of the Subnet for the NIC."
                              },
                              "MacAddress" : {
                                "type" : "string",
                                "description" : "The Media Access Control (MAC) address of the NIC."
                              },
                              "NicId" : {
                                "type" : "string",
                                "description" : "The ID of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the network interface card (NIC)."
                          }
                        },
                        "KeypairName" : {
                          "type" : "string",
                          "description" : "The name of the keypair used when launching the VM."
                        },
                        "RootDeviceType" : {
                          "type" : "string",
                          "description" : "The type of root device used by the VM (always `bsu`)."
                        },
                        "StateReason" : {
                          "type" : "string",
                          "description" : "The reason explaining the current state of the VM."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
                        },
                        "VmId" : {
                          "type" : "string",
                          "description" : "The ID of the VM."
                        },
                        "Performance" : {
                          "type" : "string",
                          "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`)."
                        },
                        "ClientToken" : {
                          "type" : "string",
                          "description" : "The idempotency token provided when launching the VM."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the VM."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteNic" : {
      "post" : {
        "tags" : [ "Nic" ],
        "operationId" : "DeleteNic",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NicId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "NicId" : {
                    "type" : "string",
                    "description" : "The ID of the NIC you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateSnapshot" : {
      "post" : {
        "tags" : [ "Snapshot" ],
        "operationId" : "CreateSnapshot",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "SourceRegionName" : {
                    "type" : "string",
                    "description" : "The name of the source Region, which must be the same as the Region of your account."
                  },
                  "SnapshotSize" : {
                    "type" : "integer",
                    "description" : "The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.",
                    "format" : "int64"
                  },
                  "VolumeId" : {
                    "type" : "string",
                    "description" : "The ID of the volume you want to create a snapshot of."
                  },
                  "Description" : {
                    "type" : "string",
                    "description" : "A description for the snapshot."
                  },
                  "SourceSnapshotId" : {
                    "type" : "string",
                    "description" : "The ID of the snapshot you want to copy."
                  },
                  "FileLocation" : {
                    "type" : "string",
                    "description" : "The pre-signed URL of the snapshot you want to import from the bucket."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Snapshot" : {
                      "type" : "object",
                      "properties" : {
                        "SnapshotId" : {
                          "type" : "string",
                          "description" : "The ID of the snapshot."
                        },
                        "VolumeId" : {
                          "type" : "string",
                          "description" : "The ID of the volume used to create the snapshot."
                        },
                        "Progress" : {
                          "type" : "integer",
                          "description" : "The progress of the snapshot, as a percentage."
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the snapshot."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the snapshot."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the snapshot (`in-queue` \\| `completed` \\| `error`)."
                        },
                        "PermissionsToCreateVolume" : {
                          "type" : "object",
                          "properties" : {
                            "AccountIds" : {
                              "type" : "array",
                              "description" : "The account ID of one or more users who have permissions for the resource.",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "GlobalPermission" : {
                              "type" : "boolean",
                              "description" : "If true, the resource is public. If false, the resource is private."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the users who have permissions for the resource."
                        },
                        "VolumeSize" : {
                          "type" : "integer",
                          "description" : "The size of the volume used to create the snapshot, in gibibytes (GiB)."
                        },
                        "AccountAlias" : {
                          "type" : "string",
                          "description" : "The account alias of the owner of the snapshot."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the snapshot.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the snapshot."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteInternetService" : {
      "post" : {
        "tags" : [ "InternetService" ],
        "operationId" : "DeleteInternetService",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "InternetServiceId" ],
                "type" : "object",
                "properties" : {
                  "InternetServiceId" : {
                    "type" : "string",
                    "description" : "The ID of the Internet service you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadServerCertificates" : {
      "post" : {
        "tags" : [ "ServerCertificate" ],
        "operationId" : "ReadServerCertificates",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "Paths" : {
                        "type" : "array",
                        "description" : "The paths to the server certificates.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "ServerCertificates" : {
                      "type" : "array",
                      "description" : "Information about one or more server certificates.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Path" : {
                            "type" : "string",
                            "description" : "The path to the server certificate."
                          },
                          "UploadDate" : {
                            "type" : "string",
                            "description" : "The date at which the server certificate has been uploaded.",
                            "format" : "date"
                          },
                          "ExpirationDate" : {
                            "type" : "string",
                            "description" : "The date at which the server certificate expires.",
                            "format" : "date"
                          },
                          "Id" : {
                            "type" : "string",
                            "description" : "The ID of the server certificate."
                          },
                          "Name" : {
                            "type" : "string",
                            "description" : "The name of the server certificate."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the server certificate."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadAccounts" : {
      "post" : {
        "tags" : [ "Account" ],
        "operationId" : "ReadAccounts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Accounts" : {
                      "type" : "array",
                      "description" : "The list of the accounts.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Email" : {
                            "type" : "string",
                            "description" : "The email address for the account."
                          },
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The ID of the account."
                          },
                          "ZipCode" : {
                            "type" : "string",
                            "description" : "The ZIP code of the city."
                          },
                          "StateProvince" : {
                            "type" : "string",
                            "description" : "The state/province of the account."
                          },
                          "FirstName" : {
                            "type" : "string",
                            "description" : "The first name of the account owner."
                          },
                          "CustomerId" : {
                            "type" : "string",
                            "description" : "The ID of the customer."
                          },
                          "City" : {
                            "type" : "string",
                            "description" : "The city of the account owner."
                          },
                          "VatNumber" : {
                            "type" : "string",
                            "description" : "The value added tax (VAT) number for the account."
                          },
                          "JobTitle" : {
                            "type" : "string",
                            "description" : "The job title of the account owner."
                          },
                          "CompanyName" : {
                            "type" : "string",
                            "description" : "The name of the company for the account."
                          },
                          "MobileNumber" : {
                            "type" : "string",
                            "description" : "The mobile phone number of the account owner."
                          },
                          "PhoneNumber" : {
                            "type" : "string",
                            "description" : "The landline phone number of the account owner."
                          },
                          "Country" : {
                            "type" : "string",
                            "description" : "The country of the account owner."
                          },
                          "LastName" : {
                            "type" : "string",
                            "description" : "The last name of the account owner."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the account."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadImageExportTasks" : {
      "post" : {
        "tags" : [ "Image" ],
        "operationId" : "ReadImageExportTasks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "TaskIds" : {
                        "type" : "array",
                        "description" : "The IDs of the export tasks.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "ImageExportTasks" : {
                      "type" : "array",
                      "description" : "Information about one or more image export tasks.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Comment" : {
                            "type" : "string",
                            "description" : "If the OMI export task fails, an error message appears."
                          },
                          "Progress" : {
                            "type" : "integer",
                            "description" : "The progress of the OMI export task, as a percentage."
                          },
                          "TaskId" : {
                            "type" : "string",
                            "description" : "The ID of the OMI export task."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the OMI export task (`pending/queued` \\| `pending` \\| `completed` \\| `failed` \\| `cancelled`)."
                          },
                          "ImageId" : {
                            "type" : "string",
                            "description" : "The ID of the OMI to be exported."
                          },
                          "OsuExport" : {
                            "required" : [ "DiskImageFormat", "OsuBucket" ],
                            "type" : "object",
                            "properties" : {
                              "OsuManifestUrl" : {
                                "type" : "string",
                                "description" : "The URL of the manifest file."
                              },
                              "OsuBucket" : {
                                "type" : "string",
                                "description" : "The name of the OOS bucket the OMI is exported to."
                              },
                              "OsuPrefix" : {
                                "type" : "string",
                                "description" : "The prefix for the key of the OOS object corresponding to the image."
                              },
                              "DiskImageFormat" : {
                                "type" : "string",
                                "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the OMI export task."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the image export task.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the OMI export task."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/LinkNic" : {
      "post" : {
        "tags" : [ "Nic" ],
        "operationId" : "LinkNic",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DeviceNumber", "NicId", "VmId" ],
                "type" : "object",
                "properties" : {
                  "DeviceNumber" : {
                    "type" : "integer",
                    "description" : "The index of the VM device for the NIC attachment (between 1 and 7, both included)."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM to which you want to attach the NIC."
                  },
                  "NicId" : {
                    "type" : "string",
                    "description" : "The ID of the NIC you want to attach."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "LinkNicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC attachment."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadSnapshots" : {
      "post" : {
        "tags" : [ "Snapshot" ],
        "operationId" : "ReadSnapshots",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "VolumeSizes" : {
                        "type" : "array",
                        "description" : "The sizes of the volumes used to create the snapshots, in gibibytes (GiB).",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the snapshots (`in-queue` \\| `completed` \\| `error`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Descriptions" : {
                        "type" : "array",
                        "description" : "The descriptions of the snapshots.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PermissionsToCreateVolumeAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of one or more users who have permissions to create volumes.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owners of the snapshots.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Progresses" : {
                        "type" : "array",
                        "description" : "The progresses of the snapshots, as a percentage.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "VolumeIds" : {
                        "type" : "array",
                        "description" : "The IDs of the volumes used to create the snapshots.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SnapshotIds" : {
                        "type" : "array",
                        "description" : "The IDs of the snapshots.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PermissionsToCreateVolumeGlobalPermission" : {
                        "type" : "boolean",
                        "description" : "If true, lists all public volumes. If false, lists all private volumes."
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the snapshots, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the snapshots.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the snapshots.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AccountAliases" : {
                        "type" : "array",
                        "description" : "The account aliases of the owners of the snapshots.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Snapshots" : {
                      "type" : "array",
                      "description" : "Information about one or more snapshots and their permissions.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "SnapshotId" : {
                            "type" : "string",
                            "description" : "The ID of the snapshot."
                          },
                          "VolumeId" : {
                            "type" : "string",
                            "description" : "The ID of the volume used to create the snapshot."
                          },
                          "Progress" : {
                            "type" : "integer",
                            "description" : "The progress of the snapshot, as a percentage."
                          },
                          "Description" : {
                            "type" : "string",
                            "description" : "The description of the snapshot."
                          },
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the snapshot."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the snapshot (`in-queue` \\| `completed` \\| `error`)."
                          },
                          "PermissionsToCreateVolume" : {
                            "type" : "object",
                            "properties" : {
                              "AccountIds" : {
                                "type" : "array",
                                "description" : "The account ID of one or more users who have permissions for the resource.",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "GlobalPermission" : {
                                "type" : "boolean",
                                "description" : "If true, the resource is public. If false, the resource is private."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the users who have permissions for the resource."
                          },
                          "VolumeSize" : {
                            "type" : "integer",
                            "description" : "The size of the volume used to create the snapshot, in gibibytes (GiB)."
                          },
                          "AccountAlias" : {
                            "type" : "string",
                            "description" : "The account alias of the owner of the snapshot."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the snapshot.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the snapshot."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateApiAccessRule" : {
      "post" : {
        "tags" : [ "ApiAccessRule" ],
        "operationId" : "UpdateApiAccessRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ApiAccessRuleId" ],
                "type" : "object",
                "properties" : {
                  "Description" : {
                    "type" : "string",
                    "description" : "A new description for the API access rule."
                  },
                  "ApiAccessRuleId" : {
                    "type" : "string",
                    "description" : "The ID of the API access rule you want to update."
                  },
                  "CaIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of Client Certificate Authorities (CAs).",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Cns" : {
                    "type" : "array",
                    "description" : "One or more Client Certificate Common Names (CNs).",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "IpRanges" : {
                    "type" : "array",
                    "description" : "One or more IP ranges, in CIDR notation (for example, 192.0.2.0/16).",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ApiAccessRule" : {
                      "type" : "object",
                      "properties" : {
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the API access rule."
                        },
                        "ApiAccessRuleId" : {
                          "type" : "string",
                          "description" : " The ID of the API access rule."
                        },
                        "CaIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Cns" : {
                          "type" : "array",
                          "description" : "One or more Client Certificate Common Names (CNs).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "IpRanges" : {
                          "type" : "array",
                          "description" : "One or more IP ranges used for the API access rule, in CIDR notation (for example, 192.0.2.0/16).",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the API access rule."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteSnapshot" : {
      "post" : {
        "tags" : [ "Snapshot" ],
        "operationId" : "DeleteSnapshot",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "SnapshotId" ],
                "type" : "object",
                "properties" : {
                  "SnapshotId" : {
                    "type" : "string",
                    "description" : "The ID of the snapshot you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteSecurityGroupRule" : {
      "post" : {
        "tags" : [ "SecurityGroupRule" ],
        "operationId" : "DeleteSecurityGroupRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Flow", "SecurityGroupId" ],
                "type" : "object",
                "properties" : {
                  "ToPortRange" : {
                    "type" : "integer",
                    "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                  },
                  "IpRange" : {
                    "type" : "string",
                    "description" : "The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16)."
                  },
                  "SecurityGroupNameToUnlink" : {
                    "type" : "string",
                    "description" : "The ID of the source security group. If you are in the Public Cloud, you can also specify the name of the source security group."
                  },
                  "SecurityGroupId" : {
                    "type" : "string",
                    "description" : "The ID of the security group you want to delete a rule from."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "IpProtocol" : {
                    "type" : "string",
                    "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                  },
                  "Rules" : {
                    "type" : "array",
                    "description" : "One or more rules you want to delete from the security group.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "ToPortRange" : {
                          "type" : "integer",
                          "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                        },
                        "ServiceIds" : {
                          "type" : "array",
                          "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "SecurityGroupsMembers" : {
                          "type" : "array",
                          "description" : "Information about one or more members of a security group.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "AccountId" : {
                                "type" : "string",
                                "description" : "The account ID of a user."
                              },
                              "SecurityGroupName" : {
                                "type" : "string",
                                "description" : "The name of the security group."
                              },
                              "SecurityGroupId" : {
                                "type" : "string",
                                "description" : "The ID of the security group."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the member of a security group."
                          }
                        },
                        "IpProtocol" : {
                          "type" : "string",
                          "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                        },
                        "IpRanges" : {
                          "type" : "array",
                          "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "FromPortRange" : {
                          "type" : "integer",
                          "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the security group rule."
                    }
                  },
                  "SecurityGroupAccountIdToUnlink" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the security group you want to delete a rule from."
                  },
                  "FromPortRange" : {
                    "type" : "integer",
                    "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                  },
                  "Flow" : {
                    "type" : "string",
                    "description" : "The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "SecurityGroup" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the security group."
                        },
                        "InboundRules" : {
                          "type" : "array",
                          "description" : "The inbound rules associated with the security group.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ToPortRange" : {
                                "type" : "integer",
                                "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                              },
                              "ServiceIds" : {
                                "type" : "array",
                                "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "SecurityGroupsMembers" : {
                                "type" : "array",
                                "description" : "Information about one or more members of a security group.",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "AccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of a user."
                                    },
                                    "SecurityGroupName" : {
                                      "type" : "string",
                                      "description" : "The name of the security group."
                                    },
                                    "SecurityGroupId" : {
                                      "type" : "string",
                                      "description" : "The ID of the security group."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the member of a security group."
                                }
                              },
                              "IpProtocol" : {
                                "type" : "string",
                                "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                              },
                              "IpRanges" : {
                                "type" : "array",
                                "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "FromPortRange" : {
                                "type" : "integer",
                                "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group rule."
                          }
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the security group."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of a user that has been granted permission."
                        },
                        "SecurityGroupName" : {
                          "type" : "string",
                          "description" : "The name of the security group."
                        },
                        "SecurityGroupId" : {
                          "type" : "string",
                          "description" : "The ID of the security group."
                        },
                        "OutboundRules" : {
                          "type" : "array",
                          "description" : "The outbound rules associated with the security group.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ToPortRange" : {
                                "type" : "integer",
                                "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                              },
                              "ServiceIds" : {
                                "type" : "array",
                                "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "SecurityGroupsMembers" : {
                                "type" : "array",
                                "description" : "Information about one or more members of a security group.",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "AccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of a user."
                                    },
                                    "SecurityGroupName" : {
                                      "type" : "string",
                                      "description" : "The name of the security group."
                                    },
                                    "SecurityGroupId" : {
                                      "type" : "string",
                                      "description" : "The ID of the security group."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the member of a security group."
                                }
                              },
                              "IpProtocol" : {
                                "type" : "string",
                                "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                              },
                              "IpRanges" : {
                                "type" : "array",
                                "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "FromPortRange" : {
                                "type" : "integer",
                                "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group rule."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the security group.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the security group."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteImage" : {
      "post" : {
        "tags" : [ "Image" ],
        "operationId" : "DeleteImage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ImageId" ],
                "type" : "object",
                "properties" : {
                  "ImageId" : {
                    "type" : "string",
                    "description" : "The ID of the OMI you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteFlexibleGpu" : {
      "post" : {
        "tags" : [ "FlexibleGpu" ],
        "operationId" : "DeleteFlexibleGpu",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "FlexibleGpuId" ],
                "type" : "object",
                "properties" : {
                  "FlexibleGpuId" : {
                    "type" : "string",
                    "description" : "The ID of the fGPU you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteLoadBalancer" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "DeleteLoadBalancer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerName" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateListenerRule" : {
      "post" : {
        "tags" : [ "Listener" ],
        "operationId" : "UpdateListenerRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ListenerRuleName" ],
                "type" : "object",
                "properties" : {
                  "PathPattern" : {
                    "type" : "string",
                    "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?].",
                    "nullable" : true
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "HostPattern" : {
                    "type" : "string",
                    "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].",
                    "nullable" : true
                  },
                  "ListenerRuleName" : {
                    "type" : "string",
                    "description" : "The name of the listener rule."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ListenerRule" : {
                      "type" : "object",
                      "properties" : {
                        "PathPattern" : {
                          "type" : "string",
                          "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
                        },
                        "Action" : {
                          "type" : "string",
                          "description" : "The type of action for the rule (always `forward`)."
                        },
                        "HostNamePattern" : {
                          "type" : "string",
                          "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]."
                        },
                        "Priority" : {
                          "type" : "integer",
                          "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
                        },
                        "ListenerRuleId" : {
                          "type" : "integer",
                          "description" : "The ID of the listener rule."
                        },
                        "VmIds" : {
                          "type" : "array",
                          "description" : "The IDs of the backend VMs.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "ListenerRuleName" : {
                          "type" : "string",
                          "description" : "A human-readable name for the listener rule."
                        },
                        "ListenerId" : {
                          "type" : "integer",
                          "description" : "The ID of the listener."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the listener rule."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateVolume" : {
      "post" : {
        "tags" : [ "Volume" ],
        "operationId" : "CreateVolume",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "SubregionName" ],
                "type" : "object",
                "properties" : {
                  "SnapshotId" : {
                    "type" : "string",
                    "description" : "The ID of the snapshot from which you want to create the volume."
                  },
                  "VolumeType" : {
                    "type" : "string",
                    "description" : "The type of volume you want to create (`io1` \\| `gp2` \\| `standard`). If not specified, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                  },
                  "Size" : {
                    "type" : "integer",
                    "description" : "The size of the volume, in gibibytes (GiB). The maximum allowed size for a volume is 14901 GiB. This parameter is required if the volume is not created from a snapshot (`SnapshotId` unspecified). "
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Iops" : {
                    "type" : "integer",
                    "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                  },
                  "SubregionName" : {
                    "type" : "string",
                    "description" : "The Subregion in which you want to create the volume."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Volume" : {
                      "type" : "object",
                      "properties" : {
                        "SnapshotId" : {
                          "type" : "string",
                          "description" : "The snapshot from which the volume was created."
                        },
                        "VolumeId" : {
                          "type" : "string",
                          "description" : "The ID of the volume."
                        },
                        "VolumeType" : {
                          "type" : "string",
                          "description" : "The type of the volume (`standard` \\| `gp2` \\| `io1`)."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the volume (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`)."
                        },
                        "Size" : {
                          "type" : "integer",
                          "description" : "The size of the volume, in gibibytes (GiB)."
                        },
                        "LinkedVolumes" : {
                          "type" : "array",
                          "description" : "Information about your volume attachment.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "VolumeId" : {
                                "type" : "string",
                                "description" : "The ID of the volume."
                              },
                              "DeleteOnVmDeletion" : {
                                "type" : "boolean",
                                "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`)."
                              },
                              "VmId" : {
                                "type" : "string",
                                "description" : "The ID of the VM."
                              },
                              "DeviceName" : {
                                "type" : "string",
                                "description" : "The name of the device."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about volume attachment."
                          }
                        },
                        "Iops" : {
                          "type" : "integer",
                          "description" : "The number of I/O operations per second (IOPS):<br />\n- For `io1` volumes, the number of provisioned IOPS<br />\n- For `gp2` volumes, the baseline performance of the volume"
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the volume.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "SubregionName" : {
                          "type" : "string",
                          "description" : "The Subregion in which the volume was created."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the volume."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateLoadBalancer" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "CreateLoadBalancer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Listeners", "LoadBalancerName" ],
                "type" : "object",
                "properties" : {
                  "SecurityGroups" : {
                    "type" : "array",
                    "description" : "(Net only) One or more IDs of security groups you want to assign to the load balancer. If not specified, the default security group of the Net is assigned to the load balancer.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The unique name of the load balancer (32 alphanumeric or hyphen characters maximum, but cannot start or end with a hyphen)."
                  },
                  "Subnets" : {
                    "type" : "array",
                    "description" : "(Net only) The ID of the Subnet in which you want to create the load balancer. Regardless of this Subnet, the load balancer can distribute traffic to all Subnets. This parameter is required in a Net.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "Listeners" : {
                    "type" : "array",
                    "description" : "One or more listeners to create.",
                    "items" : {
                      "required" : [ "BackendPort", "LoadBalancerPort", "LoadBalancerProtocol" ],
                      "type" : "object",
                      "properties" : {
                        "BackendProtocol" : {
                          "type" : "string",
                          "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                        },
                        "LoadBalancerProtocol" : {
                          "type" : "string",
                          "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                        },
                        "BackendPort" : {
                          "type" : "integer",
                          "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                        },
                        "ServerCertificateId" : {
                          "type" : "string",
                          "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                        },
                        "LoadBalancerPort" : {
                          "type" : "integer",
                          "description" : "The port on which the load balancer is listening (between `1` and `65535`, both included)."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the listener to create."
                    }
                  },
                  "SubregionNames" : {
                    "type" : "array",
                    "description" : "(public Cloud only) The Subregion in which you want to create the load balancer. Regardless of this Subregion, the load balancer can distribute traffic to all Subregions. This parameter is required in the public Cloud.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Tags" : {
                    "type" : "array",
                    "description" : "One or more tags assigned to the load balancer.",
                    "items" : {
                      "required" : [ "Key", "Value" ],
                      "type" : "object",
                      "properties" : {
                        "Value" : {
                          "type" : "string",
                          "description" : "The value of the tag, between 0 and 255 characters."
                        },
                        "Key" : {
                          "type" : "string",
                          "description" : "The key of the tag, with a minimum of 1 character."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the tag."
                    }
                  },
                  "LoadBalancerType" : {
                    "type" : "string",
                    "description" : "The type of load balancer: `internet-facing` or `internal`. Use this parameter only for load balancers in a Net."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LoadBalancer" : {
                      "type" : "object",
                      "properties" : {
                        "AccessLog" : {
                          "type" : "object",
                          "properties" : {
                            "OsuBucketPrefix" : {
                              "type" : "string",
                              "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                            },
                            "IsEnabled" : {
                              "type" : "boolean",
                              "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                            },
                            "PublicationInterval" : {
                              "type" : "integer",
                              "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                            },
                            "OsuBucketName" : {
                              "type" : "string",
                              "description" : "The name of the OOS bucket for the access logs."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about access logs."
                        },
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "BackendVmIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of back-end VMs for the load balancer.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the load balancer."
                        },
                        "DnsName" : {
                          "type" : "string",
                          "description" : "The DNS name of the load balancer."
                        },
                        "ApplicationStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The stickiness policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                              },
                              "CookieName" : {
                                "type" : "string",
                                "description" : "The name of the application cookie used for stickiness."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "SourceSecurityGroup" : {
                          "type" : "object",
                          "properties" : {
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            },
                            "SecurityGroupAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
                        },
                        "HealthCheck" : {
                          "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                          "type" : "object",
                          "properties" : {
                            "Path" : {
                              "type" : "string",
                              "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                            },
                            "UnhealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                            },
                            "Timeout" : {
                              "type" : "integer",
                              "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                            },
                            "CheckInterval" : {
                              "type" : "integer",
                              "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                            },
                            "Port" : {
                              "type" : "integer",
                              "description" : "The port number (between `1` and `65535`, both included)."
                            },
                            "HealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                            },
                            "Protocol" : {
                              "type" : "string",
                              "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the health check configuration."
                        },
                        "LoadBalancerType" : {
                          "type" : "string",
                          "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
                        },
                        "LoadBalancerName" : {
                          "type" : "string",
                          "description" : "The name of the load balancer."
                        },
                        "Subnets" : {
                          "type" : "array",
                          "description" : "The ID of the Subnet in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Listeners" : {
                          "type" : "array",
                          "description" : "The listeners for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyNames" : {
                                "type" : "array",
                                "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "BackendProtocol" : {
                                "type" : "string",
                                "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "LoadBalancerProtocol" : {
                                "type" : "string",
                                "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "BackendPort" : {
                                "type" : "integer",
                                "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                              },
                              "ServerCertificateId" : {
                                "type" : "string",
                                "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                              },
                              "LoadBalancerPort" : {
                                "type" : "integer",
                                "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the listener."
                          }
                        },
                        "SubregionNames" : {
                          "type" : "array",
                          "description" : "The ID of the Subregion in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "LoadBalancerStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "CookieExpirationPeriod" : {
                                "type" : "integer",
                                "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                              },
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The name of the stickiness policy."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the load balancer.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the load balancer."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateRoute" : {
      "post" : {
        "tags" : [ "Route" ],
        "operationId" : "CreateRoute",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DestinationIpRange", "RouteTableId" ],
                "type" : "object",
                "properties" : {
                  "NatServiceId" : {
                    "type" : "string",
                    "description" : "The ID of a NAT service."
                  },
                  "RouteTableId" : {
                    "type" : "string",
                    "description" : "The ID of the route table for which you want to create a route."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DestinationIpRange" : {
                    "type" : "string",
                    "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of a NAT VM in your Net (attached to exactly one NIC)."
                  },
                  "NetPeeringId" : {
                    "type" : "string",
                    "description" : "The ID of a Net peering connection."
                  },
                  "GatewayId" : {
                    "type" : "string",
                    "description" : "The ID of an Internet service or virtual gateway attached to your Net."
                  },
                  "NicId" : {
                    "type" : "string",
                    "description" : "The ID of a NIC."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "RouteTable" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the route table."
                        },
                        "RouteTableId" : {
                          "type" : "string",
                          "description" : "The ID of the route table."
                        },
                        "RoutePropagatingVirtualGateways" : {
                          "type" : "array",
                          "description" : "Information about virtual gateways propagating routes.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "VirtualGatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the virtual gateway."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route propagating virtual gateway."
                          }
                        },
                        "LinkRouteTables" : {
                          "type" : "array",
                          "description" : "One or more associations between the route table and Subnets.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "RouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the route table."
                              },
                              "LinkRouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the association between the route table and the Subnet."
                              },
                              "SubnetId" : {
                                "type" : "string",
                                "description" : "The ID of the Subnet."
                              },
                              "Main" : {
                                "type" : "boolean",
                                "description" : "If true, the route table is the main one."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "One or more associations between the route table and the Subnets."
                          }
                        },
                        "Routes" : {
                          "type" : "array",
                          "description" : "One or more routes in the route table.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "NatServiceId" : {
                                "type" : "string",
                                "description" : "The ID of a NAT service attached to the Net."
                              },
                              "VmAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the VM."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                              },
                              "CreationMethod" : {
                                "type" : "string",
                                "description" : "The method used to create the route."
                              },
                              "DestinationIpRange" : {
                                "type" : "string",
                                "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                              },
                              "VmId" : {
                                "type" : "string",
                                "description" : "The ID of a VM specified in a route in the table."
                              },
                              "NetPeeringId" : {
                                "type" : "string",
                                "description" : "The ID of the Net peering connection."
                              },
                              "NetAccessPointId" : {
                                "type" : "string",
                                "description" : "The ID of the Net access point."
                              },
                              "GatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                              },
                              "DestinationServiceId" : {
                                "type" : "string",
                                "description" : "The ID of the OUTSCALE service."
                              },
                              "NicId" : {
                                "type" : "string",
                                "description" : "The ID of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the route table.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the route table."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadVmsState" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "ReadVmsState",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "VmStates" : {
                        "type" : "array",
                        "description" : "The states of the VMs (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SubregionNames" : {
                        "type" : "array",
                        "description" : "The names of the Subregions of the VMs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "MaintenanceEventCodes" : {
                        "type" : "array",
                        "description" : "The code for the scheduled event (`system-reboot` | `system-maintenance`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "MaintenanceEventsNotBefore" : {
                        "type" : "array",
                        "description" : "The earliest time the event can start.",
                        "items" : {
                          "type" : "string",
                          "format" : "date"
                        }
                      },
                      "MaintenanceEventsNotAfter" : {
                        "type" : "array",
                        "description" : "The latest time the event can end.",
                        "items" : {
                          "type" : "string",
                          "format" : "date"
                        }
                      },
                      "MaintenanceEventDescriptions" : {
                        "type" : "array",
                        "description" : "The description of the scheduled event.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VmIds" : {
                        "type" : "array",
                        "description" : "One or more IDs of VMs.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "AllVms" : {
                    "type" : "boolean",
                    "description" : "If true, includes the status of all VMs. By default or if set to false, only includes the status of running VMs."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "VmStates" : {
                      "type" : "array",
                      "description" : "Information about one or more VM states.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "VmState" : {
                            "type" : "string",
                            "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
                          },
                          "MaintenanceEvents" : {
                            "type" : "array",
                            "description" : "One or more scheduled events associated with the VM.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "Description" : {
                                  "type" : "string",
                                  "description" : "The description of the event."
                                },
                                "NotBefore" : {
                                  "type" : "string",
                                  "description" : "The earliest scheduled start time for the event.",
                                  "format" : "date"
                                },
                                "NotAfter" : {
                                  "type" : "string",
                                  "description" : "The latest scheduled end time for the event.",
                                  "format" : "date"
                                },
                                "Code" : {
                                  "type" : "string",
                                  "description" : "The code of the event (`system-reboot` \\| `system-maintenance`)."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the maintenance event."
                            }
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the VM."
                          },
                          "SubregionName" : {
                            "type" : "string",
                            "description" : "The name of the Subregion of the VM."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the states of the VMs."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadConsoleOutput" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "ReadConsoleOutput",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VmId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ConsoleOutput" : {
                      "type" : "string",
                      "description" : "The Base64-encoded output of the console. If a command line tool is used, the output is decoded by the tool."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of the VM."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteRouteTable" : {
      "post" : {
        "tags" : [ "RouteTable" ],
        "operationId" : "DeleteRouteTable",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "RouteTableId" ],
                "type" : "object",
                "properties" : {
                  "RouteTableId" : {
                    "type" : "string",
                    "description" : "The ID of the route table you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteClientGateway" : {
      "post" : {
        "tags" : [ "ClientGateway" ],
        "operationId" : "DeleteClientGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ClientGatewayId" ],
                "type" : "object",
                "properties" : {
                  "ClientGatewayId" : {
                    "type" : "string",
                    "description" : "The ID of the client gateway you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadApiLogs" : {
      "post" : {
        "tags" : [ "ApiLog" ],
        "operationId" : "ReadApiLogs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "QueryCallNames" : {
                        "type" : "array",
                        "description" : "The names of the logged calls.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ResponseStatusCodes" : {
                        "type" : "array",
                        "description" : "The HTTP status codes of the logged calls.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "QueryUserAgents" : {
                        "type" : "array",
                        "description" : "The user agents of the HTTP requests of the logged calls.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "QueryDateAfter" : {
                        "type" : "string",
                        "description" : "The date after which you want to retrieve logged calls, in ISO 8601 format (for example, `2020-06-14`). By default, this date is set to 2 days ago.",
                        "format" : "date"
                      },
                      "QueryIpAddresses" : {
                        "type" : "array",
                        "description" : "The IP addresses used for the logged calls.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "QueryDateBefore" : {
                        "type" : "string",
                        "description" : "The date before which you want to retrieve logged calls, in ISO 8601 format (for example, `2020-06-30`). By default, this date is set to now.",
                        "format" : "date"
                      },
                      "QueryAccessKeys" : {
                        "type" : "array",
                        "description" : "The access keys used for the logged calls.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RequestIds" : {
                        "type" : "array",
                        "description" : "The request IDs provided in the responses of the logged calls.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "QueryApiNames" : {
                        "type" : "array",
                        "description" : "The names of the APIs of the logged calls (always `oapi` for the OUTSCALE API).",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "NextPageToken" : {
                    "type" : "string",
                    "description" : "The token to request the next page of results."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "ResultsPerPage" : {
                    "type" : "integer",
                    "description" : "The maximum number of logs returned in a single response (between `1`and `1000`, both included). By default, `100`."
                  },
                  "With" : {
                    "type" : "object",
                    "properties" : {
                      "QueryAccessKey" : {
                        "type" : "boolean",
                        "description" : "If set to true, the access key is displayed."
                      },
                      "QueryDate" : {
                        "type" : "boolean",
                        "description" : "If set to true, the date of the call is displayed."
                      },
                      "QueryApiName" : {
                        "type" : "boolean",
                        "description" : "If set to true, the name of the API is displayed."
                      },
                      "QueryPayloadSize" : {
                        "type" : "boolean",
                        "description" : "If set to true, the size of the raw payload of the HTTP request is displayed."
                      },
                      "AccountId" : {
                        "type" : "boolean",
                        "description" : "By default or if set to true, the account ID is displayed."
                      },
                      "RequestId" : {
                        "type" : "boolean",
                        "description" : "By default ot if set to true, the request ID is displayed."
                      },
                      "QueryUserAgent" : {
                        "type" : "boolean",
                        "description" : "If set to true, the user agent of the HTTP request is displayed."
                      },
                      "QueryApiVersion" : {
                        "type" : "boolean",
                        "description" : "If set to true, the version of the API is displayed."
                      },
                      "QueryHeaderSize" : {
                        "type" : "boolean",
                        "description" : "If set to true, the size of the raw header of the HTTP request is displayed."
                      },
                      "QueryCallName" : {
                        "type" : "boolean",
                        "description" : "If set to true, the name of the call is displayed."
                      },
                      "QueryPayloadRaw" : {
                        "type" : "boolean",
                        "description" : "If set to true, the raw payload of the HTTP request is displayed."
                      },
                      "CallDuration" : {
                        "type" : "boolean",
                        "description" : "If set to true, the duration of the call is displayed."
                      },
                      "QueryIpAddress" : {
                        "type" : "boolean",
                        "description" : "If set to true, the IP address is displayed."
                      },
                      "ResponseSize" : {
                        "type" : "boolean",
                        "description" : "If set to true, the size of the response is displayed."
                      },
                      "ResponseStatusCode" : {
                        "type" : "boolean",
                        "description" : "If set to true, the HTTP status code of the response is displayed."
                      },
                      "QueryHeaderRaw" : {
                        "type" : "boolean",
                        "description" : "If set to true, the raw header of the HTTP request is displayed."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "The information to display in each returned log. If this parameter is not specified, all available fields are considered as true."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "NextPageToken" : {
                      "type" : "string",
                      "description" : "The token to request the next page of results."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Logs" : {
                      "type" : "array",
                      "description" : "Information about one or more logs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "QueryAccessKey" : {
                            "type" : "string",
                            "description" : "The access key used for the logged call."
                          },
                          "QueryDate" : {
                            "type" : "string",
                            "description" : "The date of the logged call, in ISO 8601 format.",
                            "format" : "date"
                          },
                          "QueryApiName" : {
                            "type" : "string",
                            "description" : "The name of the API used by the logged call (always `oapi` for the OUTSCALE API)."
                          },
                          "QueryPayloadSize" : {
                            "type" : "integer",
                            "description" : "The size of the raw payload of the HTTP request of the logged call, in bytes."
                          },
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the logged call."
                          },
                          "RequestId" : {
                            "type" : "string",
                            "description" : "The request ID provided in the response of the logged call."
                          },
                          "QueryUserAgent" : {
                            "type" : "string",
                            "description" : "The user agent of the HTTP request of the logged call."
                          },
                          "QueryApiVersion" : {
                            "type" : "string",
                            "description" : "The version of the API used by the logged call."
                          },
                          "QueryHeaderSize" : {
                            "type" : "integer",
                            "description" : "The size of the raw header of the HTTP request of the logged call, in bytes."
                          },
                          "QueryCallName" : {
                            "type" : "string",
                            "description" : "The name of the logged call."
                          },
                          "QueryPayloadRaw" : {
                            "type" : "string",
                            "description" : "The raw payload of the HTTP request of the logged call."
                          },
                          "CallDuration" : {
                            "type" : "integer",
                            "description" : "The duration of the logged call, in microseconds."
                          },
                          "QueryIpAddress" : {
                            "type" : "string",
                            "description" : "The IP address used for the logged call."
                          },
                          "ResponseSize" : {
                            "type" : "integer",
                            "description" : "The size of the response of the logged call, in bytes."
                          },
                          "ResponseStatusCode" : {
                            "type" : "integer",
                            "description" : "The HTTP status code of the response of the logged call."
                          },
                          "QueryHeaderRaw" : {
                            "type" : "string",
                            "description" : "The raw header of the HTTP request of the logged call."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the log."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadPublicIps" : {
      "post" : {
        "tags" : [ "PublicIp" ],
        "operationId" : "ReadPublicIps",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "PublicIps" : {
                        "type" : "array",
                        "description" : "The External IP addresses (EIPs).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PrivateIps" : {
                        "type" : "array",
                        "description" : "The private IP addresses associated with the EIPs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkPublicIpIds" : {
                        "type" : "array",
                        "description" : "The IDs representing the associations of EIPs with VMs or NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PublicIpIds" : {
                        "type" : "array",
                        "description" : "The IDs of the External IP addresses (EIPs).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Placements" : {
                        "type" : "array",
                        "description" : "Whether the EIPs are for use in the public Cloud or in a Net.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NicAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owners of the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the EIPs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the EIPs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the EIPs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VmIds" : {
                        "type" : "array",
                        "description" : "The IDs of the VMs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NicIds" : {
                        "type" : "array",
                        "description" : "The IDs of the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "PublicIps" : {
                      "type" : "array",
                      "description" : "Information about one or more EIPs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "NicAccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the NIC."
                          },
                          "PublicIp" : {
                            "type" : "string",
                            "description" : "The External IP address (EIP) associated with the NAT service."
                          },
                          "PrivateIp" : {
                            "type" : "string",
                            "description" : "The private IP address associated with the EIP."
                          },
                          "LinkPublicIpId" : {
                            "type" : "string",
                            "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the VM the External IP (EIP) is associated with (if any)."
                          },
                          "PublicIpId" : {
                            "type" : "string",
                            "description" : "The allocation ID of the EIP associated with the NAT service."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the EIP.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "NicId" : {
                            "type" : "string",
                            "description" : "The ID of the NIC the EIP is associated with (if any)."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the public IP."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadRouteTables" : {
      "post" : {
        "tags" : [ "RouteTable" ],
        "operationId" : "ReadRouteTables",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "RouteDestinationServiceIds" : {
                        "type" : "array",
                        "description" : "The service IDs specified in routes in the tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteNatServiceIds" : {
                        "type" : "array",
                        "description" : "The IDs of the NAT services specified in routes in the tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets for the route tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteDestinationIpRanges" : {
                        "type" : "array",
                        "description" : "The IP ranges specified in routes in the tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteGatewayIds" : {
                        "type" : "array",
                        "description" : "The IDs of the gateways specified in routes in the tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the route tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the route tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteVmIds" : {
                        "type" : "array",
                        "description" : "The IDs of the VMs specified in routes in the tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkSubnetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Subnets involved in the associations.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkRouteTableMain" : {
                        "type" : "boolean",
                        "description" : "If true, the route tables are the main ones for their Nets."
                      },
                      "LinkRouteTableLinkRouteTableIds" : {
                        "type" : "array",
                        "description" : "The IDs of the associations between the route tables and the Subnets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteTableIds" : {
                        "type" : "array",
                        "description" : "The IDs of the route tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkRouteTableIds" : {
                        "type" : "array",
                        "description" : "The IDs of the route tables involved in the associations.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteStates" : {
                        "type" : "array",
                        "description" : "The states of routes in the route tables (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteNetPeeringIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Net peering connections specified in routes in the tables.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the route tables, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RouteCreationMethods" : {
                        "type" : "array",
                        "description" : "The methods used to create a route.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "RouteTables" : {
                      "type" : "array",
                      "description" : "Information about one or more route tables.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net for the route table."
                          },
                          "RouteTableId" : {
                            "type" : "string",
                            "description" : "The ID of the route table."
                          },
                          "RoutePropagatingVirtualGateways" : {
                            "type" : "array",
                            "description" : "Information about virtual gateways propagating routes.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "VirtualGatewayId" : {
                                  "type" : "string",
                                  "description" : "The ID of the virtual gateway."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the route propagating virtual gateway."
                            }
                          },
                          "LinkRouteTables" : {
                            "type" : "array",
                            "description" : "One or more associations between the route table and Subnets.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "RouteTableId" : {
                                  "type" : "string",
                                  "description" : "The ID of the route table."
                                },
                                "LinkRouteTableId" : {
                                  "type" : "string",
                                  "description" : "The ID of the association between the route table and the Subnet."
                                },
                                "SubnetId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Subnet."
                                },
                                "Main" : {
                                  "type" : "boolean",
                                  "description" : "If true, the route table is the main one."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "One or more associations between the route table and the Subnets."
                            }
                          },
                          "Routes" : {
                            "type" : "array",
                            "description" : "One or more routes in the route table.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "NatServiceId" : {
                                  "type" : "string",
                                  "description" : "The ID of a NAT service attached to the Net."
                                },
                                "VmAccountId" : {
                                  "type" : "string",
                                  "description" : "The account ID of the owner of the VM."
                                },
                                "State" : {
                                  "type" : "string",
                                  "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                                },
                                "CreationMethod" : {
                                  "type" : "string",
                                  "description" : "The method used to create the route."
                                },
                                "DestinationIpRange" : {
                                  "type" : "string",
                                  "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                                },
                                "VmId" : {
                                  "type" : "string",
                                  "description" : "The ID of a VM specified in a route in the table."
                                },
                                "NetPeeringId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Net peering connection."
                                },
                                "NetAccessPointId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Net access point."
                                },
                                "GatewayId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                                },
                                "DestinationServiceId" : {
                                  "type" : "string",
                                  "description" : "The ID of the OUTSCALE service."
                                },
                                "NicId" : {
                                  "type" : "string",
                                  "description" : "The ID of the NIC."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the route."
                            }
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the route table.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the route table."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateFlexibleGpu" : {
      "post" : {
        "tags" : [ "FlexibleGpu" ],
        "operationId" : "UpdateFlexibleGpu",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "FlexibleGpuId" ],
                "type" : "object",
                "properties" : {
                  "DeleteOnVmDeletion" : {
                    "type" : "boolean",
                    "description" : "If true, the fGPU is deleted when the VM is terminated."
                  },
                  "FlexibleGpuId" : {
                    "type" : "string",
                    "description" : "The ID of the fGPU you want to modify."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "FlexibleGpu" : {
                      "type" : "object",
                      "properties" : {
                        "Generation" : {
                          "type" : "string",
                          "description" : "The compatible processor generation."
                        },
                        "ModelName" : {
                          "type" : "string",
                          "description" : "The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
                        },
                        "DeleteOnVmDeletion" : {
                          "type" : "boolean",
                          "description" : "If true, the fGPU is deleted when the VM is terminated."
                        },
                        "FlexibleGpuId" : {
                          "type" : "string",
                          "description" : "The ID of the fGPU."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`)."
                        },
                        "VmId" : {
                          "type" : "string",
                          "description" : "The ID of the VM the fGPU is attached to, if any."
                        },
                        "SubregionName" : {
                          "type" : "string",
                          "description" : "The Subregion where the fGPU is located."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the flexible GPU (fGPU)."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadConsumptionAccount" : {
      "post" : {
        "tags" : [ "Account" ],
        "operationId" : "ReadConsumptionAccount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "FromDate", "ToDate" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "ToDate" : {
                    "type" : "string",
                    "description" : "The end of the time period, in ISO 8601 date-time format (for example, `2017-06-30` or `2017-06-30T00:00:00Z`).",
                    "format" : "datetime"
                  },
                  "FromDate" : {
                    "type" : "string",
                    "description" : "The beginning of the time period, in ISO 8601 date-time format (for example, `2017-06-14` or `2017-06-14T00:00:00Z`).",
                    "format" : "datetime"
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "ConsumptionEntries" : {
                      "type" : "array",
                      "description" : "Information about the resources consumed during the specified time period.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of resource, depending on the API call."
                          },
                          "Category" : {
                            "type" : "string",
                            "description" : "The category of the resource (for example, `network`)."
                          },
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The ID of your TINA account."
                          },
                          "Value" : {
                            "type" : "number",
                            "description" : "The consumed amount for the resource. The unit depends on the resource type. For more information, see the `Title` element.",
                            "format" : "double"
                          },
                          "Title" : {
                            "type" : "string",
                            "description" : "A description of the consumed resource."
                          },
                          "Service" : {
                            "type" : "string",
                            "description" : "The service of the API call (`TinaOS-FCU`, `TinaOS-LBU`, `TinaOS-DirectLink`, `TinaOS-OOS`, or `TinaOS-OSU`)."
                          },
                          "ToDate" : {
                            "type" : "string",
                            "description" : "The end of the time period."
                          },
                          "FromDate" : {
                            "type" : "string",
                            "description" : "The beginning of the time period."
                          },
                          "Operation" : {
                            "type" : "string",
                            "description" : "The API call that triggered the resource consumption (for example, `RunInstances` or `CreateVolume`)."
                          },
                          "PayingAccountId" : {
                            "type" : "string",
                            "description" : "The ID of the TINA account which is billed for your consumption. It can be different from your account in the `AccountId` parameter."
                          },
                          "SubregionName" : {
                            "type" : "string",
                            "description" : "The name of the Subregion."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the resources consumed during the specified time period."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteAccessKey" : {
      "post" : {
        "tags" : [ "AccessKey" ],
        "operationId" : "DeleteAccessKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "AccessKeyId" ],
                "type" : "object",
                "properties" : {
                  "AccessKeyId" : {
                    "type" : "string",
                    "description" : "The ID of the access key you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadClientGateways" : {
      "post" : {
        "tags" : [ "ClientGateway" ],
        "operationId" : "ReadClientGateways",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the client gateways (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ConnectionTypes" : {
                        "type" : "array",
                        "description" : "The types of communication tunnels used by the client gateways (only `ipsec.1` is supported).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PublicIps" : {
                        "type" : "array",
                        "description" : "The public IPv4 addresses of the client gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ClientGatewayIds" : {
                        "type" : "array",
                        "description" : "The IDs of the client gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "BgpAsns" : {
                        "type" : "array",
                        "description" : "The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the client gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the client gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the client gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "ClientGateways" : {
                      "type" : "array",
                      "description" : "Information about one or more client gateways.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ConnectionType" : {
                            "type" : "string",
                            "description" : "The type of communication tunnel used by the client gateway (only `ipsec.1` is supported)."
                          },
                          "PublicIp" : {
                            "type" : "string",
                            "description" : "The public IPv4 address of the client gateway (must be a fixed address into a NATed network)."
                          },
                          "ClientGatewayId" : {
                            "type" : "string",
                            "description" : "The ID of the client gateway."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the client gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the client gateway.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "BgpAsn" : {
                            "type" : "integer",
                            "description" : "An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the client gateway."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateSecurityGroup" : {
      "post" : {
        "tags" : [ "SecurityGroup" ],
        "operationId" : "CreateSecurityGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Description", "SecurityGroupName" ],
                "type" : "object",
                "properties" : {
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net for the security group."
                  },
                  "Description" : {
                    "type" : "string",
                    "description" : "A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters)."
                  },
                  "SecurityGroupName" : {
                    "type" : "string",
                    "description" : "The name of the security group.<br />\nThis name must not start with `sg-`.</br>\nThis name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "SecurityGroup" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the security group."
                        },
                        "InboundRules" : {
                          "type" : "array",
                          "description" : "The inbound rules associated with the security group.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ToPortRange" : {
                                "type" : "integer",
                                "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                              },
                              "ServiceIds" : {
                                "type" : "array",
                                "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "SecurityGroupsMembers" : {
                                "type" : "array",
                                "description" : "Information about one or more members of a security group.",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "AccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of a user."
                                    },
                                    "SecurityGroupName" : {
                                      "type" : "string",
                                      "description" : "The name of the security group."
                                    },
                                    "SecurityGroupId" : {
                                      "type" : "string",
                                      "description" : "The ID of the security group."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the member of a security group."
                                }
                              },
                              "IpProtocol" : {
                                "type" : "string",
                                "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                              },
                              "IpRanges" : {
                                "type" : "array",
                                "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "FromPortRange" : {
                                "type" : "integer",
                                "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group rule."
                          }
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the security group."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of a user that has been granted permission."
                        },
                        "SecurityGroupName" : {
                          "type" : "string",
                          "description" : "The name of the security group."
                        },
                        "SecurityGroupId" : {
                          "type" : "string",
                          "description" : "The ID of the security group."
                        },
                        "OutboundRules" : {
                          "type" : "array",
                          "description" : "The outbound rules associated with the security group.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ToPortRange" : {
                                "type" : "integer",
                                "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                              },
                              "ServiceIds" : {
                                "type" : "array",
                                "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "SecurityGroupsMembers" : {
                                "type" : "array",
                                "description" : "Information about one or more members of a security group.",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "AccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of a user."
                                    },
                                    "SecurityGroupName" : {
                                      "type" : "string",
                                      "description" : "The name of the security group."
                                    },
                                    "SecurityGroupId" : {
                                      "type" : "string",
                                      "description" : "The ID of the security group."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the member of a security group."
                                }
                              },
                              "IpProtocol" : {
                                "type" : "string",
                                "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                              },
                              "IpRanges" : {
                                "type" : "array",
                                "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "FromPortRange" : {
                                "type" : "integer",
                                "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group rule."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the security group.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the security group."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/AcceptNetPeering" : {
      "post" : {
        "tags" : [ "NetPeering" ],
        "operationId" : "AcceptNetPeering",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetPeeringId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "NetPeeringId" : {
                    "type" : "string",
                    "description" : "The ID of the Net peering connection you want to accept."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "NetPeering" : {
                      "type" : "object",
                      "properties" : {
                        "SourceNet" : {
                          "type" : "object",
                          "properties" : {
                            "IpRange" : {
                              "type" : "string",
                              "description" : "The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16)."
                            },
                            "NetId" : {
                              "type" : "string",
                              "description" : "The ID of the source Net."
                            },
                            "AccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the source Net."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the source Net."
                        },
                        "State" : {
                          "type" : "object",
                          "properties" : {
                            "Message" : {
                              "type" : "string",
                              "description" : "Additional information about the state of the Net peering connection."
                            },
                            "Name" : {
                              "type" : "string",
                              "description" : "The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the state of the Net peering connection."
                        },
                        "NetPeeringId" : {
                          "type" : "string",
                          "description" : "The ID of the Net peering connection."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Net peering connection.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "AccepterNet" : {
                          "type" : "object",
                          "properties" : {
                            "IpRange" : {
                              "type" : "string",
                              "description" : "The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16)."
                            },
                            "NetId" : {
                              "type" : "string",
                              "description" : "The ID of the accepter Net."
                            },
                            "AccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the accepter Net."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the accepter Net."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Net peering connection."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "409" : {
            "description" : "The HTTP 409 response (Conflict).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadListenerRules" : {
      "post" : {
        "tags" : [ "Listener" ],
        "operationId" : "ReadListenerRules",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "ListenerRuleNames" : {
                        "type" : "array",
                        "description" : "The names of the listener rules.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "ListenerRules" : {
                      "type" : "array",
                      "description" : "The list of the rules to describe.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "PathPattern" : {
                            "type" : "string",
                            "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
                          },
                          "Action" : {
                            "type" : "string",
                            "description" : "The type of action for the rule (always `forward`)."
                          },
                          "HostNamePattern" : {
                            "type" : "string",
                            "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]."
                          },
                          "Priority" : {
                            "type" : "integer",
                            "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
                          },
                          "ListenerRuleId" : {
                            "type" : "integer",
                            "description" : "The ID of the listener rule."
                          },
                          "VmIds" : {
                            "type" : "array",
                            "description" : "The IDs of the backend VMs.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "ListenerRuleName" : {
                            "type" : "string",
                            "description" : "A human-readable name for the listener rule."
                          },
                          "ListenerId" : {
                            "type" : "integer",
                            "description" : "The ID of the listener."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the listener rule."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteNatService" : {
      "post" : {
        "tags" : [ "NatService" ],
        "operationId" : "DeleteNatService",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NatServiceId" ],
                "type" : "object",
                "properties" : {
                  "NatServiceId" : {
                    "type" : "string",
                    "description" : "The ID of the NAT service you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteDhcpOptions" : {
      "post" : {
        "tags" : [ "DhcpOption" ],
        "operationId" : "DeleteDhcpOptions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DhcpOptionsSetId" ],
                "type" : "object",
                "properties" : {
                  "DhcpOptionsSetId" : {
                    "type" : "string",
                    "description" : "The ID of the DHCP options set you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadNics" : {
      "post" : {
        "tags" : [ "Nic" ],
        "operationId" : "ReadNics",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "PrivateIpsPrivateIps" : {
                        "type" : "array",
                        "description" : "The private IP addresses of the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkPublicIpPublicIpIds" : {
                        "type" : "array",
                        "description" : "The allocation IDs returned when the EIPs were allocated to their accounts.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkNicVmIds" : {
                        "type" : "array",
                        "description" : "The IDs of the VMs the NICs are attached to.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PrivateIpsPrimaryIp" : {
                        "type" : "boolean",
                        "description" : "The primary private IP addresses of the NICs."
                      },
                      "LinkNicVmAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owners of the VMs the NICs are attached to.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SubnetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Subnets for the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkPublicIpAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owners of the EIPs associated with the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkPublicIpLinkPublicIpIds" : {
                        "type" : "array",
                        "description" : "The association IDs returned when the EIPs were associated with the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Descriptions" : {
                        "type" : "array",
                        "description" : "The descriptions of the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SubregionNames" : {
                        "type" : "array",
                        "description" : "The Subregions where the NICs are located.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkNicStates" : {
                        "type" : "array",
                        "description" : "The states of the attachments.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the NICs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets where the NICs are located.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkNicDeleteOnVmDeletion" : {
                        "type" : "boolean",
                        "description" : "Whether the NICs are deleted when the VMs they are attached to are terminated."
                      },
                      "PrivateIpsLinkPublicIpPublicIps" : {
                        "type" : "array",
                        "description" : "The EIPs associated with the private IP addresses.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SecurityGroupNames" : {
                        "type" : "array",
                        "description" : "The names of the security groups associated with the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SecurityGroupIds" : {
                        "type" : "array",
                        "description" : "The IDs of the security groups associated with the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkNicDeviceNumbers" : {
                        "type" : "array",
                        "description" : "The device numbers the NICs are attached to.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "IsSourceDestCheck" : {
                        "type" : "boolean",
                        "description" : "Whether the source/destination checking is enabled (true) or disabled (false)."
                      },
                      "PrivateDnsNames" : {
                        "type" : "array",
                        "description" : "The private DNS names associated with the primary private IP addresses.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkPublicIpPublicIps" : {
                        "type" : "array",
                        "description" : "The EIPs associated with the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PrivateIpsLinkPublicIpAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owner of the EIPs associated with the private IP addresses.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkNicLinkNicIds" : {
                        "type" : "array",
                        "description" : "The attachment IDs of the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "MacAddresses" : {
                        "type" : "array",
                        "description" : "The Media Access Control (MAC) addresses of the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NicIds" : {
                        "type" : "array",
                        "description" : "The IDs of the NICs.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Nics" : {
                      "type" : "array",
                      "description" : "Information about one or more NICs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "SecurityGroups" : {
                            "type" : "array",
                            "description" : "One or more IDs of security groups for the NIC.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "SecurityGroupName" : {
                                  "type" : "string",
                                  "description" : "The name of the security group."
                                },
                                "SecurityGroupId" : {
                                  "type" : "string",
                                  "description" : "The ID of the security group."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the security group."
                            }
                          },
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net for the NIC."
                          },
                          "LinkPublicIp" : {
                            "type" : "object",
                            "properties" : {
                              "PublicIp" : {
                                "type" : "string",
                                "description" : "The External IP address (EIP) associated with the NIC."
                              },
                              "LinkPublicIpId" : {
                                "type" : "string",
                                "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                              },
                              "PublicIpId" : {
                                "type" : "string",
                                "description" : "The allocation ID of the EIP."
                              },
                              "PublicIpAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the EIP."
                              },
                              "PublicDnsName" : {
                                "type" : "string",
                                "description" : "The name of the public DNS."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the EIP association."
                          },
                          "PrivateDnsName" : {
                            "type" : "string",
                            "description" : "The name of the private DNS."
                          },
                          "Description" : {
                            "type" : "string",
                            "description" : "The description of the NIC."
                          },
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the NIC."
                          },
                          "LinkNic" : {
                            "type" : "object",
                            "properties" : {
                              "DeviceNumber" : {
                                "type" : "integer",
                                "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                              },
                              "DeleteOnVmDeletion" : {
                                "type" : "boolean",
                                "description" : "If true, the NIC is deleted when the VM is terminated."
                              },
                              "VmAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the VM."
                              },
                              "LinkNicId" : {
                                "type" : "string",
                                "description" : "The ID of the NIC to attach."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                              },
                              "VmId" : {
                                "type" : "string",
                                "description" : "The ID of the VM."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the NIC attachment."
                          },
                          "SubnetId" : {
                            "type" : "string",
                            "description" : "The ID of the Subnet."
                          },
                          "MacAddress" : {
                            "type" : "string",
                            "description" : "The Media Access Control (MAC) address of the NIC."
                          },
                          "SubregionName" : {
                            "type" : "string",
                            "description" : "The Subregion in which the NIC is located."
                          },
                          "IsSourceDestChecked" : {
                            "type" : "boolean",
                            "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                          },
                          "PrivateIps" : {
                            "type" : "array",
                            "description" : "The private IP addresses of the NIC.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "LinkPublicIp" : {
                                  "type" : "object",
                                  "properties" : {
                                    "PublicIp" : {
                                      "type" : "string",
                                      "description" : "The External IP address (EIP) associated with the NIC."
                                    },
                                    "LinkPublicIpId" : {
                                      "type" : "string",
                                      "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                                    },
                                    "PublicIpId" : {
                                      "type" : "string",
                                      "description" : "The allocation ID of the EIP."
                                    },
                                    "PublicIpAccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of the owner of the EIP."
                                    },
                                    "PublicDnsName" : {
                                      "type" : "string",
                                      "description" : "The name of the public DNS."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the EIP association."
                                },
                                "PrivateDnsName" : {
                                  "type" : "string",
                                  "description" : "The name of the private DNS."
                                },
                                "PrivateIp" : {
                                  "type" : "string",
                                  "description" : "The private IP address of the NIC."
                                },
                                "IsPrimary" : {
                                  "type" : "boolean",
                                  "description" : "If true, the IP address is the primary private IP address of the NIC."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the private IP."
                            }
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the NIC.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "NicId" : {
                            "type" : "string",
                            "description" : "The ID of the NIC."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the NIC."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteRoute" : {
      "post" : {
        "tags" : [ "Route" ],
        "operationId" : "DeleteRoute",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DestinationIpRange", "RouteTableId" ],
                "type" : "object",
                "properties" : {
                  "RouteTableId" : {
                    "type" : "string",
                    "description" : "The ID of the route table from which you want to delete a route."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DestinationIpRange" : {
                    "type" : "string",
                    "description" : "The exact IP range for the route."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "RouteTable" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the route table."
                        },
                        "RouteTableId" : {
                          "type" : "string",
                          "description" : "The ID of the route table."
                        },
                        "RoutePropagatingVirtualGateways" : {
                          "type" : "array",
                          "description" : "Information about virtual gateways propagating routes.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "VirtualGatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the virtual gateway."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route propagating virtual gateway."
                          }
                        },
                        "LinkRouteTables" : {
                          "type" : "array",
                          "description" : "One or more associations between the route table and Subnets.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "RouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the route table."
                              },
                              "LinkRouteTableId" : {
                                "type" : "string",
                                "description" : "The ID of the association between the route table and the Subnet."
                              },
                              "SubnetId" : {
                                "type" : "string",
                                "description" : "The ID of the Subnet."
                              },
                              "Main" : {
                                "type" : "boolean",
                                "description" : "If true, the route table is the main one."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "One or more associations between the route table and the Subnets."
                          }
                        },
                        "Routes" : {
                          "type" : "array",
                          "description" : "One or more routes in the route table.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "NatServiceId" : {
                                "type" : "string",
                                "description" : "The ID of a NAT service attached to the Net."
                              },
                              "VmAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the VM."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                              },
                              "CreationMethod" : {
                                "type" : "string",
                                "description" : "The method used to create the route."
                              },
                              "DestinationIpRange" : {
                                "type" : "string",
                                "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                              },
                              "VmId" : {
                                "type" : "string",
                                "description" : "The ID of a VM specified in a route in the table."
                              },
                              "NetPeeringId" : {
                                "type" : "string",
                                "description" : "The ID of the Net peering connection."
                              },
                              "NetAccessPointId" : {
                                "type" : "string",
                                "description" : "The ID of the Net access point."
                              },
                              "GatewayId" : {
                                "type" : "string",
                                "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                              },
                              "DestinationServiceId" : {
                                "type" : "string",
                                "description" : "The ID of the OUTSCALE service."
                              },
                              "NicId" : {
                                "type" : "string",
                                "description" : "The ID of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the route table.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the route table."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteListenerRule" : {
      "post" : {
        "tags" : [ "Listener" ],
        "operationId" : "DeleteListenerRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ListenerRuleName" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "ListenerRuleName" : {
                    "type" : "string",
                    "description" : "The name of the rule you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadFlexibleGpus" : {
      "post" : {
        "tags" : [ "FlexibleGpu" ],
        "operationId" : "ReadFlexibleGpus",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the fGPUs (`allocated` \\| `attaching` \\| `attached` \\| `detaching`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "FlexibleGpuIds" : {
                        "type" : "array",
                        "description" : "One or more IDs of fGPUs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "DeleteOnVmDeletion" : {
                        "type" : "boolean",
                        "description" : "Indicates whether the fGPU is deleted when terminating the VM."
                      },
                      "SubregionNames" : {
                        "type" : "array",
                        "description" : "The Subregions where the fGPUs are located.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ModelNames" : {
                        "type" : "array",
                        "description" : "One or more models of fGPUs. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Generations" : {
                        "type" : "array",
                        "description" : "The processor generations that the fGPUs are compatible with.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VmIds" : {
                        "type" : "array",
                        "description" : "One or more IDs of VMs.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "FlexibleGpus" : {
                      "type" : "array",
                      "description" : "Information about one or more fGPUs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Generation" : {
                            "type" : "string",
                            "description" : "The compatible processor generation."
                          },
                          "ModelName" : {
                            "type" : "string",
                            "description" : "The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
                          },
                          "DeleteOnVmDeletion" : {
                            "type" : "boolean",
                            "description" : "If true, the fGPU is deleted when the VM is terminated."
                          },
                          "FlexibleGpuId" : {
                            "type" : "string",
                            "description" : "The ID of the fGPU."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`)."
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the VM the fGPU is attached to, if any."
                          },
                          "SubregionName" : {
                            "type" : "string",
                            "description" : "The Subregion where the fGPU is located."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the flexible GPU (fGPU)."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateAccount" : {
      "post" : {
        "tags" : [ "Account" ],
        "operationId" : "CreateAccount",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "City", "CompanyName", "Country", "CustomerId", "Email", "FirstName", "LastName", "ZipCode" ],
                "type" : "object",
                "properties" : {
                  "Email" : {
                    "type" : "string",
                    "description" : "The email address for the account."
                  },
                  "ZipCode" : {
                    "type" : "string",
                    "description" : "The ZIP code of the city."
                  },
                  "StateProvince" : {
                    "type" : "string",
                    "description" : "The state/province of the account."
                  },
                  "FirstName" : {
                    "type" : "string",
                    "description" : "The first name of the account owner."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "CustomerId" : {
                    "type" : "string",
                    "description" : "The ID of the customer. It must be 8 digits."
                  },
                  "City" : {
                    "type" : "string",
                    "description" : "The city of the account owner."
                  },
                  "VatNumber" : {
                    "type" : "string",
                    "description" : "The value added tax (VAT) number for the account."
                  },
                  "JobTitle" : {
                    "type" : "string",
                    "description" : "The job title of the account owner."
                  },
                  "CompanyName" : {
                    "type" : "string",
                    "description" : "The name of the company for the account."
                  },
                  "MobileNumber" : {
                    "type" : "string",
                    "description" : "The mobile phone number of the account owner."
                  },
                  "PhoneNumber" : {
                    "type" : "string",
                    "description" : "The landline phone number of the account owner."
                  },
                  "Country" : {
                    "type" : "string",
                    "description" : "The country of the account owner."
                  },
                  "LastName" : {
                    "type" : "string",
                    "description" : "The last name of the account owner."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Account" : {
                      "type" : "object",
                      "properties" : {
                        "Email" : {
                          "type" : "string",
                          "description" : "The email address for the account."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The ID of the account."
                        },
                        "ZipCode" : {
                          "type" : "string",
                          "description" : "The ZIP code of the city."
                        },
                        "StateProvince" : {
                          "type" : "string",
                          "description" : "The state/province of the account."
                        },
                        "FirstName" : {
                          "type" : "string",
                          "description" : "The first name of the account owner."
                        },
                        "CustomerId" : {
                          "type" : "string",
                          "description" : "The ID of the customer."
                        },
                        "City" : {
                          "type" : "string",
                          "description" : "The city of the account owner."
                        },
                        "VatNumber" : {
                          "type" : "string",
                          "description" : "The value added tax (VAT) number for the account."
                        },
                        "JobTitle" : {
                          "type" : "string",
                          "description" : "The job title of the account owner."
                        },
                        "CompanyName" : {
                          "type" : "string",
                          "description" : "The name of the company for the account."
                        },
                        "MobileNumber" : {
                          "type" : "string",
                          "description" : "The mobile phone number of the account owner."
                        },
                        "PhoneNumber" : {
                          "type" : "string",
                          "description" : "The landline phone number of the account owner."
                        },
                        "Country" : {
                          "type" : "string",
                          "description" : "The country of the account owner."
                        },
                        "LastName" : {
                          "type" : "string",
                          "description" : "The last name of the account owner."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the account."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateNetAccessPoint" : {
      "post" : {
        "tags" : [ "NetAccessPoint" ],
        "operationId" : "UpdateNetAccessPoint",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetAccessPointId" ],
                "type" : "object",
                "properties" : {
                  "RemoveRouteTableIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of route tables to disassociate from the specified Net access point.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "AddRouteTableIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of route tables to associate with the specified Net access point.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "NetAccessPointId" : {
                    "type" : "string",
                    "description" : "The ID of the Net access point."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "NetAccessPoint" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net with which the Net access point is associated."
                        },
                        "ServiceName" : {
                          "type" : "string",
                          "description" : "The name of the service with which the Net access point is associated."
                        },
                        "RouteTableIds" : {
                          "type" : "array",
                          "description" : "The ID of the route tables associated with the Net access point.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the Net access point (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                        },
                        "NetAccessPointId" : {
                          "type" : "string",
                          "description" : "The ID of the Net access point."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Net access point.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Net access point."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteServerCertificate" : {
      "post" : {
        "tags" : [ "ServerCertificate" ],
        "operationId" : "DeleteServerCertificate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Name" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Name" : {
                    "type" : "string",
                    "description" : "The name of the server certificate you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateClientGateway" : {
      "post" : {
        "tags" : [ "ClientGateway" ],
        "operationId" : "CreateClientGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "BgpAsn", "ConnectionType", "PublicIp" ],
                "type" : "object",
                "properties" : {
                  "ConnectionType" : {
                    "type" : "string",
                    "description" : "The communication protocol used to establish tunnel with your client gateway (only `ipsec.1` is supported)."
                  },
                  "PublicIp" : {
                    "type" : "string",
                    "description" : "The public fixed IPv4 address of your client gateway."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "BgpAsn" : {
                    "type" : "integer",
                    "description" : "An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "ClientGateway" : {
                      "type" : "object",
                      "properties" : {
                        "ConnectionType" : {
                          "type" : "string",
                          "description" : "The type of communication tunnel used by the client gateway (only `ipsec.1` is supported)."
                        },
                        "PublicIp" : {
                          "type" : "string",
                          "description" : "The public IPv4 address of the client gateway (must be a fixed address into a NATed network)."
                        },
                        "ClientGatewayId" : {
                          "type" : "string",
                          "description" : "The ID of the client gateway."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the client gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the client gateway.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "BgpAsn" : {
                          "type" : "integer",
                          "description" : "An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the client gateway."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateImage" : {
      "post" : {
        "tags" : [ "Image" ],
        "operationId" : "UpdateImage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ImageId", "PermissionsToLaunch" ],
                "type" : "object",
                "properties" : {
                  "PermissionsToLaunch" : {
                    "type" : "object",
                    "properties" : {
                      "Additions" : {
                        "type" : "object",
                        "properties" : {
                          "AccountIds" : {
                            "type" : "array",
                            "description" : "The account ID of one or more users who have permissions for the resource.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "GlobalPermission" : {
                            "type" : "boolean",
                            "description" : "If true, the resource is public. If false, the resource is private."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the users who have permissions for the resource."
                      },
                      "Removals" : {
                        "type" : "object",
                        "properties" : {
                          "AccountIds" : {
                            "type" : "array",
                            "description" : "The account ID of one or more users who have permissions for the resource.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "GlobalPermission" : {
                            "type" : "boolean",
                            "description" : "If true, the resource is public. If false, the resource is private."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the users who have permissions for the resource."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the permissions for the resource."
                  },
                  "ImageId" : {
                    "type" : "string",
                    "description" : "The ID of the OMI you want to modify."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Image" : {
                      "type" : "object",
                      "properties" : {
                        "ProductCodes" : {
                          "type" : "array",
                          "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "CreationDate" : {
                          "type" : "string",
                          "description" : "The date and time at which the OMI was created.",
                          "format" : "date"
                        },
                        "PermissionsToLaunch" : {
                          "type" : "object",
                          "properties" : {
                            "AccountIds" : {
                              "type" : "array",
                              "description" : "The account ID of one or more users who have permissions for the resource.",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "GlobalPermission" : {
                              "type" : "boolean",
                              "description" : "If true, the resource is public. If false, the resource is private."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the users who have permissions for the resource."
                        },
                        "RootDeviceName" : {
                          "type" : "string",
                          "description" : "The name of the root device."
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the OMI."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the OMI."
                        },
                        "Architecture" : {
                          "type" : "string",
                          "description" : "The architecture of the OMI (by default, `i386`)."
                        },
                        "BlockDeviceMappings" : {
                          "type" : "array",
                          "description" : "One or more block device mappings.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "Bsu" : {
                                "type" : "object",
                                "properties" : {
                                  "SnapshotId" : {
                                    "type" : "string",
                                    "description" : "The ID of the snapshot used to create the volume."
                                  },
                                  "VolumeType" : {
                                    "type" : "string",
                                    "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                                  },
                                  "DeleteOnVmDeletion" : {
                                    "type" : "boolean",
                                    "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                                  },
                                  "Iops" : {
                                    "type" : "integer",
                                    "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                                  },
                                  "VolumeSize" : {
                                    "type" : "integer",
                                    "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about the BSU volume to create."
                              },
                              "VirtualDeviceName" : {
                                "type" : "string",
                                "description" : "The name of the virtual device (ephemeralN)."
                              },
                              "DeviceName" : {
                                "type" : "string",
                                "description" : "The name of the device."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "One or more parameters used to automatically set up volumes when the VM is created."
                          }
                        },
                        "StateComment" : {
                          "type" : "object",
                          "properties" : {
                            "StateCode" : {
                              "type" : "string",
                              "description" : "The code of the change of state."
                            },
                            "StateMessage" : {
                              "type" : "string",
                              "description" : "A message explaining the change of state."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the change of state."
                        },
                        "AccountAlias" : {
                          "type" : "string",
                          "description" : "The account alias of the owner of the OMI."
                        },
                        "ImageType" : {
                          "type" : "string",
                          "description" : "The type of the OMI."
                        },
                        "RootDeviceType" : {
                          "type" : "string",
                          "description" : "The type of root device used by the OMI (always `bsu`)."
                        },
                        "ImageName" : {
                          "type" : "string",
                          "description" : "The name of the OMI."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the OMI (`pending` \\| `available` \\| `failed`)."
                        },
                        "FileLocation" : {
                          "type" : "string",
                          "description" : "The location of the bucket where the OMI files are stored."
                        },
                        "ImageId" : {
                          "type" : "string",
                          "description" : "The ID of the OMI."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the OMI.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the OMI."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteNetPeering" : {
      "post" : {
        "tags" : [ "NetPeering" ],
        "operationId" : "DeleteNetPeering",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetPeeringId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "NetPeeringId" : {
                    "type" : "string",
                    "description" : "The ID of the Net peering connection you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "409" : {
            "description" : "The HTTP 409 response (Conflict).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateSecurityGroupRule" : {
      "post" : {
        "tags" : [ "SecurityGroupRule" ],
        "operationId" : "CreateSecurityGroupRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Flow", "SecurityGroupId" ],
                "type" : "object",
                "properties" : {
                  "ToPortRange" : {
                    "type" : "integer",
                    "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                  },
                  "IpRange" : {
                    "type" : "string",
                    "description" : "The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16)."
                  },
                  "SecurityGroupNameToLink" : {
                    "type" : "string",
                    "description" : "The ID of the source security group. If you are in the Public Cloud, you can also specify the name of the source security group."
                  },
                  "SecurityGroupId" : {
                    "type" : "string",
                    "description" : "The ID of the security group for which you want to create a rule."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "IpProtocol" : {
                    "type" : "string",
                    "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                  },
                  "SecurityGroupAccountIdToLink" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the security group for which you want to create a rule."
                  },
                  "Rules" : {
                    "type" : "array",
                    "description" : "Information about the security group rule to create.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "ToPortRange" : {
                          "type" : "integer",
                          "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                        },
                        "ServiceIds" : {
                          "type" : "array",
                          "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "SecurityGroupsMembers" : {
                          "type" : "array",
                          "description" : "Information about one or more members of a security group.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "AccountId" : {
                                "type" : "string",
                                "description" : "The account ID of a user."
                              },
                              "SecurityGroupName" : {
                                "type" : "string",
                                "description" : "The name of the security group."
                              },
                              "SecurityGroupId" : {
                                "type" : "string",
                                "description" : "The ID of the security group."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the member of a security group."
                          }
                        },
                        "IpProtocol" : {
                          "type" : "string",
                          "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                        },
                        "IpRanges" : {
                          "type" : "array",
                          "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "FromPortRange" : {
                          "type" : "integer",
                          "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the security group rule."
                    }
                  },
                  "FromPortRange" : {
                    "type" : "integer",
                    "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                  },
                  "Flow" : {
                    "type" : "string",
                    "description" : "The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "SecurityGroup" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the security group."
                        },
                        "InboundRules" : {
                          "type" : "array",
                          "description" : "The inbound rules associated with the security group.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ToPortRange" : {
                                "type" : "integer",
                                "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                              },
                              "ServiceIds" : {
                                "type" : "array",
                                "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "SecurityGroupsMembers" : {
                                "type" : "array",
                                "description" : "Information about one or more members of a security group.",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "AccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of a user."
                                    },
                                    "SecurityGroupName" : {
                                      "type" : "string",
                                      "description" : "The name of the security group."
                                    },
                                    "SecurityGroupId" : {
                                      "type" : "string",
                                      "description" : "The ID of the security group."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the member of a security group."
                                }
                              },
                              "IpProtocol" : {
                                "type" : "string",
                                "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                              },
                              "IpRanges" : {
                                "type" : "array",
                                "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "FromPortRange" : {
                                "type" : "integer",
                                "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group rule."
                          }
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the security group."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of a user that has been granted permission."
                        },
                        "SecurityGroupName" : {
                          "type" : "string",
                          "description" : "The name of the security group."
                        },
                        "SecurityGroupId" : {
                          "type" : "string",
                          "description" : "The ID of the security group."
                        },
                        "OutboundRules" : {
                          "type" : "array",
                          "description" : "The outbound rules associated with the security group.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "ToPortRange" : {
                                "type" : "integer",
                                "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                              },
                              "ServiceIds" : {
                                "type" : "array",
                                "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "SecurityGroupsMembers" : {
                                "type" : "array",
                                "description" : "Information about one or more members of a security group.",
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "AccountId" : {
                                      "type" : "string",
                                      "description" : "The account ID of a user."
                                    },
                                    "SecurityGroupName" : {
                                      "type" : "string",
                                      "description" : "The name of the security group."
                                    },
                                    "SecurityGroupId" : {
                                      "type" : "string",
                                      "description" : "The ID of the security group."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the member of a security group."
                                }
                              },
                              "IpProtocol" : {
                                "type" : "string",
                                "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                              },
                              "IpRanges" : {
                                "type" : "array",
                                "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "FromPortRange" : {
                                "type" : "integer",
                                "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group rule."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the security group.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the security group."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadVirtualGateways" : {
      "post" : {
        "tags" : [ "VirtualGateway" ],
        "operationId" : "ReadVirtualGateways",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the virtual gateways (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkStates" : {
                        "type" : "array",
                        "description" : "The current states of the attachments between the virtual gateways and the Nets (`attaching` \\| `attached` \\| `detaching` \\| `detached`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ConnectionTypes" : {
                        "type" : "array",
                        "description" : "The types of the virtual gateways (only `ipsec.1` is supported).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the virtual gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the virtual gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the virtual gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VirtualGatewayIds" : {
                        "type" : "array",
                        "description" : "The IDs of the virtual gateways.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkNetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets the virtual gateways are attached to.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "VirtualGateways" : {
                      "type" : "array",
                      "description" : "Information about one or more virtual gateways.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ConnectionType" : {
                            "type" : "string",
                            "description" : "The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported)."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the virtual gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                          },
                          "NetToVirtualGatewayLinks" : {
                            "type" : "array",
                            "description" : "The Net to which the virtual gateway is attached.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "NetId" : {
                                  "type" : "string",
                                  "description" : "The ID of the Net to which the virtual gateway is attached."
                                },
                                "State" : {
                                  "type" : "string",
                                  "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the attachment."
                            }
                          },
                          "VirtualGatewayId" : {
                            "type" : "string",
                            "description" : "The ID of the virtual gateway."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the virtual gateway.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the virtual gateway."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadLoadBalancers" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "ReadLoadBalancers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "LoadBalancerNames" : {
                        "type" : "array",
                        "description" : "The names of the load balancers.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LoadBalancers" : {
                      "type" : "array",
                      "description" : "Information about one or more load balancers.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "AccessLog" : {
                            "type" : "object",
                            "properties" : {
                              "OsuBucketPrefix" : {
                                "type" : "string",
                                "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                              },
                              "IsEnabled" : {
                                "type" : "boolean",
                                "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                              },
                              "PublicationInterval" : {
                                "type" : "integer",
                                "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                              },
                              "OsuBucketName" : {
                                "type" : "string",
                                "description" : "The name of the OOS bucket for the access logs."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about access logs."
                          },
                          "SecurityGroups" : {
                            "type" : "array",
                            "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "BackendVmIds" : {
                            "type" : "array",
                            "description" : "One or more IDs of back-end VMs for the load balancer.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net for the load balancer."
                          },
                          "DnsName" : {
                            "type" : "string",
                            "description" : "The DNS name of the load balancer."
                          },
                          "ApplicationStickyCookiePolicies" : {
                            "type" : "array",
                            "description" : "The stickiness policies defined for the load balancer.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "PolicyName" : {
                                  "type" : "string",
                                  "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                                },
                                "CookieName" : {
                                  "type" : "string",
                                  "description" : "The name of the application cookie used for stickiness."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the stickiness policy."
                            }
                          },
                          "SourceSecurityGroup" : {
                            "type" : "object",
                            "properties" : {
                              "SecurityGroupName" : {
                                "type" : "string",
                                "description" : "The name of the security group."
                              },
                              "SecurityGroupAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the security group."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
                          },
                          "HealthCheck" : {
                            "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                            "type" : "object",
                            "properties" : {
                              "Path" : {
                                "type" : "string",
                                "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                              },
                              "UnhealthyThreshold" : {
                                "type" : "integer",
                                "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                              },
                              "Timeout" : {
                                "type" : "integer",
                                "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                              },
                              "CheckInterval" : {
                                "type" : "integer",
                                "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                              },
                              "Port" : {
                                "type" : "integer",
                                "description" : "The port number (between `1` and `65535`, both included)."
                              },
                              "HealthyThreshold" : {
                                "type" : "integer",
                                "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                              },
                              "Protocol" : {
                                "type" : "string",
                                "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the health check configuration."
                          },
                          "LoadBalancerType" : {
                            "type" : "string",
                            "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
                          },
                          "LoadBalancerName" : {
                            "type" : "string",
                            "description" : "The name of the load balancer."
                          },
                          "Subnets" : {
                            "type" : "array",
                            "description" : "The ID of the Subnet in which the load balancer was created.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "Listeners" : {
                            "type" : "array",
                            "description" : "The listeners for the load balancer.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "PolicyNames" : {
                                  "type" : "array",
                                  "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "BackendProtocol" : {
                                  "type" : "string",
                                  "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                                },
                                "LoadBalancerProtocol" : {
                                  "type" : "string",
                                  "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                                },
                                "BackendPort" : {
                                  "type" : "integer",
                                  "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                                },
                                "ServerCertificateId" : {
                                  "type" : "string",
                                  "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                                },
                                "LoadBalancerPort" : {
                                  "type" : "integer",
                                  "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the listener."
                            }
                          },
                          "SubregionNames" : {
                            "type" : "array",
                            "description" : "The ID of the Subregion in which the load balancer was created.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "LoadBalancerStickyCookiePolicies" : {
                            "type" : "array",
                            "description" : "The policies defined for the load balancer.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "CookieExpirationPeriod" : {
                                  "type" : "integer",
                                  "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                                },
                                "PolicyName" : {
                                  "type" : "string",
                                  "description" : "The name of the stickiness policy."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the stickiness policy."
                            }
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the load balancer.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the load balancer."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteDirectLink" : {
      "post" : {
        "tags" : [ "DirectLink" ],
        "operationId" : "DeleteDirectLink",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DirectLinkId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DirectLinkId" : {
                    "type" : "string",
                    "description" : "The ID of the DirectLink you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadImages" : {
      "post" : {
        "tags" : [ "Image" ],
        "operationId" : "ReadImages",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "ProductCodes" : {
                        "type" : "array",
                        "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ImageIds" : {
                        "type" : "array",
                        "description" : "The IDs of the OMIs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owners of the OMIs. By default, all the OMIs for which you have launch permissions are described.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RootDeviceNames" : {
                        "type" : "array",
                        "description" : "The device names of the root devices (for example, `/dev/sda1`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PermissionsToLaunchGlobalPermission" : {
                        "type" : "boolean",
                        "description" : "If true, lists all public OMIs. If false, lists all private OMIs."
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the OMIs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the OMIs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the OMIs (`pending` \\| `available` \\| `failed`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Descriptions" : {
                        "type" : "array",
                        "description" : "The descriptions of the OMIs, provided when they were created.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "BlockDeviceMappingDeleteOnVmDeletion" : {
                        "type" : "boolean",
                        "description" : "Whether the volumes are deleted or not when terminating the VM."
                      },
                      "Hypervisors" : {
                        "type" : "array",
                        "description" : "The hypervisor type of the OMI (always `xen`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "VirtualizationTypes" : {
                        "type" : "array",
                        "description" : "The virtualization types (always `hvm`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "BlockDeviceMappingVolumeSizes" : {
                        "type" : "array",
                        "description" : "The sizes of the volumes, in gibibytes (GiB).",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "BlockDeviceMappingSnapshotIds" : {
                        "type" : "array",
                        "description" : "The IDs of the snapshots used to create the volumes.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ImageNames" : {
                        "type" : "array",
                        "description" : "The names of the OMIs, provided when they were created.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "BlockDeviceMappingVolumeTypes" : {
                        "type" : "array",
                        "description" : "The types of volumes (`standard` \\| `gp2` \\| `io1`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "RootDeviceTypes" : {
                        "type" : "array",
                        "description" : "The types of root device used by the OMIs (always `bsu`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "PermissionsToLaunchAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the users who have launch permissions for the OMIs.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "BlockDeviceMappingDeviceNames" : {
                        "type" : "array",
                        "description" : "The device names for the volumes.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the OMIs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "FileLocations" : {
                        "type" : "array",
                        "description" : "The locations of the buckets where the OMI files are stored.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Architectures" : {
                        "type" : "array",
                        "description" : "The architectures of the OMIs (`i386` \\| `x86_64`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AccountAliases" : {
                        "type" : "array",
                        "description" : "The account aliases of the owners of the OMIs.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Images" : {
                      "type" : "array",
                      "description" : "Information about one or more OMIs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ProductCodes" : {
                            "type" : "array",
                            "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "CreationDate" : {
                            "type" : "string",
                            "description" : "The date and time at which the OMI was created.",
                            "format" : "date"
                          },
                          "PermissionsToLaunch" : {
                            "type" : "object",
                            "properties" : {
                              "AccountIds" : {
                                "type" : "array",
                                "description" : "The account ID of one or more users who have permissions for the resource.",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "GlobalPermission" : {
                                "type" : "boolean",
                                "description" : "If true, the resource is public. If false, the resource is private."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the users who have permissions for the resource."
                          },
                          "RootDeviceName" : {
                            "type" : "string",
                            "description" : "The name of the root device."
                          },
                          "Description" : {
                            "type" : "string",
                            "description" : "The description of the OMI."
                          },
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the OMI."
                          },
                          "Architecture" : {
                            "type" : "string",
                            "description" : "The architecture of the OMI (by default, `i386`)."
                          },
                          "BlockDeviceMappings" : {
                            "type" : "array",
                            "description" : "One or more block device mappings.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "Bsu" : {
                                  "type" : "object",
                                  "properties" : {
                                    "SnapshotId" : {
                                      "type" : "string",
                                      "description" : "The ID of the snapshot used to create the volume."
                                    },
                                    "VolumeType" : {
                                      "type" : "string",
                                      "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                                    },
                                    "DeleteOnVmDeletion" : {
                                      "type" : "boolean",
                                      "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                                    },
                                    "Iops" : {
                                      "type" : "integer",
                                      "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                                    },
                                    "VolumeSize" : {
                                      "type" : "integer",
                                      "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                                    }
                                  },
                                  "additionalProperties" : false,
                                  "description" : "Information about the BSU volume to create."
                                },
                                "VirtualDeviceName" : {
                                  "type" : "string",
                                  "description" : "The name of the virtual device (ephemeralN)."
                                },
                                "DeviceName" : {
                                  "type" : "string",
                                  "description" : "The name of the device."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "One or more parameters used to automatically set up volumes when the VM is created."
                            }
                          },
                          "StateComment" : {
                            "type" : "object",
                            "properties" : {
                              "StateCode" : {
                                "type" : "string",
                                "description" : "The code of the change of state."
                              },
                              "StateMessage" : {
                                "type" : "string",
                                "description" : "A message explaining the change of state."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the change of state."
                          },
                          "AccountAlias" : {
                            "type" : "string",
                            "description" : "The account alias of the owner of the OMI."
                          },
                          "ImageType" : {
                            "type" : "string",
                            "description" : "The type of the OMI."
                          },
                          "RootDeviceType" : {
                            "type" : "string",
                            "description" : "The type of root device used by the OMI (always `bsu`)."
                          },
                          "ImageName" : {
                            "type" : "string",
                            "description" : "The name of the OMI."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the OMI (`pending` \\| `available` \\| `failed`)."
                          },
                          "FileLocation" : {
                            "type" : "string",
                            "description" : "The location of the bucket where the OMI files are stored."
                          },
                          "ImageId" : {
                            "type" : "string",
                            "description" : "The ID of the OMI."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the OMI.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the OMI."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateKeypair" : {
      "post" : {
        "tags" : [ "Keypair" ],
        "operationId" : "CreateKeypair",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "KeypairName" ],
                "type" : "object",
                "properties" : {
                  "PublicKey" : {
                    "type" : "string",
                    "description" : "The public key. It must be base64-encoded."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "KeypairName" : {
                    "type" : "string",
                    "description" : "A unique name for the keypair, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters)."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Keypair" : {
                      "type" : "object",
                      "properties" : {
                        "KeypairFingerprint" : {
                          "type" : "string",
                          "description" : "The MD5 public key fingerprint as specified in section 4 of RFC 4716."
                        },
                        "PrivateKey" : {
                          "type" : "string",
                          "description" : "The private key."
                        },
                        "KeypairName" : {
                          "type" : "string",
                          "description" : "The name of the keypair."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the created keypair."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "409" : {
            "description" : "The HTTP 409 response (Conflict).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadNets" : {
      "post" : {
        "tags" : [ "Net" ],
        "operationId" : "ReadNets",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the Nets (`pending` \\| `available`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "IsDefault" : {
                        "type" : "boolean",
                        "description" : "If true, the Net used is the default one."
                      },
                      "NetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "IpRanges" : {
                        "type" : "array",
                        "description" : "The IP ranges for the Nets, in CIDR notation (for example, 10.0.0.0/16).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the Nets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "DhcpOptionsSetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the DHCP options sets.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Nets" : {
                      "type" : "array",
                      "description" : "Information about the described Nets.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Tenancy" : {
                            "type" : "string",
                            "description" : "The VM tenancy in a Net."
                          },
                          "IpRange" : {
                            "type" : "string",
                            "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
                          },
                          "DhcpOptionsSetId" : {
                            "type" : "string",
                            "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
                          },
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the Net (`pending` \\| `available`)."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the Net.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the Net."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateCa" : {
      "post" : {
        "tags" : [ "Ca" ],
        "operationId" : "UpdateCa",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "CaId" ],
                "type" : "object",
                "properties" : {
                  "Description" : {
                    "type" : "string",
                    "description" : "The description of the CA."
                  },
                  "CaId" : {
                    "type" : "string",
                    "description" : "The ID of the CA."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Ca" : {
                      "type" : "object",
                      "properties" : {
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the CA."
                        },
                        "CaId" : {
                          "type" : "string",
                          "description" : "The ID of the CA."
                        },
                        "CaFingerprint" : {
                          "type" : "string",
                          "description" : "The fingerprint of the CA."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Client Certificate Authority (CA)."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadInternetServices" : {
      "post" : {
        "tags" : [ "InternetService" ],
        "operationId" : "ReadInternetServices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "LinkStates" : {
                        "type" : "array",
                        "description" : "The current states of the attachments between the Internet services and the Nets (only `available`, if the Internet gateway is attached to a VPC).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the Internet services, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the Internet services.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the Internet services.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "LinkNetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets the Internet services are attached to.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "InternetServiceIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Internet services.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "InternetServices" : {
                      "type" : "array",
                      "description" : "Information about one or more Internet services.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net attached to the Internet service."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the attachment of the Net to the Internet service (always `available`)."
                          },
                          "InternetServiceId" : {
                            "type" : "string",
                            "description" : "The ID of the Internet service."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the Internet service.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the Internet service."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateDirectLinkInterface" : {
      "post" : {
        "tags" : [ "DirectLinkInterface" ],
        "operationId" : "CreateDirectLinkInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DirectLinkId", "DirectLinkInterface" ],
                "type" : "object",
                "properties" : {
                  "DirectLinkInterface" : {
                    "required" : [ "BgpAsn", "DirectLinkInterfaceName", "VirtualGatewayId", "Vlan" ],
                    "type" : "object",
                    "properties" : {
                      "ClientPrivateIp" : {
                        "type" : "string",
                        "description" : "The IP address on the customer's side of the DirectLink interface."
                      },
                      "DirectLinkInterfaceName" : {
                        "type" : "string",
                        "description" : "The name of the DirectLink interface."
                      },
                      "Vlan" : {
                        "type" : "integer",
                        "description" : "The VLAN number associated with the DirectLink interface."
                      },
                      "BgpKey" : {
                        "type" : "string",
                        "description" : "The BGP authentication key."
                      },
                      "VirtualGatewayId" : {
                        "type" : "string",
                        "description" : "The ID of the target virtual gateway."
                      },
                      "OutscalePrivateIp" : {
                        "type" : "string",
                        "description" : "The IP address on the OUTSCALE side of the DirectLink interface."
                      },
                      "BgpAsn" : {
                        "type" : "integer",
                        "description" : "The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the DirectLink interface."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DirectLinkId" : {
                    "type" : "string",
                    "description" : "The ID of the existing DirectLink for which you want to create the DirectLink interface."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "DirectLinkInterface" : {
                      "type" : "object",
                      "properties" : {
                        "InterfaceType" : {
                          "type" : "string",
                          "description" : "The type of the DirectLink interface (always `private`)."
                        },
                        "ClientPrivateIp" : {
                          "type" : "string",
                          "description" : "The IP address on the customer's side of the DirectLink interface."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the DirectLink interface."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the DirectLink interface (`pending` \\| `available` \\| `deleting` \\| `deleted` \\| `confirming` \\| `rejected` \\| `expired`)."
                        },
                        "DirectLinkInterfaceName" : {
                          "type" : "string",
                          "description" : "The name of the DirectLink interface."
                        },
                        "DirectLinkId" : {
                          "type" : "string",
                          "description" : "The ID of the DirectLink."
                        },
                        "Vlan" : {
                          "type" : "integer",
                          "description" : "The VLAN number associated with the DirectLink interface."
                        },
                        "DirectLinkInterfaceId" : {
                          "type" : "string",
                          "description" : "The ID of the DirectLink interface."
                        },
                        "BgpKey" : {
                          "type" : "string",
                          "description" : "The BGP authentication key."
                        },
                        "VirtualGatewayId" : {
                          "type" : "string",
                          "description" : "The ID of the target virtual gateway."
                        },
                        "OutscalePrivateIp" : {
                          "type" : "string",
                          "description" : "The IP address on the OUTSCALE side of the DirectLink interface."
                        },
                        "BgpAsn" : {
                          "type" : "integer",
                          "description" : "The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface."
                        },
                        "Location" : {
                          "type" : "string",
                          "description" : "The datacenter where the DirectLink interface is located."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the DirectLink interfaces."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateLoadBalancer" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "UpdateLoadBalancer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerName" ],
                "type" : "object",
                "properties" : {
                  "PolicyNames" : {
                    "type" : "array",
                    "description" : "The name of the policy you want to enable for the listener.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "AccessLog" : {
                    "type" : "object",
                    "properties" : {
                      "OsuBucketPrefix" : {
                        "type" : "string",
                        "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                      },
                      "IsEnabled" : {
                        "type" : "boolean",
                        "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                      },
                      "PublicationInterval" : {
                        "type" : "integer",
                        "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                      },
                      "OsuBucketName" : {
                        "type" : "string",
                        "description" : "The name of the OOS bucket for the access logs."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about access logs."
                  },
                  "SecurityGroups" : {
                    "type" : "array",
                    "description" : "(Net only) One or more IDs of security groups you want to assign to the load balancer. You need to specify the already assigned security groups that you want to keep along with the new ones you are assigning. If the list is empty, the default security group of the Net is assigned to the load balancer.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer."
                  },
                  "HealthCheck" : {
                    "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                    "type" : "object",
                    "properties" : {
                      "Path" : {
                        "type" : "string",
                        "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                      },
                      "UnhealthyThreshold" : {
                        "type" : "integer",
                        "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                      },
                      "Timeout" : {
                        "type" : "integer",
                        "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                      },
                      "CheckInterval" : {
                        "type" : "integer",
                        "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                      },
                      "Port" : {
                        "type" : "integer",
                        "description" : "The port number (between `1` and `65535`, both included)."
                      },
                      "HealthyThreshold" : {
                        "type" : "integer",
                        "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                      },
                      "Protocol" : {
                        "type" : "string",
                        "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the health check configuration."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "ServerCertificateId" : {
                    "type" : "string",
                    "description" : "The Outscale Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > Outscale Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat). If this parameter is specified, you must also specify the `LoadBalancerPort` parameter."
                  },
                  "LoadBalancerPort" : {
                    "type" : "integer",
                    "description" : "The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LoadBalancer" : {
                      "type" : "object",
                      "properties" : {
                        "AccessLog" : {
                          "type" : "object",
                          "properties" : {
                            "OsuBucketPrefix" : {
                              "type" : "string",
                              "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                            },
                            "IsEnabled" : {
                              "type" : "boolean",
                              "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                            },
                            "PublicationInterval" : {
                              "type" : "integer",
                              "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                            },
                            "OsuBucketName" : {
                              "type" : "string",
                              "description" : "The name of the OOS bucket for the access logs."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about access logs."
                        },
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "BackendVmIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of back-end VMs for the load balancer.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the load balancer."
                        },
                        "DnsName" : {
                          "type" : "string",
                          "description" : "The DNS name of the load balancer."
                        },
                        "ApplicationStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The stickiness policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                              },
                              "CookieName" : {
                                "type" : "string",
                                "description" : "The name of the application cookie used for stickiness."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "SourceSecurityGroup" : {
                          "type" : "object",
                          "properties" : {
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            },
                            "SecurityGroupAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
                        },
                        "HealthCheck" : {
                          "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                          "type" : "object",
                          "properties" : {
                            "Path" : {
                              "type" : "string",
                              "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                            },
                            "UnhealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                            },
                            "Timeout" : {
                              "type" : "integer",
                              "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                            },
                            "CheckInterval" : {
                              "type" : "integer",
                              "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                            },
                            "Port" : {
                              "type" : "integer",
                              "description" : "The port number (between `1` and `65535`, both included)."
                            },
                            "HealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                            },
                            "Protocol" : {
                              "type" : "string",
                              "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the health check configuration."
                        },
                        "LoadBalancerType" : {
                          "type" : "string",
                          "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
                        },
                        "LoadBalancerName" : {
                          "type" : "string",
                          "description" : "The name of the load balancer."
                        },
                        "Subnets" : {
                          "type" : "array",
                          "description" : "The ID of the Subnet in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Listeners" : {
                          "type" : "array",
                          "description" : "The listeners for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyNames" : {
                                "type" : "array",
                                "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "BackendProtocol" : {
                                "type" : "string",
                                "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "LoadBalancerProtocol" : {
                                "type" : "string",
                                "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "BackendPort" : {
                                "type" : "integer",
                                "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                              },
                              "ServerCertificateId" : {
                                "type" : "string",
                                "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                              },
                              "LoadBalancerPort" : {
                                "type" : "integer",
                                "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the listener."
                          }
                        },
                        "SubregionNames" : {
                          "type" : "array",
                          "description" : "The ID of the Subregion in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "LoadBalancerStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "CookieExpirationPeriod" : {
                                "type" : "integer",
                                "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                              },
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The name of the stickiness policy."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the load balancer.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the load balancer."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateNet" : {
      "post" : {
        "tags" : [ "Net" ],
        "operationId" : "CreateNet",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "IpRange" ],
                "type" : "object",
                "properties" : {
                  "Tenancy" : {
                    "type" : "string",
                    "description" : "The tenancy options for the VMs (`default` if a VM created in a Net can be launched with any tenancy, `dedicated` if it can be launched with dedicated tenancy VMs running on single-tenant hardware)."
                  },
                  "IpRange" : {
                    "type" : "string",
                    "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Net" : {
                      "type" : "object",
                      "properties" : {
                        "Tenancy" : {
                          "type" : "string",
                          "description" : "The VM tenancy in a Net."
                        },
                        "IpRange" : {
                          "type" : "string",
                          "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
                        },
                        "DhcpOptionsSetId" : {
                          "type" : "string",
                          "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the Net (`pending` \\| `available`)."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Net.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Net."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "409" : {
            "description" : "The HTTP 409 response (Conflict).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadFlexibleGpuCatalog" : {
      "post" : {
        "tags" : [ "FlexibleGpu" ],
        "operationId" : "ReadFlexibleGpuCatalog",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "FlexibleGpuCatalog" : {
                      "type" : "array",
                      "description" : "Information about one or more fGPUs available in the public catalog.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "VRam" : {
                            "type" : "integer",
                            "description" : "The amount of video RAM (VRAM) of the fGPU."
                          },
                          "ModelName" : {
                            "type" : "string",
                            "description" : "The model of fGPU."
                          },
                          "MaxCpu" : {
                            "type" : "integer",
                            "description" : "The maximum number of VM vCores that the fGPU is compatible with."
                          },
                          "MaxRam" : {
                            "type" : "integer",
                            "description" : "The maximum amount of VM memory that the fGPU is compatible with."
                          },
                          "Generations" : {
                            "type" : "array",
                            "description" : "The generations of VMs that the fGPU is compatible with.",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the flexible GPU (fGPU) that is available in the public catalog."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateListenerRule" : {
      "post" : {
        "tags" : [ "Listener" ],
        "operationId" : "CreateListenerRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Listener", "ListenerRule", "VmIds" ],
                "type" : "object",
                "properties" : {
                  "Listener" : {
                    "required" : [ "LoadBalancerName", "LoadBalancerPort" ],
                    "type" : "object",
                    "properties" : {
                      "LoadBalancerName" : {
                        "type" : "string",
                        "description" : "The name of the load balancer to which the listener is attached."
                      },
                      "LoadBalancerPort" : {
                        "type" : "integer",
                        "description" : "The port of load balancer on which the load balancer is listening (between `1` and `65535` both included)."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the load balancer."
                  },
                  "ListenerRule" : {
                    "required" : [ "ListenerRuleName", "Priority" ],
                    "type" : "object",
                    "properties" : {
                      "PathPattern" : {
                        "type" : "string",
                        "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
                      },
                      "Action" : {
                        "type" : "string",
                        "description" : "The type of action for the rule (always `forward`)."
                      },
                      "HostNamePattern" : {
                        "type" : "string",
                        "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]. "
                      },
                      "Priority" : {
                        "type" : "integer",
                        "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
                      },
                      "ListenerRuleName" : {
                        "type" : "string",
                        "description" : "A human-readable name for the listener rule."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the listener rule."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmIds" : {
                    "type" : "array",
                    "description" : "The IDs of the backend VMs.",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ListenerRule" : {
                      "type" : "object",
                      "properties" : {
                        "PathPattern" : {
                          "type" : "string",
                          "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
                        },
                        "Action" : {
                          "type" : "string",
                          "description" : "The type of action for the rule (always `forward`)."
                        },
                        "HostNamePattern" : {
                          "type" : "string",
                          "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]."
                        },
                        "Priority" : {
                          "type" : "integer",
                          "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
                        },
                        "ListenerRuleId" : {
                          "type" : "integer",
                          "description" : "The ID of the listener rule."
                        },
                        "VmIds" : {
                          "type" : "array",
                          "description" : "The IDs of the backend VMs.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "ListenerRuleName" : {
                          "type" : "string",
                          "description" : "A human-readable name for the listener rule."
                        },
                        "ListenerId" : {
                          "type" : "integer",
                          "description" : "The ID of the listener."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the listener rule."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadVmsHealth" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "ReadVmsHealth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerName" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer."
                  },
                  "BackendVmIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of back-end VMs.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "BackendVmHealth" : {
                      "type" : "array",
                      "description" : "Information about the health of one or more back-end VMs.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Description" : {
                            "type" : "string",
                            "description" : "The description of the state of the back-end VM."
                          },
                          "StateReason" : {
                            "type" : "string",
                            "description" : "Information about the cause of `OutOfService` VMs.<br />\nSpecifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \\| `Instance` \\| `N/A`)."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the back-end VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                          },
                          "VmId" : {
                            "type" : "string",
                            "description" : "The ID of the back-end VM."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the health of a back-end VM."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteLoadBalancerTags" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "DeleteLoadBalancerTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerNames", "Tags" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerNames" : {
                    "type" : "array",
                    "description" : "One or more load balancer names.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Tags" : {
                    "type" : "array",
                    "description" : "One or more tags to delete from the load balancers.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "Key" : {
                          "type" : "string",
                          "description" : "The key of the tag, with a minimum of 1 character."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the tag."
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteDirectLinkInterface" : {
      "post" : {
        "tags" : [ "DirectLinkInterface" ],
        "operationId" : "DeleteDirectLinkInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DirectLinkInterfaceId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "DirectLinkInterfaceId" : {
                    "type" : "string",
                    "description" : "The ID of the DirectLink interface you want to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CheckAuthentication" : {
      "post" : {
        "tags" : [ "Account" ],
        "operationId" : "CheckAuthentication",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Login", "Password" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Login" : {
                    "type" : "string",
                    "description" : "The email address of the account."
                  },
                  "Password" : {
                    "type" : "string",
                    "description" : "The password of the account."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateVirtualGateway" : {
      "post" : {
        "tags" : [ "VirtualGateway" ],
        "operationId" : "CreateVirtualGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ConnectionType" ],
                "type" : "object",
                "properties" : {
                  "ConnectionType" : {
                    "type" : "string",
                    "description" : "The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported)."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "VirtualGateway" : {
                      "type" : "object",
                      "properties" : {
                        "ConnectionType" : {
                          "type" : "string",
                          "description" : "The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported)."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the virtual gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                        },
                        "NetToVirtualGatewayLinks" : {
                          "type" : "array",
                          "description" : "The Net to which the virtual gateway is attached.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "NetId" : {
                                "type" : "string",
                                "description" : "The ID of the Net to which the virtual gateway is attached."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the attachment."
                          }
                        },
                        "VirtualGatewayId" : {
                          "type" : "string",
                          "description" : "The ID of the virtual gateway."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the virtual gateway.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the virtual gateway."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadNetPeerings" : {
      "post" : {
        "tags" : [ "NetPeering" ],
        "operationId" : "ReadNetPeerings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "AccepterNetIpRanges" : {
                        "type" : "array",
                        "description" : "The IP ranges of the peer Nets, in CIDR notation (for example, 10.0.0.0/24).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AccepterNetNetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the peer Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "StateMessages" : {
                        "type" : "array",
                        "description" : "Additional information about the states of the Net peering connections.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SourceNetNetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the peer Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NetPeeringIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Net peering connections.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AccepterNetAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owners of the peer Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the Net peering connections, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the Net peering connections.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the Net peering connections.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "StateNames" : {
                        "type" : "array",
                        "description" : "The states of the Net peering connections (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SourceNetIpRanges" : {
                        "type" : "array",
                        "description" : "The IP ranges of the peer Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SourceNetAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owners of the peer Nets.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "NetPeerings" : {
                      "type" : "array",
                      "description" : "Information about one or more Net peering connections.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "SourceNet" : {
                            "type" : "object",
                            "properties" : {
                              "IpRange" : {
                                "type" : "string",
                                "description" : "The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16)."
                              },
                              "NetId" : {
                                "type" : "string",
                                "description" : "The ID of the source Net."
                              },
                              "AccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the source Net."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the source Net."
                          },
                          "State" : {
                            "type" : "object",
                            "properties" : {
                              "Message" : {
                                "type" : "string",
                                "description" : "Additional information about the state of the Net peering connection."
                              },
                              "Name" : {
                                "type" : "string",
                                "description" : "The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the state of the Net peering connection."
                          },
                          "NetPeeringId" : {
                            "type" : "string",
                            "description" : "The ID of the Net peering connection."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the Net peering connection.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "AccepterNet" : {
                            "type" : "object",
                            "properties" : {
                              "IpRange" : {
                                "type" : "string",
                                "description" : "The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16)."
                              },
                              "NetId" : {
                                "type" : "string",
                                "description" : "The ID of the accepter Net."
                              },
                              "AccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the accepter Net."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the accepter Net."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the Net peering connection."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadAdminPassword" : {
      "post" : {
        "tags" : [ "Vm" ],
        "operationId" : "ReadAdminPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VmId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of the VM."
                    },
                    "AdminPassword" : {
                      "type" : "string",
                      "description" : "The password of the VM. After the first boot, returns an empty string."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadDirectLinks" : {
      "post" : {
        "tags" : [ "DirectLink" ],
        "operationId" : "ReadDirectLinks",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "DirectLinkIds" : {
                        "type" : "array",
                        "description" : "The IDs of the DirectLinks.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "DirectLinks" : {
                      "type" : "array",
                      "description" : "Information about one or more DirectLinks.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the DirectLink."
                          },
                          "RegionName" : {
                            "type" : "string",
                            "description" : "The Region in which the DirectLink has been created."
                          },
                          "DirectLinkName" : {
                            "type" : "string",
                            "description" : "The name of the DirectLink."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the DirectLink.<br />\n* `requested`: The DirectLink is requested but the request has not been validated yet.<br />\n* `pending`: The DirectLink request has been validated. It remains in the `pending` state until you establish the physical link.<br />\n* `available`: The physical link is established and the connection is ready to use.<br />\n* `deleting`: The deletion process is in progress.<br />\n* `deleted`: The DirectLink is deleted."
                          },
                          "Bandwidth" : {
                            "type" : "string",
                            "description" : "The physical link bandwidth (either 1 Gbps or 10 Gbps)."
                          },
                          "DirectLinkId" : {
                            "type" : "string",
                            "description" : "The ID of the DirectLink (for example, dxcon-xxxxxxxx)."
                          },
                          "Location" : {
                            "type" : "string",
                            "description" : "The datacenter where the DirectLink is located."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the DirectLink."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteSecurityGroup" : {
      "post" : {
        "tags" : [ "SecurityGroup" ],
        "operationId" : "DeleteSecurityGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "SecurityGroupName" : {
                    "type" : "string",
                    "description" : "The name of the security group."
                  },
                  "SecurityGroupId" : {
                    "type" : "string",
                    "description" : "The ID of the security group you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadQuotas" : {
      "post" : {
        "tags" : [ "Quota" ],
        "operationId" : "ReadQuotas",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "ShortDescriptions" : {
                        "type" : "array",
                        "description" : "The description of the quotas.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "QuotaTypes" : {
                        "type" : "array",
                        "description" : "The resource IDs if these are resource-specific quotas, `global` if they are not.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "QuotaNames" : {
                        "type" : "array",
                        "description" : "The names of the quotas.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Collections" : {
                        "type" : "array",
                        "description" : "The group names of the quotas.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "QuotaTypes" : {
                      "type" : "array",
                      "description" : "Information about one or more quotas.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Quotas" : {
                            "type" : "array",
                            "description" : "One or more quotas associated with the user.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "QuotaCollection" : {
                                  "type" : "string",
                                  "description" : "The group name of the quota."
                                },
                                "Description" : {
                                  "type" : "string",
                                  "description" : "The description of the quota."
                                },
                                "AccountId" : {
                                  "type" : "string",
                                  "description" : "The account ID of the owner of the quotas."
                                },
                                "UsedValue" : {
                                  "type" : "integer",
                                  "description" : "The limit value currently used by the OUTSCALE user account."
                                },
                                "MaxValue" : {
                                  "type" : "integer",
                                  "description" : "The maximum value of the quota for the OUTSCALE user account (if there is no limit, `0`)."
                                },
                                "ShortDescription" : {
                                  "type" : "string",
                                  "description" : "The description of the quota."
                                },
                                "Name" : {
                                  "type" : "string",
                                  "description" : "The unique name of the quota."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the quota."
                            }
                          },
                          "QuotaType" : {
                            "type" : "string",
                            "description" : "The resource ID if it is a resource-specific quota, `global` if it is not."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "One or more quotas."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/LinkFlexibleGpu" : {
      "post" : {
        "tags" : [ "FlexibleGpu" ],
        "operationId" : "LinkFlexibleGpu",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "FlexibleGpuId", "VmId" ],
                "type" : "object",
                "properties" : {
                  "FlexibleGpuId" : {
                    "type" : "string",
                    "description" : "The ID of the fGPU you want to attach."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM you want to attach the fGPU to."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateSubnet" : {
      "post" : {
        "tags" : [ "Subnet" ],
        "operationId" : "CreateSubnet",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "IpRange", "NetId" ],
                "type" : "object",
                "properties" : {
                  "IpRange" : {
                    "type" : "string",
                    "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
                  },
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net for which you want to create a Subnet."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "SubregionName" : {
                    "type" : "string",
                    "description" : "The name of the Subregion in which you want to create the Subnet."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Subnet" : {
                      "type" : "object",
                      "properties" : {
                        "IpRange" : {
                          "type" : "string",
                          "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net in which the Subnet is."
                        },
                        "MapPublicIpOnLaunch" : {
                          "type" : "boolean",
                          "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
                        },
                        "AvailableIpsCount" : {
                          "type" : "integer",
                          "description" : "The number of available IP addresses in the Subnets."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the Subnet (`pending` \\| `available`)."
                        },
                        "SubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Subnet."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Subnet.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "SubregionName" : {
                          "type" : "string",
                          "description" : "The name of the Subregion in which the Subnet is located."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Subnet."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "409" : {
            "description" : "The HTTP 409 response (Conflict).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateLoadBalancerTags" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "CreateLoadBalancerTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerNames", "Tags" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerNames" : {
                    "type" : "array",
                    "description" : "One or more load balancer names.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Tags" : {
                    "type" : "array",
                    "description" : "One or more tags to add to the specified load balancers.",
                    "items" : {
                      "required" : [ "Key", "Value" ],
                      "type" : "object",
                      "properties" : {
                        "Value" : {
                          "type" : "string",
                          "description" : "The value of the tag, between 0 and 255 characters."
                        },
                        "Key" : {
                          "type" : "string",
                          "description" : "The key of the tag, with a minimum of 1 character."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the tag."
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/RegisterVmsInLoadBalancer" : {
      "post" : {
        "tags" : [ "LoadBalancer" ],
        "operationId" : "RegisterVmsInLoadBalancer",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "BackendVmIds", "LoadBalancerName" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer."
                  },
                  "BackendVmIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of back-end VMs.<br />\nSpecifying the same ID several times has no effect as each back-end VM has equal weight.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateVolume" : {
      "post" : {
        "tags" : [ "Volume" ],
        "operationId" : "UpdateVolume",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "VolumeId" ],
                "type" : "object",
                "properties" : {
                  "VolumeId" : {
                    "type" : "string",
                    "description" : "The ID of the volume you want to update."
                  },
                  "VolumeType" : {
                    "type" : "string",
                    "description" : "(cold volume only) The new type of the volume (`standard` \\| `io1` \\| `gp2`). This modification is instantaneous. If you update to an `io1` volume, you must also specify the `Iops` parameter."
                  },
                  "Size" : {
                    "type" : "integer",
                    "description" : "(cold volume only) The new size of the volume, in gibibytes (GiB). This value must be equal to or greater than the current size of the volume. This modification is not instantaneous."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Iops" : {
                    "type" : "integer",
                    "description" : "The new number of I/O operations per second (IOPS). This parameter can be specified only if you update an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`. This modification is instantaneous on a cold volume, not on a hot one."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Volume" : {
                      "type" : "object",
                      "properties" : {
                        "SnapshotId" : {
                          "type" : "string",
                          "description" : "The snapshot from which the volume was created."
                        },
                        "VolumeId" : {
                          "type" : "string",
                          "description" : "The ID of the volume."
                        },
                        "VolumeType" : {
                          "type" : "string",
                          "description" : "The type of the volume (`standard` \\| `gp2` \\| `io1`)."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the volume (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`)."
                        },
                        "Size" : {
                          "type" : "integer",
                          "description" : "The size of the volume, in gibibytes (GiB)."
                        },
                        "LinkedVolumes" : {
                          "type" : "array",
                          "description" : "Information about your volume attachment.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "VolumeId" : {
                                "type" : "string",
                                "description" : "The ID of the volume."
                              },
                              "DeleteOnVmDeletion" : {
                                "type" : "boolean",
                                "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`)."
                              },
                              "VmId" : {
                                "type" : "string",
                                "description" : "The ID of the VM."
                              },
                              "DeviceName" : {
                                "type" : "string",
                                "description" : "The name of the device."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about volume attachment."
                          }
                        },
                        "Iops" : {
                          "type" : "integer",
                          "description" : "The number of I/O operations per second (IOPS):<br />\n- For `io1` volumes, the number of provisioned IOPS<br />\n- For `gp2` volumes, the baseline performance of the volume"
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the volume.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "SubregionName" : {
                          "type" : "string",
                          "description" : "The Subregion in which the volume was created."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the volume."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateNic" : {
      "post" : {
        "tags" : [ "Nic" ],
        "operationId" : "UpdateNic",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NicId" ],
                "type" : "object",
                "properties" : {
                  "Description" : {
                    "type" : "string",
                    "description" : "A new description for the NIC."
                  },
                  "LinkNic" : {
                    "type" : "object",
                    "properties" : {
                      "DeleteOnVmDeletion" : {
                        "type" : "boolean",
                        "description" : "By default or if set to false, the NIC is detached from the VM when the VM is terminated. If true, the NIC is deleted."
                      },
                      "LinkNicId" : {
                        "type" : "string",
                        "description" : "The ID of the NIC attachment."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the NIC attachment. If you are modifying the `DeleteOnVmDeletion` attribute, you must specify the ID of the NIC attachment."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "SecurityGroupIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of security groups for the NIC.<br />\nYou must specify at least one group, even if you use the default security group in the Net.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "NicId" : {
                    "type" : "string",
                    "description" : "The ID of the NIC you want to modify."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Nic" : {
                      "type" : "object",
                      "properties" : {
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the NIC.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "SecurityGroupName" : {
                                "type" : "string",
                                "description" : "The name of the security group."
                              },
                              "SecurityGroupId" : {
                                "type" : "string",
                                "description" : "The ID of the security group."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the security group."
                          }
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the NIC."
                        },
                        "LinkPublicIp" : {
                          "type" : "object",
                          "properties" : {
                            "PublicIp" : {
                              "type" : "string",
                              "description" : "The External IP address (EIP) associated with the NIC."
                            },
                            "LinkPublicIpId" : {
                              "type" : "string",
                              "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                            },
                            "PublicIpId" : {
                              "type" : "string",
                              "description" : "The allocation ID of the EIP."
                            },
                            "PublicIpAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the EIP."
                            },
                            "PublicDnsName" : {
                              "type" : "string",
                              "description" : "The name of the public DNS."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the EIP association."
                        },
                        "PrivateDnsName" : {
                          "type" : "string",
                          "description" : "The name of the private DNS."
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the NIC."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the NIC."
                        },
                        "LinkNic" : {
                          "type" : "object",
                          "properties" : {
                            "DeviceNumber" : {
                              "type" : "integer",
                              "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                            },
                            "DeleteOnVmDeletion" : {
                              "type" : "boolean",
                              "description" : "If true, the NIC is deleted when the VM is terminated."
                            },
                            "VmAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the VM."
                            },
                            "LinkNicId" : {
                              "type" : "string",
                              "description" : "The ID of the NIC to attach."
                            },
                            "State" : {
                              "type" : "string",
                              "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                            },
                            "VmId" : {
                              "type" : "string",
                              "description" : "The ID of the VM."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the NIC attachment."
                        },
                        "SubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Subnet."
                        },
                        "MacAddress" : {
                          "type" : "string",
                          "description" : "The Media Access Control (MAC) address of the NIC."
                        },
                        "SubregionName" : {
                          "type" : "string",
                          "description" : "The Subregion in which the NIC is located."
                        },
                        "IsSourceDestChecked" : {
                          "type" : "boolean",
                          "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                        },
                        "PrivateIps" : {
                          "type" : "array",
                          "description" : "The private IP addresses of the NIC.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "LinkPublicIp" : {
                                "type" : "object",
                                "properties" : {
                                  "PublicIp" : {
                                    "type" : "string",
                                    "description" : "The External IP address (EIP) associated with the NIC."
                                  },
                                  "LinkPublicIpId" : {
                                    "type" : "string",
                                    "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                                  },
                                  "PublicIpId" : {
                                    "type" : "string",
                                    "description" : "The allocation ID of the EIP."
                                  },
                                  "PublicIpAccountId" : {
                                    "type" : "string",
                                    "description" : "The account ID of the owner of the EIP."
                                  },
                                  "PublicDnsName" : {
                                    "type" : "string",
                                    "description" : "The name of the public DNS."
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about the EIP association."
                              },
                              "PrivateDnsName" : {
                                "type" : "string",
                                "description" : "The name of the private DNS."
                              },
                              "PrivateIp" : {
                                "type" : "string",
                                "description" : "The private IP address of the NIC."
                              },
                              "IsPrimary" : {
                                "type" : "boolean",
                                "description" : "If true, the IP address is the primary private IP address of the NIC."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the private IP."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the NIC.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        },
                        "NicId" : {
                          "type" : "string",
                          "description" : "The ID of the NIC."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the NIC."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadProductTypes" : {
      "post" : {
        "tags" : [ "ProductType" ],
        "operationId" : "ReadProductTypes",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "ProductTypeIds" : {
                        "type" : "array",
                        "description" : "The IDs of the product types.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ProductTypes" : {
                      "type" : "array",
                      "description" : "Information about one or more product types.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Description" : {
                            "type" : "string",
                            "description" : "The description of the product type."
                          },
                          "Vendor" : {
                            "type" : "string",
                            "description" : "The vendor of the product type."
                          },
                          "ProductTypeId" : {
                            "type" : "string",
                            "description" : "The ID of the product type."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the product type."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadNatServices" : {
      "post" : {
        "tags" : [ "NatService" ],
        "operationId" : "ReadNatServices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the NAT services (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets in which the NAT services are.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NatServiceIds" : {
                        "type" : "array",
                        "description" : "The IDs of the NAT services.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SubnetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Subnets in which the NAT services are.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the NAT services, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the NAT services.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the NAT services.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "NatServices" : {
                      "type" : "array",
                      "description" : "Information about one or more NAT services.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "NatServiceId" : {
                            "type" : "string",
                            "description" : "The ID of the NAT service."
                          },
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net in which the NAT service is."
                          },
                          "PublicIps" : {
                            "type" : "array",
                            "description" : "Information about the External IP address or addresses (EIPs) associated with the NAT service.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "PublicIp" : {
                                  "type" : "string",
                                  "description" : "The External IP address (EIP) associated with the NAT service."
                                },
                                "PublicIpId" : {
                                  "type" : "string",
                                  "description" : "The allocation ID of the EIP associated with the NAT service."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the public IP."
                            }
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the NAT service (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                          },
                          "SubnetId" : {
                            "type" : "string",
                            "description" : "The ID of the Subnet in which the NAT service is."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the NAT service.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the NAT service."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateInternetService" : {
      "post" : {
        "tags" : [ "InternetService" ],
        "operationId" : "CreateInternetService",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "InternetService" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net attached to the Internet service."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the attachment of the Net to the Internet service (always `available`)."
                        },
                        "InternetServiceId" : {
                          "type" : "string",
                          "description" : "The ID of the Internet service."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Internet service.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Internet service."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateVpnConnection" : {
      "post" : {
        "tags" : [ "VpnConnection" ],
        "operationId" : "CreateVpnConnection",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ClientGatewayId", "ConnectionType", "VirtualGatewayId" ],
                "type" : "object",
                "properties" : {
                  "ConnectionType" : {
                    "type" : "string",
                    "description" : "The type of VPN connection (only `ipsec.1` is supported)."
                  },
                  "ClientGatewayId" : {
                    "type" : "string",
                    "description" : "The ID of the client gateway."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "StaticRoutesOnly" : {
                    "type" : "boolean",
                    "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
                  },
                  "VirtualGatewayId" : {
                    "type" : "string",
                    "description" : "The ID of the virtual gateway."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "VpnConnection" : {
                      "type" : "object",
                      "properties" : {
                        "ConnectionType" : {
                          "type" : "string",
                          "description" : "The type of VPN connection (always `ipsec.1`)."
                        },
                        "ClientGatewayId" : {
                          "type" : "string",
                          "description" : "The ID of the client gateway used on the client end of the connection."
                        },
                        "VpnOptions" : {
                          "type" : "object",
                          "properties" : {
                            "Phase1Options" : {
                              "type" : "object",
                              "properties" : {
                                "DpdTimeoutSeconds" : {
                                  "type" : "integer",
                                  "description" : "The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds."
                                },
                                "StartupAction" : {
                                  "type" : "string",
                                  "description" : "The action to carry out when establishing tunnels for a VPN connection."
                                },
                                "Phase1IntegrityAlgorithms" : {
                                  "type" : "array",
                                  "description" : "The integrity algorithms allowed for the VPN tunnel for phase 1.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "Phase1LifetimeSeconds" : {
                                  "type" : "integer",
                                  "description" : "The lifetime for phase 1 of the IKE negotiation process, in seconds."
                                },
                                "Phase1EncryptionAlgorithms" : {
                                  "type" : "array",
                                  "description" : "The encryption algorithms allowed for the VPN tunnel for phase 1.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "ReplayWindowSize" : {
                                  "type" : "integer",
                                  "description" : "The number of packets in an IKE replay window."
                                },
                                "DpdTimeoutAction" : {
                                  "type" : "string",
                                  "description" : "The action to carry out after a Dead Peer Detection (DPD) timeout occurs."
                                },
                                "Phase1DhGroupNumbers" : {
                                  "type" : "array",
                                  "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.",
                                  "items" : {
                                    "type" : "integer"
                                  }
                                },
                                "IkeVersions" : {
                                  "type" : "array",
                                  "description" : "The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. "
                            },
                            "TunnelInsideIpRange" : {
                              "type" : "string",
                              "description" : "The IP range for the tunnel in your VPN connection."
                            },
                            "Phase2Options" : {
                              "type" : "object",
                              "properties" : {
                                "Phase2EncryptionAlgorithms" : {
                                  "type" : "array",
                                  "description" : "The encryption algorithms allowed for the VPN tunnel for phase 2.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "Phase2DhGroupNumbers" : {
                                  "type" : "array",
                                  "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 2.",
                                  "items" : {
                                    "type" : "integer"
                                  }
                                },
                                "Phase2LifetimeSeconds" : {
                                  "type" : "integer",
                                  "description" : "The lifetime for phase 2 of the Internet Key Exchange (IKE) negociation process, in seconds."
                                },
                                "Phase2IntegrityAlgorithms" : {
                                  "type" : "array",
                                  "description" : "The integrity algorithms allowed for the VPN tunnel for phase 2.",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "PreSharedKey" : {
                                  "type" : "string",
                                  "description" : "The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. "
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the VPN options."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the VPN connection (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                        },
                        "ClientGatewayConfiguration" : {
                          "type" : "string",
                          "description" : "Example configuration for the client gateway."
                        },
                        "Routes" : {
                          "type" : "array",
                          "description" : "Information about one or more static routes associated with the VPN connection, if any.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "RouteType" : {
                                "type" : "string",
                                "description" : "The type of route (always `static`)."
                              },
                              "State" : {
                                "type" : "string",
                                "description" : "The current state of the static route (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                              },
                              "DestinationIpRange" : {
                                "type" : "string",
                                "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the route."
                          }
                        },
                        "VpnConnectionId" : {
                          "type" : "string",
                          "description" : "The ID of the VPN connection."
                        },
                        "StaticRoutesOnly" : {
                          "type" : "boolean",
                          "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
                        },
                        "VirtualGatewayId" : {
                          "type" : "string",
                          "description" : "The ID of the virtual gateway used on the OUTSCALE end of the connection."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the VPN connection.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about a VPN connection."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateNatService" : {
      "post" : {
        "tags" : [ "NatService" ],
        "operationId" : "CreateNatService",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "PublicIpId", "SubnetId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "PublicIpId" : {
                    "type" : "string",
                    "description" : "The allocation ID of the EIP to associate with the NAT service.<br />\nIf the EIP is already associated with another resource, you must first disassociate it."
                  },
                  "SubnetId" : {
                    "type" : "string",
                    "description" : "The ID of the Subnet in which you want to create the NAT service."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "NatService" : {
                      "type" : "object",
                      "properties" : {
                        "NatServiceId" : {
                          "type" : "string",
                          "description" : "The ID of the NAT service."
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net in which the NAT service is."
                        },
                        "PublicIps" : {
                          "type" : "array",
                          "description" : "Information about the External IP address or addresses (EIPs) associated with the NAT service.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PublicIp" : {
                                "type" : "string",
                                "description" : "The External IP address (EIP) associated with the NAT service."
                              },
                              "PublicIpId" : {
                                "type" : "string",
                                "description" : "The allocation ID of the EIP associated with the NAT service."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the public IP."
                          }
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the NAT service (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                        },
                        "SubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Subnet in which the NAT service is."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the NAT service.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the NAT service."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadSecurityGroups" : {
      "post" : {
        "tags" : [ "SecurityGroup" ],
        "operationId" : "ReadSecurityGroups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "InboundRuleFromPortRanges" : {
                        "type" : "array",
                        "description" : "The beginnings of the port ranges for the TCP and UDP protocols, or the ICMP type numbers.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "InboundRuleProtocols" : {
                        "type" : "array",
                        "description" : "The IP protocols for the permissions (`tcp` \\| `udp` \\| `icmp`, or a protocol number, or `-1` for all protocols).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "InboundRuleToPortRanges" : {
                        "type" : "array",
                        "description" : "The ends of the port ranges for the TCP and UDP protocols, or the ICMP codes.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "InboundRuleSecurityGroupNames" : {
                        "type" : "array",
                        "description" : "The names of the security groups that have been granted permissions.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets specified when the security groups were created.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs of the owners of the security groups.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "OutboundRuleProtocols" : {
                        "type" : "array",
                        "description" : "The IP protocols for the permissions (`tcp` \\| `udp` \\| `icmp`, or a protocol number, or `-1` for all protocols).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "OutboundRuleSecurityGroupIds" : {
                        "type" : "array",
                        "description" : "The IDs of the security groups that have been granted permissions.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "InboundRuleSecurityGroupIds" : {
                        "type" : "array",
                        "description" : "The IDs of the security groups that have been granted permissions.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "OutboundRuleIpRanges" : {
                        "type" : "array",
                        "description" : "The IP ranges that have been granted permissions, in CIDR notation (for example, 10.0.0.0/24).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SecurityGroupNames" : {
                        "type" : "array",
                        "description" : "The names of the security groups.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SecurityGroupIds" : {
                        "type" : "array",
                        "description" : "The IDs of the security groups.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the security groups.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the security groups.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "InboundRuleIpRanges" : {
                        "type" : "array",
                        "description" : "The IP ranges that have been granted permissions, in CIDR notation (for example, 10.0.0.0/24).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "InboundRuleAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs that have been granted permissions.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Descriptions" : {
                        "type" : "array",
                        "description" : "The descriptions of the security groups.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "OutboundRuleSecurityGroupNames" : {
                        "type" : "array",
                        "description" : "The names of the security groups that have been granted permissions.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "OutboundRuleFromPortRanges" : {
                        "type" : "array",
                        "description" : "The beginnings of the port ranges for the TCP and UDP protocols, or the ICMP type numbers.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "OutboundRuleToPortRanges" : {
                        "type" : "array",
                        "description" : "The ends of the port ranges for the TCP and UDP protocols, or the ICMP codes.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "OutboundRuleAccountIds" : {
                        "type" : "array",
                        "description" : "The account IDs that have been granted permissions.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the security groups, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "SecurityGroups" : {
                      "type" : "array",
                      "description" : "Information about one or more security groups.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net for the security group."
                          },
                          "InboundRules" : {
                            "type" : "array",
                            "description" : "The inbound rules associated with the security group.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ToPortRange" : {
                                  "type" : "integer",
                                  "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                                },
                                "ServiceIds" : {
                                  "type" : "array",
                                  "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "SecurityGroupsMembers" : {
                                  "type" : "array",
                                  "description" : "Information about one or more members of a security group.",
                                  "items" : {
                                    "type" : "object",
                                    "properties" : {
                                      "AccountId" : {
                                        "type" : "string",
                                        "description" : "The account ID of a user."
                                      },
                                      "SecurityGroupName" : {
                                        "type" : "string",
                                        "description" : "The name of the security group."
                                      },
                                      "SecurityGroupId" : {
                                        "type" : "string",
                                        "description" : "The ID of the security group."
                                      }
                                    },
                                    "additionalProperties" : false,
                                    "description" : "Information about the member of a security group."
                                  }
                                },
                                "IpProtocol" : {
                                  "type" : "string",
                                  "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                                },
                                "IpRanges" : {
                                  "type" : "array",
                                  "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "FromPortRange" : {
                                  "type" : "integer",
                                  "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the security group rule."
                            }
                          },
                          "Description" : {
                            "type" : "string",
                            "description" : "The description of the security group."
                          },
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of a user that has been granted permission."
                          },
                          "SecurityGroupName" : {
                            "type" : "string",
                            "description" : "The name of the security group."
                          },
                          "SecurityGroupId" : {
                            "type" : "string",
                            "description" : "The ID of the security group."
                          },
                          "OutboundRules" : {
                            "type" : "array",
                            "description" : "The outbound rules associated with the security group.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ToPortRange" : {
                                  "type" : "integer",
                                  "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                                },
                                "ServiceIds" : {
                                  "type" : "array",
                                  "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "SecurityGroupsMembers" : {
                                  "type" : "array",
                                  "description" : "Information about one or more members of a security group.",
                                  "items" : {
                                    "type" : "object",
                                    "properties" : {
                                      "AccountId" : {
                                        "type" : "string",
                                        "description" : "The account ID of a user."
                                      },
                                      "SecurityGroupName" : {
                                        "type" : "string",
                                        "description" : "The name of the security group."
                                      },
                                      "SecurityGroupId" : {
                                        "type" : "string",
                                        "description" : "The ID of the security group."
                                      }
                                    },
                                    "additionalProperties" : false,
                                    "description" : "Information about the member of a security group."
                                  }
                                },
                                "IpProtocol" : {
                                  "type" : "string",
                                  "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                                },
                                "IpRanges" : {
                                  "type" : "array",
                                  "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                                  "items" : {
                                    "type" : "string"
                                  }
                                },
                                "FromPortRange" : {
                                  "type" : "integer",
                                  "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the security group rule."
                            }
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the security group.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the security group."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateAccessKey" : {
      "post" : {
        "tags" : [ "AccessKey" ],
        "operationId" : "UpdateAccessKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "AccessKeyId", "State" ],
                "type" : "object",
                "properties" : {
                  "State" : {
                    "type" : "string",
                    "description" : "The new state for the access key (`ACTIVE` \\| `INACTIVE`)."
                  },
                  "AccessKeyId" : {
                    "type" : "string",
                    "description" : "The ID of the access key."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "AccessKey" : {
                      "type" : "object",
                      "properties" : {
                        "CreationDate" : {
                          "type" : "string",
                          "description" : "The date and time of creation of the access key.",
                          "format" : "datetime"
                        },
                        "ExpirationDate" : {
                          "type" : "string",
                          "description" : "The date at which the access key expires.",
                          "format" : "datetime"
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
                        },
                        "AccessKeyId" : {
                          "type" : "string",
                          "description" : "The ID of the access key."
                        },
                        "LastModificationDate" : {
                          "type" : "string",
                          "description" : "The date and time of the last modification of the access key.",
                          "format" : "datetime"
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the access key."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/LinkVolume" : {
      "post" : {
        "tags" : [ "Volume" ],
        "operationId" : "LinkVolume",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DeviceName", "VmId", "VolumeId" ],
                "type" : "object",
                "properties" : {
                  "VolumeId" : {
                    "type" : "string",
                    "description" : "The ID of the volume you want to attach."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM you want to attach the volume to."
                  },
                  "DeviceName" : {
                    "type" : "string",
                    "description" : "The name of the device."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadTags" : {
      "post" : {
        "tags" : [ "Tag" ],
        "operationId" : "ReadTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "ResourceTypes" : {
                        "type" : "array",
                        "description" : "The resource type (`vm` \\| `image` \\| `volume` \\| `snapshot` \\| `public-ip` \\| `security-group` \\| `route-table` \\| `nic` \\| `net` \\| `subnet` \\| `net-peering` \\| `net-access-point` \\| `nat-service` \\| `internet-service` \\| `client-gateway` \\| `virtual-gateway` \\| `vpn-connection` \\| `dhcp-options` \\| `task`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ResourceIds" : {
                        "type" : "array",
                        "description" : "The IDs of the resources with which the tags are associated.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Keys" : {
                        "type" : "array",
                        "description" : "The keys of the tags that are assigned to the resources. You can use this filter alongside the `Values` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Values" : {
                        "type" : "array",
                        "description" : "The values of the tags that are assigned to the resources. You can use this filter alongside the `TagKeys` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Tags" : {
                      "type" : "array",
                      "description" : "Information about one or more tags.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ResourceId" : {
                            "type" : "string",
                            "description" : "The ID of the resource."
                          },
                          "Value" : {
                            "type" : "string",
                            "description" : "The value of the tag, between 0 and 255 characters."
                          },
                          "ResourceType" : {
                            "type" : "string",
                            "description" : "The type of the resource."
                          },
                          "Key" : {
                            "type" : "string",
                            "description" : "The key of the tag, with a minimum of 1 character."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the tag."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ResetAccountPassword" : {
      "post" : {
        "tags" : [ "Account" ],
        "operationId" : "ResetAccountPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "Password", "Token" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Token" : {
                    "type" : "string",
                    "description" : "The token you received at the email address provided for the account."
                  },
                  "Password" : {
                    "type" : "string",
                    "description" : "The new password for the account."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateNetAccessPoint" : {
      "post" : {
        "tags" : [ "NetAccessPoint" ],
        "operationId" : "CreateNetAccessPoint",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetId", "ServiceName" ],
                "type" : "object",
                "properties" : {
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net."
                  },
                  "ServiceName" : {
                    "type" : "string",
                    "description" : "The name of the service (in the format `com.outscale.region.service`)."
                  },
                  "RouteTableIds" : {
                    "type" : "array",
                    "description" : "One or more IDs of route tables to use for the connection.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "NetAccessPoint" : {
                      "type" : "object",
                      "properties" : {
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net with which the Net access point is associated."
                        },
                        "ServiceName" : {
                          "type" : "string",
                          "description" : "The name of the service with which the Net access point is associated."
                        },
                        "RouteTableIds" : {
                          "type" : "array",
                          "description" : "The ID of the route tables associated with the Net access point.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the Net access point (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                        },
                        "NetAccessPointId" : {
                          "type" : "string",
                          "description" : "The ID of the Net access point."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Net access point.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Net access point."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteExportTask" : {
      "post" : {
        "tags" : [ "Task" ],
        "operationId" : "DeleteExportTask",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ExportTaskId" ],
                "type" : "object",
                "properties" : {
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "ExportTaskId" : {
                    "type" : "string",
                    "description" : "The ID of the export task to delete."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadSecretAccessKey" : {
      "post" : {
        "tags" : [ "AccessKey" ],
        "operationId" : "ReadSecretAccessKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "AccessKeyId" ],
                "type" : "object",
                "properties" : {
                  "AccessKeyId" : {
                    "type" : "string",
                    "description" : "The ID of the access key."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "AccessKey" : {
                      "type" : "object",
                      "properties" : {
                        "CreationDate" : {
                          "type" : "string",
                          "description" : "The date and time of creation of the secret access key.",
                          "format" : "datetime"
                        },
                        "SecretKey" : {
                          "type" : "string",
                          "description" : "The secret access key that enables you to send requests."
                        },
                        "ExpirationDate" : {
                          "type" : "string",
                          "description" : "The date at which the access key expires.",
                          "format" : "datetime"
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the secret access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
                        },
                        "AccessKeyId" : {
                          "type" : "string",
                          "description" : "The ID of the secret access key."
                        },
                        "LastModificationDate" : {
                          "type" : "string",
                          "description" : "The date and time of the last modification of the secret access key.",
                          "format" : "datetime"
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the secret access key."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateApiAccessPolicy" : {
      "post" : {
        "tags" : [ "ApiAccessPolicy" ],
        "operationId" : "UpdateApiAccessPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "MaxAccessKeyExpirationSeconds", "RequireTrustedEnv" ],
                "type" : "object",
                "properties" : {
                  "RequireTrustedEnv" : {
                    "type" : "boolean",
                    "description" : "If true, a trusted session is activated, provided that you specify the `MaxAccessKeyExpirationSeconds` parameter with a value greater than `0`."
                  },
                  "MaxAccessKeyExpirationSeconds" : {
                    "type" : "integer",
                    "description" : "The maximum possible lifetime for your access keys, in seconds (between `0` and `3153600000`, both included). By default or if set to `O`, your access keys can have unlimited lifetimes. Otherwise, all your access keys must have an expiration date. This value must be greater than the remaining lifetime of each access key of your account.",
                    "format" : "int64"
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ApiAccessPolicy" : {
                      "type" : "object",
                      "properties" : {
                        "RequireTrustedEnv" : {
                          "type" : "boolean",
                          "description" : "If true, a trusted session is activated, allowing you to bypass Certificate Authorities (CAs) enforcement. For more information, see the `ApiKeyAuth` authentication scheme in the [Authentication](#authentication) section."
                        },
                        "MaxAccessKeyExpirationSeconds" : {
                          "type" : "integer",
                          "description" : "The maximum possible lifetime for your access keys, in seconds. If `0`, your access keys can have unlimited lifetimes.",
                          "format" : "int64"
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the API access policy."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateImage" : {
      "post" : {
        "tags" : [ "Image" ],
        "operationId" : "CreateImage",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "SourceRegionName" : {
                    "type" : "string",
                    "description" : "The name of the source Region, which must be the same as the Region of your account."
                  },
                  "ImageName" : {
                    "type" : "string",
                    "description" : "A unique name for the new OMI.<br />\nConstraints: 3-128 alphanumeric characters, underscores (_), spaces ( ), parentheses (()), slashes (/), periods (.), or dashes (-)."
                  },
                  "RootDeviceName" : {
                    "type" : "string",
                    "description" : "The name of the root device."
                  },
                  "Description" : {
                    "type" : "string",
                    "description" : "A description for the new OMI."
                  },
                  "Architecture" : {
                    "type" : "string",
                    "description" : "The architecture of the OMI (by default, `i386`)."
                  },
                  "FileLocation" : {
                    "type" : "string",
                    "description" : "The pre-signed URL of the OMI manifest file, or the full path to the OMI stored in a bucket. If you specify this parameter, a copy of the OMI is created in your account."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "BlockDeviceMappings" : {
                    "type" : "array",
                    "description" : "One or more block device mappings.",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "Bsu" : {
                          "type" : "object",
                          "properties" : {
                            "SnapshotId" : {
                              "type" : "string",
                              "description" : "The ID of the snapshot used to create the volume."
                            },
                            "VolumeType" : {
                              "type" : "string",
                              "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                            },
                            "DeleteOnVmDeletion" : {
                              "type" : "boolean",
                              "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                            },
                            "Iops" : {
                              "type" : "integer",
                              "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                            },
                            "VolumeSize" : {
                              "type" : "integer",
                              "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the BSU volume to create."
                        },
                        "VirtualDeviceName" : {
                          "type" : "string",
                          "description" : "The name of the virtual device (ephemeralN)."
                        },
                        "DeviceName" : {
                          "type" : "string",
                          "description" : "The name of the device."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "One or more parameters used to automatically set up volumes when the VM is created."
                    }
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM from which you want to create the OMI."
                  },
                  "SourceImageId" : {
                    "type" : "string",
                    "description" : "The ID of the OMI you want to copy."
                  },
                  "NoReboot" : {
                    "type" : "boolean",
                    "description" : "If false, the VM shuts down before creating the OMI and then reboots. If true, the VM does not."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Image" : {
                      "type" : "object",
                      "properties" : {
                        "ProductCodes" : {
                          "type" : "array",
                          "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "CreationDate" : {
                          "type" : "string",
                          "description" : "The date and time at which the OMI was created.",
                          "format" : "date"
                        },
                        "PermissionsToLaunch" : {
                          "type" : "object",
                          "properties" : {
                            "AccountIds" : {
                              "type" : "array",
                              "description" : "The account ID of one or more users who have permissions for the resource.",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "GlobalPermission" : {
                              "type" : "boolean",
                              "description" : "If true, the resource is public. If false, the resource is private."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the users who have permissions for the resource."
                        },
                        "RootDeviceName" : {
                          "type" : "string",
                          "description" : "The name of the root device."
                        },
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the OMI."
                        },
                        "AccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the OMI."
                        },
                        "Architecture" : {
                          "type" : "string",
                          "description" : "The architecture of the OMI (by default, `i386`)."
                        },
                        "BlockDeviceMappings" : {
                          "type" : "array",
                          "description" : "One or more block device mappings.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "Bsu" : {
                                "type" : "object",
                                "properties" : {
                                  "SnapshotId" : {
                                    "type" : "string",
                                    "description" : "The ID of the snapshot used to create the volume."
                                  },
                                  "VolumeType" : {
                                    "type" : "string",
                                    "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                                  },
                                  "DeleteOnVmDeletion" : {
                                    "type" : "boolean",
                                    "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                                  },
                                  "Iops" : {
                                    "type" : "integer",
                                    "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                                  },
                                  "VolumeSize" : {
                                    "type" : "integer",
                                    "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                                  }
                                },
                                "additionalProperties" : false,
                                "description" : "Information about the BSU volume to create."
                              },
                              "VirtualDeviceName" : {
                                "type" : "string",
                                "description" : "The name of the virtual device (ephemeralN)."
                              },
                              "DeviceName" : {
                                "type" : "string",
                                "description" : "The name of the device."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "One or more parameters used to automatically set up volumes when the VM is created."
                          }
                        },
                        "StateComment" : {
                          "type" : "object",
                          "properties" : {
                            "StateCode" : {
                              "type" : "string",
                              "description" : "The code of the change of state."
                            },
                            "StateMessage" : {
                              "type" : "string",
                              "description" : "A message explaining the change of state."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the change of state."
                        },
                        "AccountAlias" : {
                          "type" : "string",
                          "description" : "The account alias of the owner of the OMI."
                        },
                        "ImageType" : {
                          "type" : "string",
                          "description" : "The type of the OMI."
                        },
                        "RootDeviceType" : {
                          "type" : "string",
                          "description" : "The type of root device used by the OMI (always `bsu`)."
                        },
                        "ImageName" : {
                          "type" : "string",
                          "description" : "The name of the OMI."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the OMI (`pending` \\| `available` \\| `failed`)."
                        },
                        "FileLocation" : {
                          "type" : "string",
                          "description" : "The location of the bucket where the OMI files are stored."
                        },
                        "ImageId" : {
                          "type" : "string",
                          "description" : "The ID of the OMI."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the OMI.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the OMI."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadDirectLinkInterfaces" : {
      "post" : {
        "tags" : [ "DirectLinkInterface" ],
        "operationId" : "ReadDirectLinkInterfaces",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "DirectLinkIds" : {
                        "type" : "array",
                        "description" : "The IDs of the DirectLinks.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "DirectLinkInterfaceIds" : {
                        "type" : "array",
                        "description" : "The IDs of the DirectLink interfaces.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "DirectLinkInterfaces" : {
                      "type" : "array",
                      "description" : "Information about one or more DirectLink interfaces.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "InterfaceType" : {
                            "type" : "string",
                            "description" : "The type of the DirectLink interface (always `private`)."
                          },
                          "ClientPrivateIp" : {
                            "type" : "string",
                            "description" : "The IP address on the customer's side of the DirectLink interface."
                          },
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the DirectLink interface."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the DirectLink interface (`pending` \\| `available` \\| `deleting` \\| `deleted` \\| `confirming` \\| `rejected` \\| `expired`)."
                          },
                          "DirectLinkInterfaceName" : {
                            "type" : "string",
                            "description" : "The name of the DirectLink interface."
                          },
                          "DirectLinkId" : {
                            "type" : "string",
                            "description" : "The ID of the DirectLink."
                          },
                          "Vlan" : {
                            "type" : "integer",
                            "description" : "The VLAN number associated with the DirectLink interface."
                          },
                          "DirectLinkInterfaceId" : {
                            "type" : "string",
                            "description" : "The ID of the DirectLink interface."
                          },
                          "BgpKey" : {
                            "type" : "string",
                            "description" : "The BGP authentication key."
                          },
                          "VirtualGatewayId" : {
                            "type" : "string",
                            "description" : "The ID of the target virtual gateway."
                          },
                          "OutscalePrivateIp" : {
                            "type" : "string",
                            "description" : "The IP address on the OUTSCALE side of the DirectLink interface."
                          },
                          "BgpAsn" : {
                            "type" : "integer",
                            "description" : "The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface."
                          },
                          "Location" : {
                            "type" : "string",
                            "description" : "The datacenter where the DirectLink interface is located."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the DirectLink interfaces."
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadSubnets" : {
      "post" : {
        "tags" : [ "Subnet" ],
        "operationId" : "ReadSubnets",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "States" : {
                        "type" : "array",
                        "description" : "The states of the Subnets (`pending` \\| `available`).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "NetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Nets in which the Subnets are.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "AvailableIpsCounts" : {
                        "type" : "array",
                        "description" : "The number of available IPs.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "SubregionNames" : {
                        "type" : "array",
                        "description" : "The names of the Subregions in which the Subnets are located.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "IpRanges" : {
                        "type" : "array",
                        "description" : "The IP ranges in the Subnets, in CIDR notation (for example, 10.0.0.0/16).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SubnetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the Subnets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the Subnets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the Subnets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the Subnets.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Subnets" : {
                      "type" : "array",
                      "description" : "Information about one or more Subnets.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "IpRange" : {
                            "type" : "string",
                            "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
                          },
                          "NetId" : {
                            "type" : "string",
                            "description" : "The ID of the Net in which the Subnet is."
                          },
                          "MapPublicIpOnLaunch" : {
                            "type" : "boolean",
                            "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
                          },
                          "AvailableIpsCount" : {
                            "type" : "integer",
                            "description" : "The number of available IP addresses in the Subnets."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the Subnet (`pending` \\| `available`)."
                          },
                          "SubnetId" : {
                            "type" : "string",
                            "description" : "The ID of the Subnet."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the Subnet.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "SubregionName" : {
                            "type" : "string",
                            "description" : "The name of the Subregion in which the Subnet is located."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the Subnet."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UnlinkVirtualGateway" : {
      "post" : {
        "tags" : [ "VirtualGateway" ],
        "operationId" : "UnlinkVirtualGateway",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "NetId", "VirtualGatewayId" ],
                "type" : "object",
                "properties" : {
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net from which you want to detach the virtual gateway."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VirtualGatewayId" : {
                    "type" : "string",
                    "description" : "The ID of the virtual gateway."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/LinkPublicIp" : {
      "post" : {
        "tags" : [ "PublicIp" ],
        "operationId" : "LinkPublicIp",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "PublicIp" : {
                    "type" : "string",
                    "description" : "The EIP. This parameter is required unless you use the `PublicIpId` parameter."
                  },
                  "PrivateIp" : {
                    "type" : "string",
                    "description" : "(Net only) The primary or secondary private IP address of the specified NIC. By default, the primary private IP address."
                  },
                  "AllowRelink" : {
                    "type" : "boolean",
                    "description" : "If true, allows the EIP to be associated with the VM or NIC that you specify even if it is already associated with another VM or NIC. If false, prevents the EIP from being associated with the VM or NIC that you specify if it is already associated with another VM or NIC. (By default, true in the public Cloud, false in a Net.)"
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM.<br />\n- In the public Cloud, this parameter is required.<br />\n- In a Net, this parameter is required if the VM has only one NIC. Otherwise, you need to specify the `NicId` parameter instead. You cannot specify both parameters at the same time."
                  },
                  "PublicIpId" : {
                    "type" : "string",
                    "description" : "The allocation ID of the EIP. This parameter is required unless you use the `PublicIp` parameter."
                  },
                  "NicId" : {
                    "type" : "string",
                    "description" : "(Net only) The ID of the NIC. This parameter is required if the VM has more than one NIC attached. Otherwise, you need to specify the `VmId` parameter instead. You cannot specify both parameters at the same time."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LinkPublicIpId" : {
                      "type" : "string",
                      "description" : "(Net only) The ID representing the association of the EIP with the VM or the NIC."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteTags" : {
      "post" : {
        "tags" : [ "Tag" ],
        "operationId" : "DeleteTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ResourceIds", "Tags" ],
                "type" : "object",
                "properties" : {
                  "ResourceIds" : {
                    "type" : "array",
                    "description" : "One or more resource IDs.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Tags" : {
                    "type" : "array",
                    "description" : "One or more tags to delete (if you set a tag value, only the tags matching exactly this value are deleted).",
                    "items" : {
                      "required" : [ "Key", "Value" ],
                      "type" : "object",
                      "properties" : {
                        "Value" : {
                          "type" : "string",
                          "description" : "The value of the tag, between 0 and 255 characters."
                        },
                        "Key" : {
                          "type" : "string",
                          "description" : "The key of the tag, with a minimum of 1 character."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the tag."
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadDhcpOptions" : {
      "post" : {
        "tags" : [ "DhcpOption" ],
        "operationId" : "ReadDhcpOptions",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "Filters" : {
                    "type" : "object",
                    "properties" : {
                      "NtpServers" : {
                        "type" : "array",
                        "description" : "The Network Time Protocol (NTP) servers used for the DHCP options sets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "DomainNames" : {
                        "type" : "array",
                        "description" : "The domain names used for the DHCP options sets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Default" : {
                        "type" : "boolean",
                        "description" : "If true, lists all default DHCP options set. If false, lists all non-default DHCP options set."
                      },
                      "Tags" : {
                        "type" : "array",
                        "description" : "The key/value combination of the tags associated with the DHCP options sets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagValues" : {
                        "type" : "array",
                        "description" : "The values of the tags associated with the DHCP options sets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "TagKeys" : {
                        "type" : "array",
                        "description" : "The keys of the tags associated with the DHCP options sets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "DomainNameServers" : {
                        "type" : "array",
                        "description" : "The domain name servers used for the DHCP options sets.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "DhcpOptionsSetIds" : {
                        "type" : "array",
                        "description" : "The IDs of the DHCP options sets.",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more filters."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "DhcpOptionsSets" : {
                      "type" : "array",
                      "description" : "Information about one or more DHCP options sets.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "DhcpOptionsSetId" : {
                            "type" : "string",
                            "description" : "The ID of the DHCP options set."
                          },
                          "NtpServers" : {
                            "type" : "array",
                            "description" : "One or more IP addresses for the NTP servers.",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "DomainName" : {
                            "type" : "string",
                            "description" : "The domain name."
                          },
                          "Default" : {
                            "type" : "boolean",
                            "description" : "If true, the DHCP options set is a default one. If false, it is not."
                          },
                          "Tags" : {
                            "type" : "array",
                            "description" : "One or more tags associated with the DHCP options set.",
                            "items" : {
                              "required" : [ "Key", "Value" ],
                              "type" : "object",
                              "properties" : {
                                "Value" : {
                                  "type" : "string",
                                  "description" : "The value of the tag, between 0 and 255 characters."
                                },
                                "Key" : {
                                  "type" : "string",
                                  "description" : "The key of the tag, with a minimum of 1 character."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the tag."
                            }
                          },
                          "DomainNameServers" : {
                            "type" : "array",
                            "description" : "One or more IP addresses for the domain name servers.",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the DHCP options set."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateCa" : {
      "post" : {
        "tags" : [ "Ca" ],
        "operationId" : "CreateCa",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "CaPem" ],
                "type" : "object",
                "properties" : {
                  "Description" : {
                    "type" : "string",
                    "description" : "The description of the CA."
                  },
                  "CaPem" : {
                    "type" : "string",
                    "description" : "The CA in PEM format."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Ca" : {
                      "type" : "object",
                      "properties" : {
                        "Description" : {
                          "type" : "string",
                          "description" : "The description of the CA."
                        },
                        "CaId" : {
                          "type" : "string",
                          "description" : "The ID of the CA."
                        },
                        "CaFingerprint" : {
                          "type" : "string",
                          "description" : "The fingerprint of the CA."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Client Certificate Authority (CA)."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateAccessKey" : {
      "post" : {
        "tags" : [ "AccessKey" ],
        "operationId" : "CreateAccessKey",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ExpirationDate" : {
                    "type" : "string",
                    "description" : "The date and time at which you want the access key to expire, in ISO 8601 format (for example, `2017-06-14` or `2017-06-14T00:00:00Z`). If not specified, the access key has no expiration date.",
                    "format" : "datetime"
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "AccessKey" : {
                      "type" : "object",
                      "properties" : {
                        "CreationDate" : {
                          "type" : "string",
                          "description" : "The date and time of creation of the secret access key.",
                          "format" : "datetime"
                        },
                        "SecretKey" : {
                          "type" : "string",
                          "description" : "The secret access key that enables you to send requests."
                        },
                        "ExpirationDate" : {
                          "type" : "string",
                          "description" : "The date at which the access key expires.",
                          "format" : "datetime"
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the secret access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
                        },
                        "AccessKeyId" : {
                          "type" : "string",
                          "description" : "The ID of the secret access key."
                        },
                        "LastModificationDate" : {
                          "type" : "string",
                          "description" : "The date and time of the last modification of the secret access key.",
                          "format" : "datetime"
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the secret access key."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteLoadBalancerPolicy" : {
      "post" : {
        "tags" : [ "LoadBalancerPolicy" ],
        "operationId" : "DeleteLoadBalancerPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerName", "PolicyName" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer for which you want to delete a policy."
                  },
                  "PolicyName" : {
                    "type" : "string",
                    "description" : "The name of the policy you want to delete."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LoadBalancer" : {
                      "type" : "object",
                      "properties" : {
                        "AccessLog" : {
                          "type" : "object",
                          "properties" : {
                            "OsuBucketPrefix" : {
                              "type" : "string",
                              "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                            },
                            "IsEnabled" : {
                              "type" : "boolean",
                              "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                            },
                            "PublicationInterval" : {
                              "type" : "integer",
                              "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                            },
                            "OsuBucketName" : {
                              "type" : "string",
                              "description" : "The name of the OOS bucket for the access logs."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about access logs."
                        },
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "BackendVmIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of back-end VMs for the load balancer.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the load balancer."
                        },
                        "DnsName" : {
                          "type" : "string",
                          "description" : "The DNS name of the load balancer."
                        },
                        "ApplicationStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The stickiness policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                              },
                              "CookieName" : {
                                "type" : "string",
                                "description" : "The name of the application cookie used for stickiness."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "SourceSecurityGroup" : {
                          "type" : "object",
                          "properties" : {
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            },
                            "SecurityGroupAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
                        },
                        "HealthCheck" : {
                          "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                          "type" : "object",
                          "properties" : {
                            "Path" : {
                              "type" : "string",
                              "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                            },
                            "UnhealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                            },
                            "Timeout" : {
                              "type" : "integer",
                              "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                            },
                            "CheckInterval" : {
                              "type" : "integer",
                              "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                            },
                            "Port" : {
                              "type" : "integer",
                              "description" : "The port number (between `1` and `65535`, both included)."
                            },
                            "HealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                            },
                            "Protocol" : {
                              "type" : "string",
                              "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the health check configuration."
                        },
                        "LoadBalancerType" : {
                          "type" : "string",
                          "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
                        },
                        "LoadBalancerName" : {
                          "type" : "string",
                          "description" : "The name of the load balancer."
                        },
                        "Subnets" : {
                          "type" : "array",
                          "description" : "The ID of the Subnet in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Listeners" : {
                          "type" : "array",
                          "description" : "The listeners for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyNames" : {
                                "type" : "array",
                                "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "BackendProtocol" : {
                                "type" : "string",
                                "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "LoadBalancerProtocol" : {
                                "type" : "string",
                                "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "BackendPort" : {
                                "type" : "integer",
                                "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                              },
                              "ServerCertificateId" : {
                                "type" : "string",
                                "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                              },
                              "LoadBalancerPort" : {
                                "type" : "integer",
                                "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the listener."
                          }
                        },
                        "SubregionNames" : {
                          "type" : "array",
                          "description" : "The ID of the Subregion in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "LoadBalancerStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "CookieExpirationPeriod" : {
                                "type" : "integer",
                                "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                              },
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The name of the stickiness policy."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the load balancer.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the load balancer."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UnlinkNic" : {
      "post" : {
        "tags" : [ "Nic" ],
        "operationId" : "UnlinkNic",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LinkNicId" ],
                "type" : "object",
                "properties" : {
                  "LinkNicId" : {
                    "type" : "string",
                    "description" : "The ID of the attachment operation."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/LinkRouteTable" : {
      "post" : {
        "tags" : [ "RouteTable" ],
        "operationId" : "LinkRouteTable",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "RouteTableId", "SubnetId" ],
                "type" : "object",
                "properties" : {
                  "RouteTableId" : {
                    "type" : "string",
                    "description" : "The ID of the route table."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "SubnetId" : {
                    "type" : "string",
                    "description" : "The ID of the Subnet."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LinkRouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the association between the route table and the Subnet."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/DeleteLoadBalancerListeners" : {
      "post" : {
        "tags" : [ "Listener" ],
        "operationId" : "DeleteLoadBalancerListeners",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerName", "LoadBalancerPorts" ],
                "type" : "object",
                "properties" : {
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer for which you want to delete listeners."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "LoadBalancerPorts" : {
                    "type" : "array",
                    "description" : "One or more port numbers of the listeners you want to delete.",
                    "items" : {
                      "type" : "integer"
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LoadBalancer" : {
                      "type" : "object",
                      "properties" : {
                        "AccessLog" : {
                          "type" : "object",
                          "properties" : {
                            "OsuBucketPrefix" : {
                              "type" : "string",
                              "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                            },
                            "IsEnabled" : {
                              "type" : "boolean",
                              "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                            },
                            "PublicationInterval" : {
                              "type" : "integer",
                              "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                            },
                            "OsuBucketName" : {
                              "type" : "string",
                              "description" : "The name of the OOS bucket for the access logs."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about access logs."
                        },
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "BackendVmIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of back-end VMs for the load balancer.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the load balancer."
                        },
                        "DnsName" : {
                          "type" : "string",
                          "description" : "The DNS name of the load balancer."
                        },
                        "ApplicationStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The stickiness policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                              },
                              "CookieName" : {
                                "type" : "string",
                                "description" : "The name of the application cookie used for stickiness."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "SourceSecurityGroup" : {
                          "type" : "object",
                          "properties" : {
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            },
                            "SecurityGroupAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
                        },
                        "HealthCheck" : {
                          "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                          "type" : "object",
                          "properties" : {
                            "Path" : {
                              "type" : "string",
                              "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                            },
                            "UnhealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                            },
                            "Timeout" : {
                              "type" : "integer",
                              "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                            },
                            "CheckInterval" : {
                              "type" : "integer",
                              "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                            },
                            "Port" : {
                              "type" : "integer",
                              "description" : "The port number (between `1` and `65535`, both included)."
                            },
                            "HealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                            },
                            "Protocol" : {
                              "type" : "string",
                              "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the health check configuration."
                        },
                        "LoadBalancerType" : {
                          "type" : "string",
                          "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
                        },
                        "LoadBalancerName" : {
                          "type" : "string",
                          "description" : "The name of the load balancer."
                        },
                        "Subnets" : {
                          "type" : "array",
                          "description" : "The ID of the Subnet in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Listeners" : {
                          "type" : "array",
                          "description" : "The listeners for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyNames" : {
                                "type" : "array",
                                "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "BackendProtocol" : {
                                "type" : "string",
                                "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "LoadBalancerProtocol" : {
                                "type" : "string",
                                "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "BackendPort" : {
                                "type" : "integer",
                                "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                              },
                              "ServerCertificateId" : {
                                "type" : "string",
                                "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                              },
                              "LoadBalancerPort" : {
                                "type" : "integer",
                                "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the listener."
                          }
                        },
                        "SubregionNames" : {
                          "type" : "array",
                          "description" : "The ID of the Subregion in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "LoadBalancerStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "CookieExpirationPeriod" : {
                                "type" : "integer",
                                "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                              },
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The name of the stickiness policy."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the load balancer.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the load balancer."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateTags" : {
      "post" : {
        "tags" : [ "Tag" ],
        "operationId" : "CreateTags",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "ResourceIds", "Tags" ],
                "type" : "object",
                "properties" : {
                  "ResourceIds" : {
                    "type" : "array",
                    "description" : "One or more resource IDs.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "Tags" : {
                    "type" : "array",
                    "description" : "One or more tags to add to the specified resources.",
                    "items" : {
                      "required" : [ "Key", "Value" ],
                      "type" : "object",
                      "properties" : {
                        "Value" : {
                          "type" : "string",
                          "description" : "The value of the tag, between 0 and 255 characters."
                        },
                        "Key" : {
                          "type" : "string",
                          "description" : "The key of the tag, with a minimum of 1 character."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the tag."
                    }
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateLoadBalancerPolicy" : {
      "post" : {
        "tags" : [ "LoadBalancerPolicy" ],
        "operationId" : "CreateLoadBalancerPolicy",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "LoadBalancerName", "PolicyName", "PolicyType" ],
                "type" : "object",
                "properties" : {
                  "CookieExpirationPeriod" : {
                    "type" : "integer",
                    "description" : "The lifetime of the cookie, in seconds. If not specified, the default value of this parameter is 1, which means that the sticky session lasts for the duration of the browser session."
                  },
                  "PolicyType" : {
                    "type" : "string",
                    "description" : "The type of stickiness policy you want to create: `app` or `load_balancer`."
                  },
                  "LoadBalancerName" : {
                    "type" : "string",
                    "description" : "The name of the load balancer for which you want to create a policy."
                  },
                  "PolicyName" : {
                    "type" : "string",
                    "description" : "The name of the policy. This name must be unique and consist of alphanumeric characters and dashes (-)."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "CookieName" : {
                    "type" : "string",
                    "description" : "The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "LoadBalancer" : {
                      "type" : "object",
                      "properties" : {
                        "AccessLog" : {
                          "type" : "object",
                          "properties" : {
                            "OsuBucketPrefix" : {
                              "type" : "string",
                              "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                            },
                            "IsEnabled" : {
                              "type" : "boolean",
                              "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                            },
                            "PublicationInterval" : {
                              "type" : "integer",
                              "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                            },
                            "OsuBucketName" : {
                              "type" : "string",
                              "description" : "The name of the OOS bucket for the access logs."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about access logs."
                        },
                        "SecurityGroups" : {
                          "type" : "array",
                          "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "BackendVmIds" : {
                          "type" : "array",
                          "description" : "One or more IDs of back-end VMs for the load balancer.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net for the load balancer."
                        },
                        "DnsName" : {
                          "type" : "string",
                          "description" : "The DNS name of the load balancer."
                        },
                        "ApplicationStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The stickiness policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                              },
                              "CookieName" : {
                                "type" : "string",
                                "description" : "The name of the application cookie used for stickiness."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "SourceSecurityGroup" : {
                          "type" : "object",
                          "properties" : {
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            },
                            "SecurityGroupAccountId" : {
                              "type" : "string",
                              "description" : "The account ID of the owner of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
                        },
                        "HealthCheck" : {
                          "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                          "type" : "object",
                          "properties" : {
                            "Path" : {
                              "type" : "string",
                              "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                            },
                            "UnhealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                            },
                            "Timeout" : {
                              "type" : "integer",
                              "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                            },
                            "CheckInterval" : {
                              "type" : "integer",
                              "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                            },
                            "Port" : {
                              "type" : "integer",
                              "description" : "The port number (between `1` and `65535`, both included)."
                            },
                            "HealthyThreshold" : {
                              "type" : "integer",
                              "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                            },
                            "Protocol" : {
                              "type" : "string",
                              "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the health check configuration."
                        },
                        "LoadBalancerType" : {
                          "type" : "string",
                          "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
                        },
                        "LoadBalancerName" : {
                          "type" : "string",
                          "description" : "The name of the load balancer."
                        },
                        "Subnets" : {
                          "type" : "array",
                          "description" : "The ID of the Subnet in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Listeners" : {
                          "type" : "array",
                          "description" : "The listeners for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "PolicyNames" : {
                                "type" : "array",
                                "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "BackendProtocol" : {
                                "type" : "string",
                                "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "LoadBalancerProtocol" : {
                                "type" : "string",
                                "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                              },
                              "BackendPort" : {
                                "type" : "integer",
                                "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                              },
                              "ServerCertificateId" : {
                                "type" : "string",
                                "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                              },
                              "LoadBalancerPort" : {
                                "type" : "integer",
                                "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the listener."
                          }
                        },
                        "SubregionNames" : {
                          "type" : "array",
                          "description" : "The ID of the Subregion in which the load balancer was created.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "LoadBalancerStickyCookiePolicies" : {
                          "type" : "array",
                          "description" : "The policies defined for the load balancer.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "CookieExpirationPeriod" : {
                                "type" : "integer",
                                "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                              },
                              "PolicyName" : {
                                "type" : "string",
                                "description" : "The name of the stickiness policy."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the stickiness policy."
                          }
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the load balancer.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the load balancer."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/ReadApiAccessPolicy" : {
      "post" : {
        "tags" : [ "ApiAccessPolicy" ],
        "operationId" : "ReadApiAccessPolicy",
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ApiAccessPolicy" : {
                      "type" : "object",
                      "properties" : {
                        "RequireTrustedEnv" : {
                          "type" : "boolean",
                          "description" : "If true, a trusted session is activated, allowing you to bypass Certificate Authorities (CAs) enforcement. For more information, see the `ApiKeyAuth` authentication scheme in the [Authentication](#authentication) section."
                        },
                        "MaxAccessKeyExpirationSeconds" : {
                          "type" : "integer",
                          "description" : "The maximum possible lifetime for your access keys, in seconds. If `0`, your access keys can have unlimited lifetimes.",
                          "format" : "int64"
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the API access policy."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/CreateSnapshotExportTask" : {
      "post" : {
        "tags" : [ "Snapshot" ],
        "operationId" : "CreateSnapshotExportTask",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "OsuExport", "SnapshotId" ],
                "type" : "object",
                "properties" : {
                  "SnapshotId" : {
                    "type" : "string",
                    "description" : "The ID of the snapshot to export."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  },
                  "OsuExport" : {
                    "required" : [ "DiskImageFormat", "OsuBucket" ],
                    "type" : "object",
                    "properties" : {
                      "OsuManifestUrl" : {
                        "type" : "string",
                        "description" : "The URL of the manifest file."
                      },
                      "OsuApiKey" : {
                        "type" : "object",
                        "properties" : {
                          "SecretKey" : {
                            "type" : "string",
                            "description" : "The secret key of the OOS account that enables you to access the bucket."
                          },
                          "ApiKeyId" : {
                            "type" : "string",
                            "description" : "The API key of the OOS account that enables you to access the bucket."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the OOS API key."
                      },
                      "OsuBucket" : {
                        "type" : "string",
                        "description" : "The name of the OOS bucket where you want to export the object."
                      },
                      "OsuPrefix" : {
                        "type" : "string",
                        "description" : "The prefix for the key of the OOS object."
                      },
                      "DiskImageFormat" : {
                        "type" : "string",
                        "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the OOS export task to create."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "SnapshotExportTask" : {
                      "type" : "object",
                      "properties" : {
                        "SnapshotId" : {
                          "type" : "string",
                          "description" : "The ID of the snapshot to be exported."
                        },
                        "Comment" : {
                          "type" : "string",
                          "description" : "If the snapshot export task fails, an error message appears."
                        },
                        "Progress" : {
                          "type" : "integer",
                          "description" : "The progress of the snapshot export task, as a percentage."
                        },
                        "TaskId" : {
                          "type" : "string",
                          "description" : "The ID of the snapshot export task."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the snapshot export task (`pending` \\| `active` \\| `completed` \\| `failed`)."
                        },
                        "OsuExport" : {
                          "required" : [ "DiskImageFormat", "OsuBucket" ],
                          "type" : "object",
                          "properties" : {
                            "OsuBucket" : {
                              "type" : "string",
                              "description" : "The name of the OOS bucket the snapshot is exported to."
                            },
                            "OsuPrefix" : {
                              "type" : "string",
                              "description" : "The prefix for the key of the OOS object corresponding to the snapshot."
                            },
                            "DiskImageFormat" : {
                              "type" : "string",
                              "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the snapshot export task."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the snapshot export task.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the snapshot export task."
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    },
    "/UpdateNet" : {
      "post" : {
        "tags" : [ "Net" ],
        "operationId" : "UpdateNet",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "DhcpOptionsSetId", "NetId" ],
                "type" : "object",
                "properties" : {
                  "DhcpOptionsSetId" : {
                    "type" : "string",
                    "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
                  },
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the Net."
                  },
                  "DryRun" : {
                    "type" : "boolean",
                    "description" : "If true, checks whether you have the required permissions to perform the action."
                  }
                },
                "additionalProperties" : false
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The HTTP 200 response (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    },
                    "Net" : {
                      "type" : "object",
                      "properties" : {
                        "Tenancy" : {
                          "type" : "string",
                          "description" : "The VM tenancy in a Net."
                        },
                        "IpRange" : {
                          "type" : "string",
                          "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
                        },
                        "DhcpOptionsSetId" : {
                          "type" : "string",
                          "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
                        },
                        "NetId" : {
                          "type" : "string",
                          "description" : "The ID of the Net."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the Net (`pending` \\| `available`)."
                        },
                        "Tags" : {
                          "type" : "array",
                          "description" : "One or more tags associated with the Net.",
                          "items" : {
                            "required" : [ "Key", "Value" ],
                            "type" : "object",
                            "properties" : {
                              "Value" : {
                                "type" : "string",
                                "description" : "The value of the tag, between 0 and 255 characters."
                              },
                              "Key" : {
                                "type" : "string",
                                "description" : "The key of the tag, with a minimum of 1 character."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the tag."
                          }
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the Net."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "400" : {
            "description" : "The HTTP 400 response (Bad Request).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "401" : {
            "description" : "The HTTP 401 response (Unauthorized).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          },
          "500" : {
            "description" : "The HTTP 500 response (Internal Server Error).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "Errors" : {
                      "type" : "array",
                      "description" : "One or more errors.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "Type" : {
                            "type" : "string",
                            "description" : "The type of the error."
                          },
                          "Details" : {
                            "type" : "string",
                            "description" : "The details of the error."
                          },
                          "Code" : {
                            "type" : "string",
                            "description" : "The code of the error."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the errors."
                      }
                    },
                    "ResponseContext" : {
                      "type" : "object",
                      "properties" : {
                        "RequestId" : {
                          "type" : "string",
                          "description" : "The ID of the request."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the context of the response."
                    }
                  },
                  "additionalProperties" : false
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "NetAccessPoint" : {
        "type" : "object",
        "properties" : {
          "NetAccessPointId" : {
            "type" : "string",
            "description" : "The ID of the Net access point."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net with which the Net access point is associated."
          },
          "RouteTableIds" : {
            "type" : "array",
            "description" : "The ID of the route tables associated with the Net access point.",
            "items" : {
              "type" : "string"
            }
          },
          "ServiceName" : {
            "type" : "string",
            "description" : "The name of the service with which the Net access point is associated."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the Net access point (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the Net access point.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the Net access point."
      },
      "UpdateListenerRuleResponse" : {
        "type" : "object",
        "properties" : {
          "ListenerRule" : {
            "type" : "object",
            "properties" : {
              "Action" : {
                "type" : "string",
                "description" : "The type of action for the rule (always `forward`)."
              },
              "HostNamePattern" : {
                "type" : "string",
                "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]."
              },
              "ListenerId" : {
                "type" : "integer",
                "description" : "The ID of the listener."
              },
              "ListenerRuleId" : {
                "type" : "integer",
                "description" : "The ID of the listener rule."
              },
              "ListenerRuleName" : {
                "type" : "string",
                "description" : "A human-readable name for the listener rule."
              },
              "PathPattern" : {
                "type" : "string",
                "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
              },
              "Priority" : {
                "type" : "integer",
                "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
              },
              "VmIds" : {
                "type" : "array",
                "description" : "The IDs of the backend VMs.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the listener rule."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LinkPublicIp" : {
        "type" : "object",
        "properties" : {
          "LinkPublicIpId" : {
            "type" : "string",
            "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
          },
          "PublicDnsName" : {
            "type" : "string",
            "description" : "The name of the public DNS."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The External IP address (EIP) associated with the NIC."
          },
          "PublicIpAccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the EIP."
          },
          "PublicIpId" : {
            "type" : "string",
            "description" : "The allocation ID of the EIP."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the EIP association."
      },
      "ReadLoadBalancersResponse" : {
        "type" : "object",
        "properties" : {
          "LoadBalancers" : {
            "type" : "array",
            "description" : "Information about one or more load balancers.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccessLog" : {
                  "type" : "object",
                  "properties" : {
                    "IsEnabled" : {
                      "type" : "boolean",
                      "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                    },
                    "OsuBucketName" : {
                      "type" : "string",
                      "description" : "The name of the OOS bucket for the access logs."
                    },
                    "OsuBucketPrefix" : {
                      "type" : "string",
                      "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                    },
                    "PublicationInterval" : {
                      "type" : "integer",
                      "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about access logs."
                },
                "ApplicationStickyCookiePolicies" : {
                  "type" : "array",
                  "description" : "The stickiness policies defined for the load balancer.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "CookieName" : {
                        "type" : "string",
                        "description" : "The name of the application cookie used for stickiness."
                      },
                      "PolicyName" : {
                        "type" : "string",
                        "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the stickiness policy."
                  }
                },
                "BackendVmIds" : {
                  "type" : "array",
                  "description" : "One or more IDs of back-end VMs for the load balancer.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "DnsName" : {
                  "type" : "string",
                  "description" : "The DNS name of the load balancer."
                },
                "HealthCheck" : {
                  "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                  "type" : "object",
                  "properties" : {
                    "CheckInterval" : {
                      "type" : "integer",
                      "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                    },
                    "HealthyThreshold" : {
                      "type" : "integer",
                      "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                    },
                    "Path" : {
                      "type" : "string",
                      "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                    },
                    "Port" : {
                      "type" : "integer",
                      "description" : "The port number (between `1` and `65535`, both included)."
                    },
                    "Protocol" : {
                      "type" : "string",
                      "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "Timeout" : {
                      "type" : "integer",
                      "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                    },
                    "UnhealthyThreshold" : {
                      "type" : "integer",
                      "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the health check configuration."
                },
                "Listeners" : {
                  "type" : "array",
                  "description" : "The listeners for the load balancer.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "BackendPort" : {
                        "type" : "integer",
                        "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                      },
                      "BackendProtocol" : {
                        "type" : "string",
                        "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                      },
                      "LoadBalancerPort" : {
                        "type" : "integer",
                        "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                      },
                      "LoadBalancerProtocol" : {
                        "type" : "string",
                        "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                      },
                      "PolicyNames" : {
                        "type" : "array",
                        "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ServerCertificateId" : {
                        "type" : "string",
                        "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the listener."
                  }
                },
                "LoadBalancerName" : {
                  "type" : "string",
                  "description" : "The name of the load balancer."
                },
                "LoadBalancerStickyCookiePolicies" : {
                  "type" : "array",
                  "description" : "The policies defined for the load balancer.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "CookieExpirationPeriod" : {
                        "type" : "integer",
                        "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                      },
                      "PolicyName" : {
                        "type" : "string",
                        "description" : "The name of the stickiness policy."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the stickiness policy."
                  }
                },
                "LoadBalancerType" : {
                  "type" : "string",
                  "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net for the load balancer."
                },
                "SecurityGroups" : {
                  "type" : "array",
                  "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "SourceSecurityGroup" : {
                  "type" : "object",
                  "properties" : {
                    "SecurityGroupAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the security group."
                    },
                    "SecurityGroupName" : {
                      "type" : "string",
                      "description" : "The name of the security group."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
                },
                "Subnets" : {
                  "type" : "array",
                  "description" : "The ID of the Subnet in which the load balancer was created.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "SubregionNames" : {
                  "type" : "array",
                  "description" : "The ID of the Subregion in which the load balancer was created.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the load balancer.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the load balancer."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadSnapshotExportTasksResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "SnapshotExportTasks" : {
            "type" : "array",
            "description" : "Information about one or more snapshot export tasks.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Comment" : {
                  "type" : "string",
                  "description" : "If the snapshot export task fails, an error message appears."
                },
                "OsuExport" : {
                  "required" : [ "DiskImageFormat", "OsuBucket" ],
                  "type" : "object",
                  "properties" : {
                    "DiskImageFormat" : {
                      "type" : "string",
                      "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                    },
                    "OsuBucket" : {
                      "type" : "string",
                      "description" : "The name of the OOS bucket the snapshot is exported to."
                    },
                    "OsuPrefix" : {
                      "type" : "string",
                      "description" : "The prefix for the key of the OOS object corresponding to the snapshot."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the snapshot export task."
                },
                "Progress" : {
                  "type" : "integer",
                  "description" : "The progress of the snapshot export task, as a percentage."
                },
                "SnapshotId" : {
                  "type" : "string",
                  "description" : "The ID of the snapshot to be exported."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the snapshot export task (`pending` \\| `active` \\| `completed` \\| `failed`)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the snapshot export task.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "TaskId" : {
                  "type" : "string",
                  "description" : "The ID of the snapshot export task."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the snapshot export task."
            }
          }
        },
        "additionalProperties" : false
      },
      "UnlinkFlexibleGpuResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "HealthCheck" : {
        "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
        "type" : "object",
        "properties" : {
          "CheckInterval" : {
            "type" : "integer",
            "description" : "The number of seconds between two pings (between `5` and `600` both included)."
          },
          "HealthyThreshold" : {
            "type" : "integer",
            "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
          },
          "Path" : {
            "type" : "string",
            "description" : "If you use the HTTP or HTTPS protocols, the ping path."
          },
          "Port" : {
            "type" : "integer",
            "description" : "The port number (between `1` and `65535`, both included)."
          },
          "Protocol" : {
            "type" : "string",
            "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
          },
          "Timeout" : {
            "type" : "integer",
            "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
          },
          "UnhealthyThreshold" : {
            "type" : "integer",
            "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the health check configuration."
      },
      "ListenerRuleForCreation" : {
        "required" : [ "ListenerRuleName", "Priority" ],
        "type" : "object",
        "properties" : {
          "Action" : {
            "type" : "string",
            "description" : "The type of action for the rule (always `forward`)."
          },
          "HostNamePattern" : {
            "type" : "string",
            "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]. "
          },
          "ListenerRuleName" : {
            "type" : "string",
            "description" : "A human-readable name for the listener rule."
          },
          "PathPattern" : {
            "type" : "string",
            "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
          },
          "Priority" : {
            "type" : "integer",
            "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the listener rule."
      },
      "DeleteVirtualGatewayRequest" : {
        "required" : [ "VirtualGatewayId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the virtual gateway you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "DirectLinkInterface" : {
        "required" : [ "BgpAsn", "DirectLinkInterfaceName", "VirtualGatewayId", "Vlan" ],
        "type" : "object",
        "properties" : {
          "BgpAsn" : {
            "type" : "integer",
            "description" : "The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface."
          },
          "BgpKey" : {
            "type" : "string",
            "description" : "The BGP authentication key."
          },
          "ClientPrivateIp" : {
            "type" : "string",
            "description" : "The IP address on the customer's side of the DirectLink interface."
          },
          "DirectLinkInterfaceName" : {
            "type" : "string",
            "description" : "The name of the DirectLink interface."
          },
          "OutscalePrivateIp" : {
            "type" : "string",
            "description" : "The IP address on the OUTSCALE side of the DirectLink interface."
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the target virtual gateway."
          },
          "Vlan" : {
            "type" : "integer",
            "description" : "The VLAN number associated with the DirectLink interface."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the DirectLink interface."
      },
      "LinkPublicIpLightForVm" : {
        "type" : "object",
        "properties" : {
          "PublicDnsName" : {
            "type" : "string",
            "description" : "The name of the public DNS."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The External IP address (EIP) associated with the NIC."
          },
          "PublicIpAccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the EIP."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the EIP associated with the NIC."
      },
      "BlockDeviceMappingCreated" : {
        "type" : "object",
        "properties" : {
          "Bsu" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
              },
              "LinkDate" : {
                "type" : "string",
                "description" : "The time and date of attachment of the volume to the VM.",
                "format" : "date"
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the volume."
              },
              "VolumeId" : {
                "type" : "string",
                "description" : "The ID of the volume."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the created BSU volume."
          },
          "DeviceName" : {
            "type" : "string",
            "description" : "The name of the device."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the created block device mapping."
      },
      "DeleteLoadBalancerListenersRequest" : {
        "required" : [ "LoadBalancerName", "LoadBalancerPorts" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer for which you want to delete listeners."
          },
          "LoadBalancerPorts" : {
            "type" : "array",
            "description" : "One or more port numbers of the listeners you want to delete.",
            "items" : {
              "type" : "integer"
            }
          }
        },
        "additionalProperties" : false
      },
      "BsuToCreate" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
          },
          "Iops" : {
            "type" : "integer",
            "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
          },
          "SnapshotId" : {
            "type" : "string",
            "description" : "The ID of the snapshot used to create the volume."
          },
          "VolumeSize" : {
            "type" : "integer",
            "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
          },
          "VolumeType" : {
            "type" : "string",
            "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the BSU volume to create."
      },
      "DeleteSecurityGroupRuleRequest" : {
        "required" : [ "Flow", "SecurityGroupId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Flow" : {
            "type" : "string",
            "description" : "The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only."
          },
          "FromPortRange" : {
            "type" : "integer",
            "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
          },
          "IpProtocol" : {
            "type" : "string",
            "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
          },
          "IpRange" : {
            "type" : "string",
            "description" : "The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16)."
          },
          "Rules" : {
            "type" : "array",
            "description" : "One or more rules you want to delete from the security group.",
            "items" : {
              "type" : "object",
              "properties" : {
                "FromPortRange" : {
                  "type" : "integer",
                  "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                },
                "IpProtocol" : {
                  "type" : "string",
                  "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                },
                "IpRanges" : {
                  "type" : "array",
                  "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "SecurityGroupsMembers" : {
                  "type" : "array",
                  "description" : "Information about one or more members of a security group.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "AccountId" : {
                        "type" : "string",
                        "description" : "The account ID of a user."
                      },
                      "SecurityGroupId" : {
                        "type" : "string",
                        "description" : "The ID of the security group."
                      },
                      "SecurityGroupName" : {
                        "type" : "string",
                        "description" : "The name of the security group."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the member of a security group."
                  }
                },
                "ServiceIds" : {
                  "type" : "array",
                  "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "ToPortRange" : {
                  "type" : "integer",
                  "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the security group rule."
            }
          },
          "SecurityGroupAccountIdToUnlink" : {
            "type" : "string",
            "description" : "The account ID of the owner of the security group you want to delete a rule from."
          },
          "SecurityGroupId" : {
            "type" : "string",
            "description" : "The ID of the security group you want to delete a rule from."
          },
          "SecurityGroupNameToUnlink" : {
            "type" : "string",
            "description" : "The ID of the source security group. If you are in the Public Cloud, you can also specify the name of the source security group."
          },
          "ToPortRange" : {
            "type" : "integer",
            "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
          }
        },
        "additionalProperties" : false
      },
      "CreateVirtualGatewayRequest" : {
        "required" : [ "ConnectionType" ],
        "type" : "object",
        "properties" : {
          "ConnectionType" : {
            "type" : "string",
            "description" : "The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "ReadImageExportTasksRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "TaskIds" : {
                "type" : "array",
                "description" : "The IDs of the export tasks.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "CreateNetPeeringResponse" : {
        "type" : "object",
        "properties" : {
          "NetPeering" : {
            "type" : "object",
            "properties" : {
              "AccepterNet" : {
                "type" : "object",
                "properties" : {
                  "AccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the accepter Net."
                  },
                  "IpRange" : {
                    "type" : "string",
                    "description" : "The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16)."
                  },
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the accepter Net."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the accepter Net."
              },
              "NetPeeringId" : {
                "type" : "string",
                "description" : "The ID of the Net peering connection."
              },
              "SourceNet" : {
                "type" : "object",
                "properties" : {
                  "AccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the source Net."
                  },
                  "IpRange" : {
                    "type" : "string",
                    "description" : "The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16)."
                  },
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the source Net."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the source Net."
              },
              "State" : {
                "type" : "object",
                "properties" : {
                  "Message" : {
                    "type" : "string",
                    "description" : "Additional information about the state of the Net peering connection."
                  },
                  "Name" : {
                    "type" : "string",
                    "description" : "The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the state of the Net peering connection."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Net peering connection.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Net peering connection."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateApiAccessPolicyResponse" : {
        "type" : "object",
        "properties" : {
          "ApiAccessPolicy" : {
            "type" : "object",
            "properties" : {
              "MaxAccessKeyExpirationSeconds" : {
                "type" : "integer",
                "description" : "The maximum possible lifetime for your access keys, in seconds. If `0`, your access keys can have unlimited lifetimes.",
                "format" : "int64"
              },
              "RequireTrustedEnv" : {
                "type" : "boolean",
                "description" : "If true, a trusted session is activated, allowing you to bypass Certificate Authorities (CAs) enforcement. For more information, see the `ApiKeyAuth` authentication scheme in the [Authentication](#authentication) section."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the API access policy."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateVolumeResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Volume" : {
            "type" : "object",
            "properties" : {
              "Iops" : {
                "type" : "integer",
                "description" : "The number of I/O operations per second (IOPS):<br />\n- For `io1` volumes, the number of provisioned IOPS<br />\n- For `gp2` volumes, the baseline performance of the volume"
              },
              "LinkedVolumes" : {
                "type" : "array",
                "description" : "Information about your volume attachment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                    },
                    "DeviceName" : {
                      "type" : "string",
                      "description" : "The name of the device."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`)."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of the VM."
                    },
                    "VolumeId" : {
                      "type" : "string",
                      "description" : "The ID of the volume."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about volume attachment."
                }
              },
              "Size" : {
                "type" : "integer",
                "description" : "The size of the volume, in gibibytes (GiB)."
              },
              "SnapshotId" : {
                "type" : "string",
                "description" : "The snapshot from which the volume was created."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the volume (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`)."
              },
              "SubregionName" : {
                "type" : "string",
                "description" : "The Subregion in which the volume was created."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the volume.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "VolumeId" : {
                "type" : "string",
                "description" : "The ID of the volume."
              },
              "VolumeType" : {
                "type" : "string",
                "description" : "The type of the volume (`standard` \\| `gp2` \\| `io1`)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the volume."
          }
        },
        "additionalProperties" : false
      },
      "RebootVmsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadConsoleOutputRequest" : {
        "required" : [ "VmId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          }
        },
        "additionalProperties" : false
      },
      "CreateDirectLinkInterfaceRequest" : {
        "required" : [ "DirectLinkId", "DirectLinkInterface" ],
        "type" : "object",
        "properties" : {
          "DirectLinkId" : {
            "type" : "string",
            "description" : "The ID of the existing DirectLink for which you want to create the DirectLink interface."
          },
          "DirectLinkInterface" : {
            "required" : [ "BgpAsn", "DirectLinkInterfaceName", "VirtualGatewayId", "Vlan" ],
            "type" : "object",
            "properties" : {
              "BgpAsn" : {
                "type" : "integer",
                "description" : "The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface."
              },
              "BgpKey" : {
                "type" : "string",
                "description" : "The BGP authentication key."
              },
              "ClientPrivateIp" : {
                "type" : "string",
                "description" : "The IP address on the customer's side of the DirectLink interface."
              },
              "DirectLinkInterfaceName" : {
                "type" : "string",
                "description" : "The name of the DirectLink interface."
              },
              "OutscalePrivateIp" : {
                "type" : "string",
                "description" : "The IP address on the OUTSCALE side of the DirectLink interface."
              },
              "VirtualGatewayId" : {
                "type" : "string",
                "description" : "The ID of the target virtual gateway."
              },
              "Vlan" : {
                "type" : "integer",
                "description" : "The VLAN number associated with the DirectLink interface."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the DirectLink interface."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "DeleteVpnConnectionRouteRequest" : {
        "required" : [ "DestinationIpRange", "VpnConnectionId" ],
        "type" : "object",
        "properties" : {
          "DestinationIpRange" : {
            "type" : "string",
            "description" : "The network prefix of the route to delete, in CIDR notation (for example, 10.12.0.0/16)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VpnConnectionId" : {
            "type" : "string",
            "description" : "The ID of the target VPN connection of the static route to delete."
          }
        },
        "additionalProperties" : false
      },
      "BsuCreated" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
          },
          "LinkDate" : {
            "type" : "string",
            "description" : "The time and date of attachment of the volume to the VM.",
            "format" : "date"
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the volume."
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the created BSU volume."
      },
      "DeleteCaRequest" : {
        "required" : [ "CaId" ],
        "type" : "object",
        "properties" : {
          "CaId" : {
            "type" : "string",
            "description" : "The ID of the CA you want to delete."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "RouteLight" : {
        "type" : "object",
        "properties" : {
          "DestinationIpRange" : {
            "type" : "string",
            "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
          },
          "RouteType" : {
            "type" : "string",
            "description" : "The type of route (always `static`)."
          },
          "State" : {
            "type" : "string",
            "description" : "The current state of the static route (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the route."
      },
      "DeleteAccessKeyRequest" : {
        "required" : [ "AccessKeyId" ],
        "type" : "object",
        "properties" : {
          "AccessKeyId" : {
            "type" : "string",
            "description" : "The ID of the access key you want to delete."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "UpdateNicRequest" : {
        "required" : [ "NicId" ],
        "type" : "object",
        "properties" : {
          "Description" : {
            "type" : "string",
            "description" : "A new description for the NIC."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LinkNic" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "By default or if set to false, the NIC is detached from the VM when the VM is terminated. If true, the NIC is deleted."
              },
              "LinkNicId" : {
                "type" : "string",
                "description" : "The ID of the NIC attachment."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the NIC attachment. If you are modifying the `DeleteOnVmDeletion` attribute, you must specify the ID of the NIC attachment."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC you want to modify."
          },
          "SecurityGroupIds" : {
            "type" : "array",
            "description" : "One or more IDs of security groups for the NIC.<br />\nYou must specify at least one group, even if you use the default security group in the Net.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "ReadRegionsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "CreateApiAccessRuleResponse" : {
        "type" : "object",
        "properties" : {
          "ApiAccessRule" : {
            "type" : "object",
            "properties" : {
              "ApiAccessRuleId" : {
                "type" : "string",
                "description" : " The ID of the API access rule."
              },
              "CaIds" : {
                "type" : "array",
                "description" : "One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.",
                "items" : {
                  "type" : "string"
                }
              },
              "Cns" : {
                "type" : "array",
                "description" : "One or more Client Certificate Common Names (CNs).",
                "items" : {
                  "type" : "string"
                }
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the API access rule."
              },
              "IpRanges" : {
                "type" : "array",
                "description" : "One or more IP ranges used for the API access rule, in CIDR notation (for example, 192.0.2.0/16).",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the API access rule."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateServerCertificateRequest" : {
        "required" : [ "Body", "Name", "PrivateKey" ],
        "type" : "object",
        "properties" : {
          "Body" : {
            "type" : "string",
            "description" : "The PEM-encoded X509 certificate."
          },
          "Chain" : {
            "type" : "string",
            "description" : "The PEM-encoded intermediate certification authorities."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Name" : {
            "type" : "string",
            "description" : "A unique name for the certificate. Constraints: 1-128 alphanumeric characters, pluses (+), equals (=), commas (,), periods (.), at signs (@), minuses (-), or underscores (_)."
          },
          "Path" : {
            "type" : "string",
            "description" : "The path to the server certificate, set to a slash (/) if not specified."
          },
          "PrivateKey" : {
            "type" : "string",
            "description" : "The PEM-encoded private key matching the certificate."
          }
        },
        "additionalProperties" : false
      },
      "ReadConsoleOutputResponse" : {
        "type" : "object",
        "properties" : {
          "ConsoleOutput" : {
            "type" : "string",
            "description" : "The Base64-encoded output of the console. If a command line tool is used, the output is decoded by the tool."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          }
        },
        "additionalProperties" : false
      },
      "DeleteNetResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadDirectLinkInterfacesResponse" : {
        "type" : "object",
        "properties" : {
          "DirectLinkInterfaces" : {
            "type" : "array",
            "description" : "Information about one or more DirectLink interfaces.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the DirectLink interface."
                },
                "BgpAsn" : {
                  "type" : "integer",
                  "description" : "The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface."
                },
                "BgpKey" : {
                  "type" : "string",
                  "description" : "The BGP authentication key."
                },
                "ClientPrivateIp" : {
                  "type" : "string",
                  "description" : "The IP address on the customer's side of the DirectLink interface."
                },
                "DirectLinkId" : {
                  "type" : "string",
                  "description" : "The ID of the DirectLink."
                },
                "DirectLinkInterfaceId" : {
                  "type" : "string",
                  "description" : "The ID of the DirectLink interface."
                },
                "DirectLinkInterfaceName" : {
                  "type" : "string",
                  "description" : "The name of the DirectLink interface."
                },
                "InterfaceType" : {
                  "type" : "string",
                  "description" : "The type of the DirectLink interface (always `private`)."
                },
                "Location" : {
                  "type" : "string",
                  "description" : "The datacenter where the DirectLink interface is located."
                },
                "OutscalePrivateIp" : {
                  "type" : "string",
                  "description" : "The IP address on the OUTSCALE side of the DirectLink interface."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the DirectLink interface (`pending` \\| `available` \\| `deleting` \\| `deleted` \\| `confirming` \\| `rejected` \\| `expired`)."
                },
                "VirtualGatewayId" : {
                  "type" : "string",
                  "description" : "The ID of the target virtual gateway."
                },
                "Vlan" : {
                  "type" : "integer",
                  "description" : "The VLAN number associated with the DirectLink interface."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the DirectLink interfaces."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FiltersKeypair" : {
        "type" : "object",
        "properties" : {
          "KeypairFingerprints" : {
            "type" : "array",
            "description" : "The fingerprints of the keypairs.",
            "items" : {
              "type" : "string"
            }
          },
          "KeypairNames" : {
            "type" : "array",
            "description" : "The names of the keypairs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadLoadBalancerTagsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Tags" : {
            "type" : "array",
            "description" : "Information about one or more load balancer tags.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag."
                },
                "LoadBalancerName" : {
                  "type" : "string",
                  "description" : "The name of the load balancer."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the load balancer tag."
            }
          }
        },
        "additionalProperties" : false
      },
      "VmStates" : {
        "type" : "object",
        "properties" : {
          "MaintenanceEvents" : {
            "type" : "array",
            "description" : "One or more scheduled events associated with the VM.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Code" : {
                  "type" : "string",
                  "description" : "The code of the event (`system-reboot` \\| `system-maintenance`)."
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the event."
                },
                "NotAfter" : {
                  "type" : "string",
                  "description" : "The latest scheduled end time for the event.",
                  "format" : "date"
                },
                "NotBefore" : {
                  "type" : "string",
                  "description" : "The earliest scheduled start time for the event.",
                  "format" : "date"
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the maintenance event."
            }
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The name of the Subregion of the VM."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          },
          "VmState" : {
            "type" : "string",
            "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the states of the VMs."
      },
      "SourceSecurityGroup" : {
        "type" : "object",
        "properties" : {
          "SecurityGroupAccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the security group."
          },
          "SecurityGroupName" : {
            "type" : "string",
            "description" : "The name of the security group."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
      },
      "CreateAccessKeyResponse" : {
        "type" : "object",
        "properties" : {
          "AccessKey" : {
            "type" : "object",
            "properties" : {
              "AccessKeyId" : {
                "type" : "string",
                "description" : "The ID of the secret access key."
              },
              "CreationDate" : {
                "type" : "string",
                "description" : "The date and time of creation of the secret access key.",
                "format" : "datetime"
              },
              "ExpirationDate" : {
                "type" : "string",
                "description" : "The date at which the access key expires.",
                "format" : "datetime"
              },
              "LastModificationDate" : {
                "type" : "string",
                "description" : "The date and time of the last modification of the secret access key.",
                "format" : "datetime"
              },
              "SecretKey" : {
                "type" : "string",
                "description" : "The secret access key that enables you to send requests."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the secret access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the secret access key."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadKeypairsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "KeypairFingerprints" : {
                "type" : "array",
                "description" : "The fingerprints of the keypairs.",
                "items" : {
                  "type" : "string"
                }
              },
              "KeypairNames" : {
                "type" : "array",
                "description" : "The names of the keypairs.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "DeleteApiAccessRuleRequest" : {
        "required" : [ "ApiAccessRuleId" ],
        "type" : "object",
        "properties" : {
          "ApiAccessRuleId" : {
            "type" : "string",
            "description" : "The ID of the API access rule you want to delete."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "CreateFlexibleGpuResponse" : {
        "type" : "object",
        "properties" : {
          "FlexibleGpu" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "If true, the fGPU is deleted when the VM is terminated."
              },
              "FlexibleGpuId" : {
                "type" : "string",
                "description" : "The ID of the fGPU."
              },
              "Generation" : {
                "type" : "string",
                "description" : "The compatible processor generation."
              },
              "ModelName" : {
                "type" : "string",
                "description" : "The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`)."
              },
              "SubregionName" : {
                "type" : "string",
                "description" : "The Subregion where the fGPU is located."
              },
              "VmId" : {
                "type" : "string",
                "description" : "The ID of the VM the fGPU is attached to, if any."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the flexible GPU (fGPU)."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "StateComment" : {
        "type" : "object",
        "properties" : {
          "StateCode" : {
            "type" : "string",
            "description" : "The code of the change of state."
          },
          "StateMessage" : {
            "type" : "string",
            "description" : "A message explaining the change of state."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the change of state."
      },
      "KeypairCreated" : {
        "type" : "object",
        "properties" : {
          "KeypairFingerprint" : {
            "type" : "string",
            "description" : "The MD5 public key fingerprint as specified in section 4 of RFC 4716."
          },
          "KeypairName" : {
            "type" : "string",
            "description" : "The name of the keypair."
          },
          "PrivateKey" : {
            "type" : "string",
            "description" : "The private key."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the created keypair."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "Errors" : {
            "type" : "array",
            "description" : "One or more errors.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Code" : {
                  "type" : "string",
                  "description" : "The code of the error."
                },
                "Details" : {
                  "type" : "string",
                  "description" : "The details of the error."
                },
                "Type" : {
                  "type" : "string",
                  "description" : "The type of the error."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the errors."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadCasResponse" : {
        "type" : "object",
        "properties" : {
          "Cas" : {
            "type" : "array",
            "description" : "Information about one or more CAs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "CaFingerprint" : {
                  "type" : "string",
                  "description" : "The fingerprint of the CA."
                },
                "CaId" : {
                  "type" : "string",
                  "description" : "The ID of the CA."
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the CA."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the Client Certificate Authority (CA)."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateDhcpOptionsRequest" : {
        "type" : "object",
        "properties" : {
          "DomainName" : {
            "type" : "string",
            "description" : "Specify a domain name (for example, MyCompany.com). You can specify only one domain name."
          },
          "DomainNameServers" : {
            "type" : "array",
            "description" : "The IP addresses of domain name servers. If no IP addresses are specified, the `OutscaleProvidedDNS` value is set by default.",
            "items" : {
              "type" : "string"
            }
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NtpServers" : {
            "type" : "array",
            "description" : "The IP addresses of the Network Time Protocol (NTP) servers.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "ResourceTag" : {
        "required" : [ "Key", "Value" ],
        "type" : "object",
        "properties" : {
          "Key" : {
            "type" : "string",
            "description" : "The key of the tag, with a minimum of 1 character."
          },
          "Value" : {
            "type" : "string",
            "description" : "The value of the tag, between 0 and 255 characters."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the tag."
      },
      "ReadLoadBalancerTagsRequest" : {
        "required" : [ "LoadBalancerNames" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerNames" : {
            "type" : "array",
            "description" : "One or more load balancer names.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "CreateLoadBalancerTagsRequest" : {
        "required" : [ "LoadBalancerNames", "Tags" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerNames" : {
            "type" : "array",
            "description" : "One or more load balancer names.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags to add to the specified load balancers.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false
      },
      "ReadVolumesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "CreationDates" : {
                "type" : "array",
                "description" : "The dates and times at which the volumes were created.",
                "items" : {
                  "type" : "string",
                  "format" : "date"
                }
              },
              "LinkVolumeDeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "Whether the volumes are deleted or not when terminating the VMs."
              },
              "LinkVolumeDeviceNames" : {
                "type" : "array",
                "description" : "The VM device names.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkVolumeLinkDates" : {
                "type" : "array",
                "description" : "The dates and times at which the volumes were created.",
                "items" : {
                  "type" : "string",
                  "format" : "date"
                }
              },
              "LinkVolumeLinkStates" : {
                "type" : "array",
                "description" : "The attachment states of the volumes (`attaching` \\| `detaching` \\| `attached` \\| `detached`).",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkVolumeVmIds" : {
                "type" : "array",
                "description" : "One or more IDs of VMs.",
                "items" : {
                  "type" : "string"
                }
              },
              "SnapshotIds" : {
                "type" : "array",
                "description" : "The snapshots from which the volumes were created.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The names of the Subregions in which the volumes were created.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the volumes.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the volumes.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the volumes, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              },
              "VolumeIds" : {
                "type" : "array",
                "description" : "The IDs of the volumes.",
                "items" : {
                  "type" : "string"
                }
              },
              "VolumeSizes" : {
                "type" : "array",
                "description" : "The sizes of the volumes, in gibibytes (GiB).",
                "items" : {
                  "type" : "integer"
                }
              },
              "VolumeStates" : {
                "type" : "array",
                "description" : "The states of the volumes (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`).",
                "items" : {
                  "type" : "string"
                }
              },
              "VolumeTypes" : {
                "type" : "array",
                "description" : "The types of the volumes (`standard` \\| `gp2` \\| `io1`).",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "CreateSecurityGroupRuleResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "SecurityGroup" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of a user that has been granted permission."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the security group."
              },
              "InboundRules" : {
                "type" : "array",
                "description" : "The inbound rules associated with the security group.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "FromPortRange" : {
                      "type" : "integer",
                      "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                    },
                    "IpProtocol" : {
                      "type" : "string",
                      "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                    },
                    "IpRanges" : {
                      "type" : "array",
                      "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "SecurityGroupsMembers" : {
                      "type" : "array",
                      "description" : "Information about one or more members of a security group.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of a user."
                          },
                          "SecurityGroupId" : {
                            "type" : "string",
                            "description" : "The ID of the security group."
                          },
                          "SecurityGroupName" : {
                            "type" : "string",
                            "description" : "The name of the security group."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the member of a security group."
                      }
                    },
                    "ServiceIds" : {
                      "type" : "array",
                      "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ToPortRange" : {
                      "type" : "integer",
                      "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group rule."
                }
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the security group."
              },
              "OutboundRules" : {
                "type" : "array",
                "description" : "The outbound rules associated with the security group.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "FromPortRange" : {
                      "type" : "integer",
                      "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                    },
                    "IpProtocol" : {
                      "type" : "string",
                      "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                    },
                    "IpRanges" : {
                      "type" : "array",
                      "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "SecurityGroupsMembers" : {
                      "type" : "array",
                      "description" : "Information about one or more members of a security group.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of a user."
                          },
                          "SecurityGroupId" : {
                            "type" : "string",
                            "description" : "The ID of the security group."
                          },
                          "SecurityGroupName" : {
                            "type" : "string",
                            "description" : "The name of the security group."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the member of a security group."
                      }
                    },
                    "ServiceIds" : {
                      "type" : "array",
                      "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ToPortRange" : {
                      "type" : "integer",
                      "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group rule."
                }
              },
              "SecurityGroupId" : {
                "type" : "string",
                "description" : "The ID of the security group."
              },
              "SecurityGroupName" : {
                "type" : "string",
                "description" : "The name of the security group."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the security group.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the security group."
          }
        },
        "additionalProperties" : false
      },
      "UpdateApiAccessPolicyRequest" : {
        "required" : [ "MaxAccessKeyExpirationSeconds", "RequireTrustedEnv" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "MaxAccessKeyExpirationSeconds" : {
            "type" : "integer",
            "description" : "The maximum possible lifetime for your access keys, in seconds (between `0` and `3153600000`, both included). By default or if set to `O`, your access keys can have unlimited lifetimes. Otherwise, all your access keys must have an expiration date. This value must be greater than the remaining lifetime of each access key of your account.",
            "format" : "int64"
          },
          "RequireTrustedEnv" : {
            "type" : "boolean",
            "description" : "If true, a trusted session is activated, provided that you specify the `MaxAccessKeyExpirationSeconds` parameter with a value greater than `0`."
          }
        },
        "additionalProperties" : false
      },
      "CreateInternetServiceRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "Ca" : {
        "type" : "object",
        "properties" : {
          "CaFingerprint" : {
            "type" : "string",
            "description" : "The fingerprint of the CA."
          },
          "CaId" : {
            "type" : "string",
            "description" : "The ID of the CA."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the CA."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the Client Certificate Authority (CA)."
      },
      "DeleteVolumeRequest" : {
        "required" : [ "VolumeId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "UpdateNicResponse" : {
        "type" : "object",
        "properties" : {
          "Nic" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the NIC."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the NIC."
              },
              "IsSourceDestChecked" : {
                "type" : "boolean",
                "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
              },
              "LinkNic" : {
                "type" : "object",
                "properties" : {
                  "DeleteOnVmDeletion" : {
                    "type" : "boolean",
                    "description" : "If true, the NIC is deleted when the VM is terminated."
                  },
                  "DeviceNumber" : {
                    "type" : "integer",
                    "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                  },
                  "LinkNicId" : {
                    "type" : "string",
                    "description" : "The ID of the NIC to attach."
                  },
                  "State" : {
                    "type" : "string",
                    "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                  },
                  "VmAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the VM."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the NIC attachment."
              },
              "LinkPublicIp" : {
                "type" : "object",
                "properties" : {
                  "LinkPublicIpId" : {
                    "type" : "string",
                    "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                  },
                  "PublicDnsName" : {
                    "type" : "string",
                    "description" : "The name of the public DNS."
                  },
                  "PublicIp" : {
                    "type" : "string",
                    "description" : "The External IP address (EIP) associated with the NIC."
                  },
                  "PublicIpAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the EIP."
                  },
                  "PublicIpId" : {
                    "type" : "string",
                    "description" : "The allocation ID of the EIP."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the EIP association."
              },
              "MacAddress" : {
                "type" : "string",
                "description" : "The Media Access Control (MAC) address of the NIC."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the NIC."
              },
              "NicId" : {
                "type" : "string",
                "description" : "The ID of the NIC."
              },
              "PrivateDnsName" : {
                "type" : "string",
                "description" : "The name of the private DNS."
              },
              "PrivateIps" : {
                "type" : "array",
                "description" : "The private IP addresses of the NIC.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "IsPrimary" : {
                      "type" : "boolean",
                      "description" : "If true, the IP address is the primary private IP address of the NIC."
                    },
                    "LinkPublicIp" : {
                      "type" : "object",
                      "properties" : {
                        "LinkPublicIpId" : {
                          "type" : "string",
                          "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                        },
                        "PublicDnsName" : {
                          "type" : "string",
                          "description" : "The name of the public DNS."
                        },
                        "PublicIp" : {
                          "type" : "string",
                          "description" : "The External IP address (EIP) associated with the NIC."
                        },
                        "PublicIpAccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the EIP."
                        },
                        "PublicIpId" : {
                          "type" : "string",
                          "description" : "The allocation ID of the EIP."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the EIP association."
                    },
                    "PrivateDnsName" : {
                      "type" : "string",
                      "description" : "The name of the private DNS."
                    },
                    "PrivateIp" : {
                      "type" : "string",
                      "description" : "The private IP address of the NIC."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the private IP."
                }
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more IDs of security groups for the NIC.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "SecurityGroupId" : {
                      "type" : "string",
                      "description" : "The ID of the security group."
                    },
                    "SecurityGroupName" : {
                      "type" : "string",
                      "description" : "The name of the security group."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group."
                }
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
              },
              "SubnetId" : {
                "type" : "string",
                "description" : "The ID of the Subnet."
              },
              "SubregionName" : {
                "type" : "string",
                "description" : "The Subregion in which the NIC is located."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the NIC.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the NIC."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateCaResponse" : {
        "type" : "object",
        "properties" : {
          "Ca" : {
            "type" : "object",
            "properties" : {
              "CaFingerprint" : {
                "type" : "string",
                "description" : "The fingerprint of the CA."
              },
              "CaId" : {
                "type" : "string",
                "description" : "The ID of the CA."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the CA."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Client Certificate Authority (CA)."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteSecurityGroupRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "SecurityGroupId" : {
            "type" : "string",
            "description" : "The ID of the security group you want to delete."
          },
          "SecurityGroupName" : {
            "type" : "string",
            "description" : "The name of the security group."
          }
        },
        "additionalProperties" : false
      },
      "ReadPublicIpRangesResponse" : {
        "type" : "object",
        "properties" : {
          "PublicIps" : {
            "type" : "array",
            "description" : "The list of public IPv4 addresses used in the Region, in CIDR notation.",
            "items" : {
              "type" : "string"
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateLoadBalancerRequest" : {
        "required" : [ "Listeners", "LoadBalancerName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Listeners" : {
            "type" : "array",
            "description" : "One or more listeners to create.",
            "items" : {
              "required" : [ "BackendPort", "LoadBalancerPort", "LoadBalancerProtocol" ],
              "type" : "object",
              "properties" : {
                "BackendPort" : {
                  "type" : "integer",
                  "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                },
                "BackendProtocol" : {
                  "type" : "string",
                  "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                },
                "LoadBalancerPort" : {
                  "type" : "integer",
                  "description" : "The port on which the load balancer is listening (between `1` and `65535`, both included)."
                },
                "LoadBalancerProtocol" : {
                  "type" : "string",
                  "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                },
                "ServerCertificateId" : {
                  "type" : "string",
                  "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the listener to create."
            }
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The unique name of the load balancer (32 alphanumeric or hyphen characters maximum, but cannot start or end with a hyphen)."
          },
          "LoadBalancerType" : {
            "type" : "string",
            "description" : "The type of load balancer: `internet-facing` or `internal`. Use this parameter only for load balancers in a Net."
          },
          "SecurityGroups" : {
            "type" : "array",
            "description" : "(Net only) One or more IDs of security groups you want to assign to the load balancer. If not specified, the default security group of the Net is assigned to the load balancer.",
            "items" : {
              "type" : "string"
            }
          },
          "Subnets" : {
            "type" : "array",
            "description" : "(Net only) The ID of the Subnet in which you want to create the load balancer. Regardless of this Subnet, the load balancer can distribute traffic to all Subnets. This parameter is required in a Net.",
            "items" : {
              "type" : "string"
            }
          },
          "SubregionNames" : {
            "type" : "array",
            "description" : "(public Cloud only) The Subregion in which you want to create the load balancer. Regardless of this Subregion, the load balancer can distribute traffic to all Subregions. This parameter is required in the public Cloud.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags assigned to the load balancer.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false
      },
      "CreateClientGatewayResponse" : {
        "type" : "object",
        "properties" : {
          "ClientGateway" : {
            "type" : "object",
            "properties" : {
              "BgpAsn" : {
                "type" : "integer",
                "description" : "An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet."
              },
              "ClientGatewayId" : {
                "type" : "string",
                "description" : "The ID of the client gateway."
              },
              "ConnectionType" : {
                "type" : "string",
                "description" : "The type of communication tunnel used by the client gateway (only `ipsec.1` is supported)."
              },
              "PublicIp" : {
                "type" : "string",
                "description" : "The public IPv4 address of the client gateway (must be a fixed address into a NATed network)."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the client gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the client gateway.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the client gateway."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadPublicIpsResponse" : {
        "type" : "object",
        "properties" : {
          "PublicIps" : {
            "type" : "array",
            "description" : "Information about one or more EIPs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "LinkPublicIpId" : {
                  "type" : "string",
                  "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                },
                "NicAccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the NIC."
                },
                "NicId" : {
                  "type" : "string",
                  "description" : "The ID of the NIC the EIP is associated with (if any)."
                },
                "PrivateIp" : {
                  "type" : "string",
                  "description" : "The private IP address associated with the EIP."
                },
                "PublicIp" : {
                  "type" : "string",
                  "description" : "The External IP address (EIP) associated with the NAT service."
                },
                "PublicIpId" : {
                  "type" : "string",
                  "description" : "The allocation ID of the EIP associated with the NAT service."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the EIP.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM the External IP (EIP) is associated with (if any)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the public IP."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkVirtualGatewayRequest" : {
        "required" : [ "NetId", "VirtualGatewayId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net from which you want to detach the virtual gateway."
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the virtual gateway."
          }
        },
        "additionalProperties" : false
      },
      "ReadNicsResponse" : {
        "type" : "object",
        "properties" : {
          "Nics" : {
            "type" : "array",
            "description" : "Information about one or more NICs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the NIC."
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the NIC."
                },
                "IsSourceDestChecked" : {
                  "type" : "boolean",
                  "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                },
                "LinkNic" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "If true, the NIC is deleted when the VM is terminated."
                    },
                    "DeviceNumber" : {
                      "type" : "integer",
                      "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                    },
                    "LinkNicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC to attach."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                    },
                    "VmAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the VM."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of the VM."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the NIC attachment."
                },
                "LinkPublicIp" : {
                  "type" : "object",
                  "properties" : {
                    "LinkPublicIpId" : {
                      "type" : "string",
                      "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                    },
                    "PublicDnsName" : {
                      "type" : "string",
                      "description" : "The name of the public DNS."
                    },
                    "PublicIp" : {
                      "type" : "string",
                      "description" : "The External IP address (EIP) associated with the NIC."
                    },
                    "PublicIpAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the EIP."
                    },
                    "PublicIpId" : {
                      "type" : "string",
                      "description" : "The allocation ID of the EIP."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the EIP association."
                },
                "MacAddress" : {
                  "type" : "string",
                  "description" : "The Media Access Control (MAC) address of the NIC."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net for the NIC."
                },
                "NicId" : {
                  "type" : "string",
                  "description" : "The ID of the NIC."
                },
                "PrivateDnsName" : {
                  "type" : "string",
                  "description" : "The name of the private DNS."
                },
                "PrivateIps" : {
                  "type" : "array",
                  "description" : "The private IP addresses of the NIC.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "IsPrimary" : {
                        "type" : "boolean",
                        "description" : "If true, the IP address is the primary private IP address of the NIC."
                      },
                      "LinkPublicIp" : {
                        "type" : "object",
                        "properties" : {
                          "LinkPublicIpId" : {
                            "type" : "string",
                            "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                          },
                          "PublicDnsName" : {
                            "type" : "string",
                            "description" : "The name of the public DNS."
                          },
                          "PublicIp" : {
                            "type" : "string",
                            "description" : "The External IP address (EIP) associated with the NIC."
                          },
                          "PublicIpAccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the EIP."
                          },
                          "PublicIpId" : {
                            "type" : "string",
                            "description" : "The allocation ID of the EIP."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the EIP association."
                      },
                      "PrivateDnsName" : {
                        "type" : "string",
                        "description" : "The name of the private DNS."
                      },
                      "PrivateIp" : {
                        "type" : "string",
                        "description" : "The private IP address of the NIC."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the private IP."
                  }
                },
                "SecurityGroups" : {
                  "type" : "array",
                  "description" : "One or more IDs of security groups for the NIC.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "SecurityGroupId" : {
                        "type" : "string",
                        "description" : "The ID of the security group."
                      },
                      "SecurityGroupName" : {
                        "type" : "string",
                        "description" : "The name of the security group."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the security group."
                  }
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                },
                "SubnetId" : {
                  "type" : "string",
                  "description" : "The ID of the Subnet."
                },
                "SubregionName" : {
                  "type" : "string",
                  "description" : "The Subregion in which the NIC is located."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the NIC.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the NIC."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeletePublicIpRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The EIP. In the public Cloud, this parameter is required."
          },
          "PublicIpId" : {
            "type" : "string",
            "description" : "The ID representing the association of the EIP with the VM or the NIC. In a Net, this parameter is required."
          }
        },
        "additionalProperties" : false
      },
      "UpdateSnapshotRequest" : {
        "required" : [ "PermissionsToCreateVolume", "SnapshotId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "PermissionsToCreateVolume" : {
            "type" : "object",
            "properties" : {
              "Additions" : {
                "type" : "object",
                "properties" : {
                  "AccountIds" : {
                    "type" : "array",
                    "description" : "The account ID of one or more users who have permissions for the resource.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "GlobalPermission" : {
                    "type" : "boolean",
                    "description" : "If true, the resource is public. If false, the resource is private."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the users who have permissions for the resource."
              },
              "Removals" : {
                "type" : "object",
                "properties" : {
                  "AccountIds" : {
                    "type" : "array",
                    "description" : "The account ID of one or more users who have permissions for the resource.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "GlobalPermission" : {
                    "type" : "boolean",
                    "description" : "If true, the resource is public. If false, the resource is private."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the users who have permissions for the resource."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the permissions for the resource."
          },
          "SnapshotId" : {
            "type" : "string",
            "description" : "The ID of the snapshot."
          }
        },
        "additionalProperties" : false
      },
      "ReadDhcpOptionsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "Default" : {
                "type" : "boolean",
                "description" : "If true, lists all default DHCP options set. If false, lists all non-default DHCP options set."
              },
              "DhcpOptionsSetIds" : {
                "type" : "array",
                "description" : "The IDs of the DHCP options sets.",
                "items" : {
                  "type" : "string"
                }
              },
              "DomainNameServers" : {
                "type" : "array",
                "description" : "The domain name servers used for the DHCP options sets.",
                "items" : {
                  "type" : "string"
                }
              },
              "DomainNames" : {
                "type" : "array",
                "description" : "The domain names used for the DHCP options sets.",
                "items" : {
                  "type" : "string"
                }
              },
              "NtpServers" : {
                "type" : "array",
                "description" : "The Network Time Protocol (NTP) servers used for the DHCP options sets.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the DHCP options sets.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the DHCP options sets.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the DHCP options sets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "DeleteExportTaskResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "Placement" : {
        "type" : "object",
        "properties" : {
          "SubregionName" : {
            "type" : "string",
            "description" : "The name of the Subregion."
          },
          "Tenancy" : {
            "type" : "string",
            "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the placement of the VM."
      },
      "DeleteListenerRuleResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteNicResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteSnapshotResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateServerCertificateResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "ServerCertificate" : {
            "type" : "object",
            "properties" : {
              "ExpirationDate" : {
                "type" : "string",
                "description" : "The date at which the server certificate expires.",
                "format" : "date"
              },
              "Id" : {
                "type" : "string",
                "description" : "The ID of the server certificate."
              },
              "Name" : {
                "type" : "string",
                "description" : "The name of the server certificate."
              },
              "Path" : {
                "type" : "string",
                "description" : "The path to the server certificate."
              },
              "UploadDate" : {
                "type" : "string",
                "description" : "The date at which the server certificate has been uploaded.",
                "format" : "date"
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the server certificate."
          }
        },
        "additionalProperties" : false
      },
      "CreateVmsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Vms" : {
            "type" : "array",
            "description" : "Information about one or more created VMs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Architecture" : {
                  "type" : "string",
                  "description" : "The architecture of the VM (`i386` \\| `x86_64`)."
                },
                "BlockDeviceMappings" : {
                  "type" : "array",
                  "description" : "The block device mapping of the VM.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "Bsu" : {
                        "type" : "object",
                        "properties" : {
                          "DeleteOnVmDeletion" : {
                            "type" : "boolean",
                            "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                          },
                          "LinkDate" : {
                            "type" : "string",
                            "description" : "The time and date of attachment of the volume to the VM.",
                            "format" : "date"
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the volume."
                          },
                          "VolumeId" : {
                            "type" : "string",
                            "description" : "The ID of the volume."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the created BSU volume."
                      },
                      "DeviceName" : {
                        "type" : "string",
                        "description" : "The name of the device."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the created block device mapping."
                  }
                },
                "BsuOptimized" : {
                  "type" : "boolean",
                  "description" : "If true, the VM is optimized for BSU I/O."
                },
                "ClientToken" : {
                  "type" : "string",
                  "description" : "The idempotency token provided when launching the VM."
                },
                "CreationDate" : {
                  "type" : "string",
                  "description" : "The date and time at which the VM was created.",
                  "format" : "datetime"
                },
                "DeletionProtection" : {
                  "type" : "boolean",
                  "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
                },
                "Hypervisor" : {
                  "type" : "string",
                  "description" : "The hypervisor type of the VMs (`ovm` \\| `xen`)."
                },
                "ImageId" : {
                  "type" : "string",
                  "description" : "The ID of the OMI used to create the VM."
                },
                "IsSourceDestChecked" : {
                  "type" : "boolean",
                  "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                },
                "KeypairName" : {
                  "type" : "string",
                  "description" : "The name of the keypair used when launching the VM."
                },
                "LaunchNumber" : {
                  "type" : "integer",
                  "description" : "The number for the VM when launching a group of several VMs (for example, 0, 1, 2, and so on)."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net in which the VM is running."
                },
                "Nics" : {
                  "type" : "array",
                  "description" : "(Net only) The network interface cards (NICs) the VMs are attached to.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "AccountId" : {
                        "type" : "string",
                        "description" : "The account ID of the owner of the NIC."
                      },
                      "Description" : {
                        "type" : "string",
                        "description" : "The description of the NIC."
                      },
                      "IsSourceDestChecked" : {
                        "type" : "boolean",
                        "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                      },
                      "LinkNic" : {
                        "type" : "object",
                        "properties" : {
                          "DeleteOnVmDeletion" : {
                            "type" : "boolean",
                            "description" : "If true, the NIC is deleted when the VM is terminated."
                          },
                          "DeviceNumber" : {
                            "type" : "integer",
                            "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                          },
                          "LinkNicId" : {
                            "type" : "string",
                            "description" : "The ID of the NIC to attach."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the network interface card (NIC)."
                      },
                      "LinkPublicIp" : {
                        "type" : "object",
                        "properties" : {
                          "PublicDnsName" : {
                            "type" : "string",
                            "description" : "The name of the public DNS."
                          },
                          "PublicIp" : {
                            "type" : "string",
                            "description" : "The External IP address (EIP) associated with the NIC."
                          },
                          "PublicIpAccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the EIP."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the EIP associated with the NIC."
                      },
                      "MacAddress" : {
                        "type" : "string",
                        "description" : "The Media Access Control (MAC) address of the NIC."
                      },
                      "NetId" : {
                        "type" : "string",
                        "description" : "The ID of the Net for the NIC."
                      },
                      "NicId" : {
                        "type" : "string",
                        "description" : "The ID of the NIC."
                      },
                      "PrivateDnsName" : {
                        "type" : "string",
                        "description" : "The name of the private DNS."
                      },
                      "PrivateIps" : {
                        "type" : "array",
                        "description" : "The private IP address or addresses of the NIC.",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "IsPrimary" : {
                              "type" : "boolean",
                              "description" : "If true, the IP address is the primary private IP address of the NIC."
                            },
                            "LinkPublicIp" : {
                              "type" : "object",
                              "properties" : {
                                "PublicDnsName" : {
                                  "type" : "string",
                                  "description" : "The name of the public DNS."
                                },
                                "PublicIp" : {
                                  "type" : "string",
                                  "description" : "The External IP address (EIP) associated with the NIC."
                                },
                                "PublicIpAccountId" : {
                                  "type" : "string",
                                  "description" : "The account ID of the owner of the EIP."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the EIP associated with the NIC."
                            },
                            "PrivateDnsName" : {
                              "type" : "string",
                              "description" : "The name of the private DNS."
                            },
                            "PrivateIp" : {
                              "type" : "string",
                              "description" : "The private IP address."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the private IP of the NIC."
                        }
                      },
                      "SecurityGroups" : {
                        "type" : "array",
                        "description" : "One or more IDs of security groups for the NIC.",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "SecurityGroupId" : {
                              "type" : "string",
                              "description" : "The ID of the security group."
                            },
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the security group."
                        }
                      },
                      "State" : {
                        "type" : "string",
                        "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                      },
                      "SubnetId" : {
                        "type" : "string",
                        "description" : "The ID of the Subnet for the NIC."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the network interface card (NIC)."
                  }
                },
                "OsFamily" : {
                  "type" : "string",
                  "description" : "Indicates the operating system (OS) of the VM."
                },
                "Performance" : {
                  "type" : "string",
                  "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`)."
                },
                "Placement" : {
                  "type" : "object",
                  "properties" : {
                    "SubregionName" : {
                      "type" : "string",
                      "description" : "The name of the Subregion."
                    },
                    "Tenancy" : {
                      "type" : "string",
                      "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the placement of the VM."
                },
                "PrivateDnsName" : {
                  "type" : "string",
                  "description" : "The name of the private DNS."
                },
                "PrivateIp" : {
                  "type" : "string",
                  "description" : "The primary private IP address of the VM."
                },
                "ProductCodes" : {
                  "type" : "array",
                  "description" : "The product code associated with the OMI used to create the VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "PublicDnsName" : {
                  "type" : "string",
                  "description" : "The name of the public DNS."
                },
                "PublicIp" : {
                  "type" : "string",
                  "description" : "The public IP address of the VM."
                },
                "ReservationId" : {
                  "type" : "string",
                  "description" : "The reservation ID of the VM."
                },
                "RootDeviceName" : {
                  "type" : "string",
                  "description" : "The name of the root device for the VM (for example, /dev/vda1)."
                },
                "RootDeviceType" : {
                  "type" : "string",
                  "description" : "The type of root device used by the VM (always `bsu`)."
                },
                "SecurityGroups" : {
                  "type" : "array",
                  "description" : "One or more security groups associated with the VM.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "SecurityGroupId" : {
                        "type" : "string",
                        "description" : "The ID of the security group."
                      },
                      "SecurityGroupName" : {
                        "type" : "string",
                        "description" : "The name of the security group."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the security group."
                  }
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
                },
                "StateReason" : {
                  "type" : "string",
                  "description" : "The reason explaining the current state of the VM."
                },
                "SubnetId" : {
                  "type" : "string",
                  "description" : "The ID of the Subnet for the VM."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the VM.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "UserData" : {
                  "type" : "string",
                  "description" : "The Base64-encoded MIME user data."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM."
                },
                "VmInitiatedShutdownBehavior" : {
                  "type" : "string",
                  "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted."
                },
                "VmType" : {
                  "type" : "string",
                  "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the VM."
            }
          }
        },
        "additionalProperties" : false
      },
      "DeleteApiAccessRuleResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateAccountResponse" : {
        "type" : "object",
        "properties" : {
          "Account" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The ID of the account."
              },
              "City" : {
                "type" : "string",
                "description" : "The city of the account owner."
              },
              "CompanyName" : {
                "type" : "string",
                "description" : "The name of the company for the account."
              },
              "Country" : {
                "type" : "string",
                "description" : "The country of the account owner."
              },
              "CustomerId" : {
                "type" : "string",
                "description" : "The ID of the customer."
              },
              "Email" : {
                "type" : "string",
                "description" : "The email address for the account."
              },
              "FirstName" : {
                "type" : "string",
                "description" : "The first name of the account owner."
              },
              "JobTitle" : {
                "type" : "string",
                "description" : "The job title of the account owner."
              },
              "LastName" : {
                "type" : "string",
                "description" : "The last name of the account owner."
              },
              "MobileNumber" : {
                "type" : "string",
                "description" : "The mobile phone number of the account owner."
              },
              "PhoneNumber" : {
                "type" : "string",
                "description" : "The landline phone number of the account owner."
              },
              "StateProvince" : {
                "type" : "string",
                "description" : "The state/province of the account."
              },
              "VatNumber" : {
                "type" : "string",
                "description" : "The value added tax (VAT) number for the account."
              },
              "ZipCode" : {
                "type" : "string",
                "description" : "The ZIP code of the city."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the account."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ResetAccountPasswordRequest" : {
        "required" : [ "Password", "Token" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Password" : {
            "type" : "string",
            "description" : "The new password for the account."
          },
          "Token" : {
            "type" : "string",
            "description" : "The token you received at the email address provided for the account."
          }
        },
        "additionalProperties" : false
      },
      "CreateLoadBalancerListenersResponse" : {
        "type" : "object",
        "properties" : {
          "LoadBalancer" : {
            "type" : "object",
            "properties" : {
              "AccessLog" : {
                "type" : "object",
                "properties" : {
                  "IsEnabled" : {
                    "type" : "boolean",
                    "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                  },
                  "OsuBucketName" : {
                    "type" : "string",
                    "description" : "The name of the OOS bucket for the access logs."
                  },
                  "OsuBucketPrefix" : {
                    "type" : "string",
                    "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                  },
                  "PublicationInterval" : {
                    "type" : "integer",
                    "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about access logs."
              },
              "ApplicationStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The stickiness policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieName" : {
                      "type" : "string",
                      "description" : "The name of the application cookie used for stickiness."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "BackendVmIds" : {
                "type" : "array",
                "description" : "One or more IDs of back-end VMs for the load balancer.",
                "items" : {
                  "type" : "string"
                }
              },
              "DnsName" : {
                "type" : "string",
                "description" : "The DNS name of the load balancer."
              },
              "HealthCheck" : {
                "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                "type" : "object",
                "properties" : {
                  "CheckInterval" : {
                    "type" : "integer",
                    "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                  },
                  "HealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                  },
                  "Path" : {
                    "type" : "string",
                    "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                  },
                  "Port" : {
                    "type" : "integer",
                    "description" : "The port number (between `1` and `65535`, both included)."
                  },
                  "Protocol" : {
                    "type" : "string",
                    "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                  },
                  "Timeout" : {
                    "type" : "integer",
                    "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                  },
                  "UnhealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the health check configuration."
              },
              "Listeners" : {
                "type" : "array",
                "description" : "The listeners for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "BackendPort" : {
                      "type" : "integer",
                      "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                    },
                    "BackendProtocol" : {
                      "type" : "string",
                      "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "LoadBalancerPort" : {
                      "type" : "integer",
                      "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                    },
                    "LoadBalancerProtocol" : {
                      "type" : "string",
                      "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "PolicyNames" : {
                      "type" : "array",
                      "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ServerCertificateId" : {
                      "type" : "string",
                      "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the listener."
                }
              },
              "LoadBalancerName" : {
                "type" : "string",
                "description" : "The name of the load balancer."
              },
              "LoadBalancerStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieExpirationPeriod" : {
                      "type" : "integer",
                      "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The name of the stickiness policy."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "LoadBalancerType" : {
                "type" : "string",
                "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the load balancer."
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceSecurityGroup" : {
                "type" : "object",
                "properties" : {
                  "SecurityGroupAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the security group."
                  },
                  "SecurityGroupName" : {
                    "type" : "string",
                    "description" : "The name of the security group."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
              },
              "Subnets" : {
                "type" : "array",
                "description" : "The ID of the Subnet in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The ID of the Subregion in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the load balancer.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the load balancer."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ConsumptionEntry" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The ID of your TINA account."
          },
          "Category" : {
            "type" : "string",
            "description" : "The category of the resource (for example, `network`)."
          },
          "FromDate" : {
            "type" : "string",
            "description" : "The beginning of the time period."
          },
          "Operation" : {
            "type" : "string",
            "description" : "The API call that triggered the resource consumption (for example, `RunInstances` or `CreateVolume`)."
          },
          "PayingAccountId" : {
            "type" : "string",
            "description" : "The ID of the TINA account which is billed for your consumption. It can be different from your account in the `AccountId` parameter."
          },
          "Service" : {
            "type" : "string",
            "description" : "The service of the API call (`TinaOS-FCU`, `TinaOS-LBU`, `TinaOS-DirectLink`, `TinaOS-OOS`, or `TinaOS-OSU`)."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The name of the Subregion."
          },
          "Title" : {
            "type" : "string",
            "description" : "A description of the consumed resource."
          },
          "ToDate" : {
            "type" : "string",
            "description" : "The end of the time period."
          },
          "Type" : {
            "type" : "string",
            "description" : "The type of resource, depending on the API call."
          },
          "Value" : {
            "type" : "number",
            "description" : "The consumed amount for the resource. The unit depends on the resource type. For more information, see the `Title` element.",
            "format" : "double"
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the resources consumed during the specified time period."
      },
      "FiltersDirectLinkInterface" : {
        "type" : "object",
        "properties" : {
          "DirectLinkIds" : {
            "type" : "array",
            "description" : "The IDs of the DirectLinks.",
            "items" : {
              "type" : "string"
            }
          },
          "DirectLinkInterfaceIds" : {
            "type" : "array",
            "description" : "The IDs of the DirectLink interfaces.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "CreateVmsRequest" : {
        "required" : [ "ImageId" ],
        "type" : "object",
        "properties" : {
          "BlockDeviceMappings" : {
            "type" : "array",
            "description" : "One or more block device mappings.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Bsu" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                    },
                    "Iops" : {
                      "type" : "integer",
                      "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                    },
                    "SnapshotId" : {
                      "type" : "string",
                      "description" : "The ID of the snapshot used to create the volume."
                    },
                    "VolumeSize" : {
                      "type" : "integer",
                      "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                    },
                    "VolumeType" : {
                      "type" : "string",
                      "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the BSU volume to create."
                },
                "DeviceName" : {
                  "type" : "string",
                  "description" : "The name of the device."
                },
                "NoDevice" : {
                  "type" : "string",
                  "description" : "Removes the device which is included in the block device mapping of the OMI."
                },
                "VirtualDeviceName" : {
                  "type" : "string",
                  "description" : "The name of the virtual device (ephemeralN)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the block device mapping."
            }
          },
          "BootOnCreation" : {
            "type" : "boolean",
            "description" : "By default or if true, the VM is started on creation. If false, the VM is stopped on creation."
          },
          "BsuOptimized" : {
            "type" : "boolean",
            "description" : "If true, the VM is created with optimized BSU I/O."
          },
          "ClientToken" : {
            "type" : "string",
            "description" : "A unique identifier which enables you to manage the idempotency."
          },
          "DeletionProtection" : {
            "type" : "boolean",
            "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ImageId" : {
            "type" : "string",
            "description" : "The ID of the OMI used to create the VM. You can find the list of OMIs by calling the [ReadImages](#readimages) method."
          },
          "KeypairName" : {
            "type" : "string",
            "description" : "The name of the keypair."
          },
          "MaxVmsCount" : {
            "type" : "integer",
            "description" : "The maximum number of VMs you want to create. If all the VMs cannot be created, the largest possible number of VMs above MinVmsCount is created."
          },
          "MinVmsCount" : {
            "type" : "integer",
            "description" : "The minimum number of VMs you want to create. If this number of VMs cannot be created, no VMs are created."
          },
          "Nics" : {
            "type" : "array",
            "description" : "One or more NICs. If you specify this parameter, you must define one NIC as the primary network interface of the VM with `0` as its device number.",
            "items" : {
              "type" : "object",
              "properties" : {
                "DeleteOnVmDeletion" : {
                  "type" : "boolean",
                  "description" : "By default or if set to true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](#updatenic)."
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the NIC, if you are creating a NIC when creating the VM."
                },
                "DeviceNumber" : {
                  "type" : "integer",
                  "description" : "The index of the VM device for the NIC attachment (between 0 and 7, both included). This parameter is required if you create a NIC when creating the VM."
                },
                "NicId" : {
                  "type" : "string",
                  "description" : "The ID of the NIC, if you are attaching an existing NIC when creating a VM."
                },
                "PrivateIps" : {
                  "type" : "array",
                  "description" : "One or more private IP addresses to assign to the NIC, if you create a NIC when creating a VM. Only one private IP address can be the primary private IP address.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "IsPrimary" : {
                        "type" : "boolean",
                        "description" : "If true, the IP address is the primary private IP address of the NIC."
                      },
                      "PrivateIp" : {
                        "type" : "string",
                        "description" : "The private IP address of the NIC."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the private IP."
                  }
                },
                "SecondaryPrivateIpCount" : {
                  "type" : "integer",
                  "description" : "The number of secondary private IP addresses, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP address in the `PrivateIps` parameter."
                },
                "SecurityGroupIds" : {
                  "type" : "array",
                  "description" : "One or more IDs of security groups for the NIC, if you acreate a NIC when creating a VM.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "SubnetId" : {
                  "type" : "string",
                  "description" : "The ID of the Subnet for the NIC, if you create a NIC when creating a VM."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the network interface card (NIC) when creating a virtual machine (VM)."
            }
          },
          "Performance" : {
            "type" : "string",
            "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`).",
            "enum" : [ "medium", "high", "highest" ],
            "default" : "high"
          },
          "Placement" : {
            "type" : "object",
            "properties" : {
              "SubregionName" : {
                "type" : "string",
                "description" : "The name of the Subregion."
              },
              "Tenancy" : {
                "type" : "string",
                "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the placement of the VM."
          },
          "PrivateIps" : {
            "type" : "array",
            "description" : "One or more private IP addresses of the VM.",
            "items" : {
              "type" : "string"
            }
          },
          "SecurityGroupIds" : {
            "type" : "array",
            "description" : "One or more IDs of security group for the VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "SecurityGroups" : {
            "type" : "array",
            "description" : "One or more names of security groups for the VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet in which you want to create the VM."
          },
          "UserData" : {
            "type" : "string",
            "description" : "Data or script used to add a specific configuration to the VM. It must be base64-encoded."
          },
          "VmInitiatedShutdownBehavior" : {
            "type" : "string",
            "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated."
          },
          "VmType" : {
            "type" : "string",
            "description" : "The type of VM (`t2.small` by default).<br />\nFor more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
          }
        },
        "additionalProperties" : false
      },
      "DeleteVpnConnectionResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadInternetServicesResponse" : {
        "type" : "object",
        "properties" : {
          "InternetServices" : {
            "type" : "array",
            "description" : "Information about one or more Internet services.",
            "items" : {
              "type" : "object",
              "properties" : {
                "InternetServiceId" : {
                  "type" : "string",
                  "description" : "The ID of the Internet service."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net attached to the Internet service."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the attachment of the Net to the Internet service (always `available`)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the Internet service.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the Internet service."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateVpnConnectionRouteResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FiltersExportTask" : {
        "type" : "object",
        "properties" : {
          "TaskIds" : {
            "type" : "array",
            "description" : "The IDs of the export tasks.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "AccepterNet" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the accepter Net."
          },
          "IpRange" : {
            "type" : "string",
            "description" : "The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16)."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the accepter Net."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the accepter Net."
      },
      "ReadVmsHealthResponse" : {
        "type" : "object",
        "properties" : {
          "BackendVmHealth" : {
            "type" : "array",
            "description" : "Information about the health of one or more back-end VMs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the state of the back-end VM."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the back-end VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                },
                "StateReason" : {
                  "type" : "string",
                  "description" : "Information about the cause of `OutOfService` VMs.<br />\nSpecifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \\| `Instance` \\| `N/A`)."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the back-end VM."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the health of a back-end VM."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "Listener" : {
        "type" : "object",
        "properties" : {
          "BackendPort" : {
            "type" : "integer",
            "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
          },
          "BackendProtocol" : {
            "type" : "string",
            "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
          },
          "LoadBalancerPort" : {
            "type" : "integer",
            "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
          },
          "LoadBalancerProtocol" : {
            "type" : "string",
            "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
          },
          "PolicyNames" : {
            "type" : "array",
            "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
            "items" : {
              "type" : "string"
            }
          },
          "ServerCertificateId" : {
            "type" : "string",
            "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the listener."
      },
      "BlockDeviceMappingImage" : {
        "type" : "object",
        "properties" : {
          "Bsu" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
              },
              "Iops" : {
                "type" : "integer",
                "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
              },
              "SnapshotId" : {
                "type" : "string",
                "description" : "The ID of the snapshot used to create the volume."
              },
              "VolumeSize" : {
                "type" : "integer",
                "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
              },
              "VolumeType" : {
                "type" : "string",
                "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the BSU volume to create."
          },
          "DeviceName" : {
            "type" : "string",
            "description" : "The name of the device."
          },
          "VirtualDeviceName" : {
            "type" : "string",
            "description" : "The name of the virtual device (ephemeralN)."
          }
        },
        "additionalProperties" : false,
        "description" : "One or more parameters used to automatically set up volumes when the VM is created."
      },
      "LinkVolumeResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FlexibleGpuCatalog" : {
        "type" : "object",
        "properties" : {
          "Generations" : {
            "type" : "array",
            "description" : "The generations of VMs that the fGPU is compatible with.",
            "items" : {
              "type" : "string"
            }
          },
          "MaxCpu" : {
            "type" : "integer",
            "description" : "The maximum number of VM vCores that the fGPU is compatible with."
          },
          "MaxRam" : {
            "type" : "integer",
            "description" : "The maximum amount of VM memory that the fGPU is compatible with."
          },
          "ModelName" : {
            "type" : "string",
            "description" : "The model of fGPU."
          },
          "VRam" : {
            "type" : "integer",
            "description" : "The amount of video RAM (VRAM) of the fGPU."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the flexible GPU (fGPU) that is available in the public catalog."
      },
      "UpdateApiAccessRuleRequest" : {
        "required" : [ "ApiAccessRuleId" ],
        "type" : "object",
        "properties" : {
          "ApiAccessRuleId" : {
            "type" : "string",
            "description" : "The ID of the API access rule you want to update."
          },
          "CaIds" : {
            "type" : "array",
            "description" : "One or more IDs of Client Certificate Authorities (CAs).",
            "items" : {
              "type" : "string"
            }
          },
          "Cns" : {
            "type" : "array",
            "description" : "One or more Client Certificate Common Names (CNs).",
            "items" : {
              "type" : "string"
            }
          },
          "Description" : {
            "type" : "string",
            "description" : "A new description for the API access rule."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "IpRanges" : {
            "type" : "array",
            "description" : "One or more IP ranges, in CIDR notation (for example, 192.0.2.0/16).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "UnlinkNicResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadSubnetsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Subnets" : {
            "type" : "array",
            "description" : "Information about one or more Subnets.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AvailableIpsCount" : {
                  "type" : "integer",
                  "description" : "The number of available IP addresses in the Subnets."
                },
                "IpRange" : {
                  "type" : "string",
                  "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
                },
                "MapPublicIpOnLaunch" : {
                  "type" : "boolean",
                  "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net in which the Subnet is."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the Subnet (`pending` \\| `available`)."
                },
                "SubnetId" : {
                  "type" : "string",
                  "description" : "The ID of the Subnet."
                },
                "SubregionName" : {
                  "type" : "string",
                  "description" : "The name of the Subregion in which the Subnet is located."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the Subnet.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the Subnet."
            }
          }
        },
        "additionalProperties" : false
      },
      "UnlinkInternetServiceResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteNicRequest" : {
        "required" : [ "NicId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "CreateLoadBalancerTagsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LinkVolumeRequest" : {
        "required" : [ "DeviceName", "VmId", "VolumeId" ],
        "type" : "object",
        "properties" : {
          "DeviceName" : {
            "type" : "string",
            "description" : "The name of the device."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM you want to attach the volume to."
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume you want to attach."
          }
        },
        "additionalProperties" : false
      },
      "BlockDeviceMappingVmCreation" : {
        "type" : "object",
        "properties" : {
          "Bsu" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
              },
              "Iops" : {
                "type" : "integer",
                "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
              },
              "SnapshotId" : {
                "type" : "string",
                "description" : "The ID of the snapshot used to create the volume."
              },
              "VolumeSize" : {
                "type" : "integer",
                "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
              },
              "VolumeType" : {
                "type" : "string",
                "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the BSU volume to create."
          },
          "DeviceName" : {
            "type" : "string",
            "description" : "The name of the device."
          },
          "NoDevice" : {
            "type" : "string",
            "description" : "Removes the device which is included in the block device mapping of the OMI."
          },
          "VirtualDeviceName" : {
            "type" : "string",
            "description" : "The name of the virtual device (ephemeralN)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the block device mapping."
      },
      "With" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "boolean",
            "description" : "By default or if set to true, the account ID is displayed."
          },
          "CallDuration" : {
            "type" : "boolean",
            "description" : "If set to true, the duration of the call is displayed."
          },
          "QueryAccessKey" : {
            "type" : "boolean",
            "description" : "If set to true, the access key is displayed."
          },
          "QueryApiName" : {
            "type" : "boolean",
            "description" : "If set to true, the name of the API is displayed."
          },
          "QueryApiVersion" : {
            "type" : "boolean",
            "description" : "If set to true, the version of the API is displayed."
          },
          "QueryCallName" : {
            "type" : "boolean",
            "description" : "If set to true, the name of the call is displayed."
          },
          "QueryDate" : {
            "type" : "boolean",
            "description" : "If set to true, the date of the call is displayed."
          },
          "QueryHeaderRaw" : {
            "type" : "boolean",
            "description" : "If set to true, the raw header of the HTTP request is displayed."
          },
          "QueryHeaderSize" : {
            "type" : "boolean",
            "description" : "If set to true, the size of the raw header of the HTTP request is displayed."
          },
          "QueryIpAddress" : {
            "type" : "boolean",
            "description" : "If set to true, the IP address is displayed."
          },
          "QueryPayloadRaw" : {
            "type" : "boolean",
            "description" : "If set to true, the raw payload of the HTTP request is displayed."
          },
          "QueryPayloadSize" : {
            "type" : "boolean",
            "description" : "If set to true, the size of the raw payload of the HTTP request is displayed."
          },
          "QueryUserAgent" : {
            "type" : "boolean",
            "description" : "If set to true, the user agent of the HTTP request is displayed."
          },
          "RequestId" : {
            "type" : "boolean",
            "description" : "By default ot if set to true, the request ID is displayed."
          },
          "ResponseSize" : {
            "type" : "boolean",
            "description" : "If set to true, the size of the response is displayed."
          },
          "ResponseStatusCode" : {
            "type" : "boolean",
            "description" : "If set to true, the HTTP status code of the response is displayed."
          }
        },
        "additionalProperties" : false,
        "description" : "The information to display in each returned log. If this parameter is not specified, all available fields are considered as true."
      },
      "StopVmsRequest" : {
        "required" : [ "VmIds" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ForceStop" : {
            "type" : "boolean",
            "description" : "Forces the VM to stop."
          },
          "VmIds" : {
            "type" : "array",
            "description" : "One or more IDs of VMs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "DeleteRouteResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "RouteTable" : {
            "type" : "object",
            "properties" : {
              "LinkRouteTables" : {
                "type" : "array",
                "description" : "One or more associations between the route table and Subnets.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "LinkRouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the association between the route table and the Subnet."
                    },
                    "Main" : {
                      "type" : "boolean",
                      "description" : "If true, the route table is the main one."
                    },
                    "RouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the route table."
                    },
                    "SubnetId" : {
                      "type" : "string",
                      "description" : "The ID of the Subnet."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "One or more associations between the route table and the Subnets."
                }
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the route table."
              },
              "RoutePropagatingVirtualGateways" : {
                "type" : "array",
                "description" : "Information about virtual gateways propagating routes.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "VirtualGatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the virtual gateway."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route propagating virtual gateway."
                }
              },
              "RouteTableId" : {
                "type" : "string",
                "description" : "The ID of the route table."
              },
              "Routes" : {
                "type" : "array",
                "description" : "One or more routes in the route table.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CreationMethod" : {
                      "type" : "string",
                      "description" : "The method used to create the route."
                    },
                    "DestinationIpRange" : {
                      "type" : "string",
                      "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                    },
                    "DestinationServiceId" : {
                      "type" : "string",
                      "description" : "The ID of the OUTSCALE service."
                    },
                    "GatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                    },
                    "NatServiceId" : {
                      "type" : "string",
                      "description" : "The ID of a NAT service attached to the Net."
                    },
                    "NetAccessPointId" : {
                      "type" : "string",
                      "description" : "The ID of the Net access point."
                    },
                    "NetPeeringId" : {
                      "type" : "string",
                      "description" : "The ID of the Net peering connection."
                    },
                    "NicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                    },
                    "VmAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the VM."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of a VM specified in a route in the table."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route."
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the route table.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the route table."
          }
        },
        "additionalProperties" : false
      },
      "CheckAuthenticationRequest" : {
        "required" : [ "Login", "Password" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Login" : {
            "type" : "string",
            "description" : "The email address of the account."
          },
          "Password" : {
            "type" : "string",
            "description" : "The password of the account."
          }
        },
        "additionalProperties" : false
      },
      "CreateSnapshotResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Snapshot" : {
            "type" : "object",
            "properties" : {
              "AccountAlias" : {
                "type" : "string",
                "description" : "The account alias of the owner of the snapshot."
              },
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the snapshot."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the snapshot."
              },
              "PermissionsToCreateVolume" : {
                "type" : "object",
                "properties" : {
                  "AccountIds" : {
                    "type" : "array",
                    "description" : "The account ID of one or more users who have permissions for the resource.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "GlobalPermission" : {
                    "type" : "boolean",
                    "description" : "If true, the resource is public. If false, the resource is private."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the users who have permissions for the resource."
              },
              "Progress" : {
                "type" : "integer",
                "description" : "The progress of the snapshot, as a percentage."
              },
              "SnapshotId" : {
                "type" : "string",
                "description" : "The ID of the snapshot."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the snapshot (`in-queue` \\| `completed` \\| `error`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the snapshot.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "VolumeId" : {
                "type" : "string",
                "description" : "The ID of the volume used to create the snapshot."
              },
              "VolumeSize" : {
                "type" : "integer",
                "description" : "The size of the volume used to create the snapshot, in gibibytes (GiB)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the snapshot."
          }
        },
        "additionalProperties" : false
      },
      "CreateVolumeResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Volume" : {
            "type" : "object",
            "properties" : {
              "Iops" : {
                "type" : "integer",
                "description" : "The number of I/O operations per second (IOPS):<br />\n- For `io1` volumes, the number of provisioned IOPS<br />\n- For `gp2` volumes, the baseline performance of the volume"
              },
              "LinkedVolumes" : {
                "type" : "array",
                "description" : "Information about your volume attachment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                    },
                    "DeviceName" : {
                      "type" : "string",
                      "description" : "The name of the device."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`)."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of the VM."
                    },
                    "VolumeId" : {
                      "type" : "string",
                      "description" : "The ID of the volume."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about volume attachment."
                }
              },
              "Size" : {
                "type" : "integer",
                "description" : "The size of the volume, in gibibytes (GiB)."
              },
              "SnapshotId" : {
                "type" : "string",
                "description" : "The snapshot from which the volume was created."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the volume (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`)."
              },
              "SubregionName" : {
                "type" : "string",
                "description" : "The Subregion in which the volume was created."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the volume.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "VolumeId" : {
                "type" : "string",
                "description" : "The ID of the volume."
              },
              "VolumeType" : {
                "type" : "string",
                "description" : "The type of the volume (`standard` \\| `gp2` \\| `io1`)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the volume."
          }
        },
        "additionalProperties" : false
      },
      "LinkNicToUpdate" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "By default or if set to false, the NIC is detached from the VM when the VM is terminated. If true, the NIC is deleted."
          },
          "LinkNicId" : {
            "type" : "string",
            "description" : "The ID of the NIC attachment."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the NIC attachment. If you are modifying the `DeleteOnVmDeletion` attribute, you must specify the ID of the NIC attachment."
      },
      "CreateNetAccessPointResponse" : {
        "type" : "object",
        "properties" : {
          "NetAccessPoint" : {
            "type" : "object",
            "properties" : {
              "NetAccessPointId" : {
                "type" : "string",
                "description" : "The ID of the Net access point."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net with which the Net access point is associated."
              },
              "RouteTableIds" : {
                "type" : "array",
                "description" : "The ID of the route tables associated with the Net access point.",
                "items" : {
                  "type" : "string"
                }
              },
              "ServiceName" : {
                "type" : "string",
                "description" : "The name of the service with which the Net access point is associated."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the Net access point (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Net access point.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Net access point."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadLocationsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "FiltersNetAccessPoint" : {
        "type" : "object",
        "properties" : {
          "NetAccessPointIds" : {
            "type" : "array",
            "description" : "The IDs of the Net access points.",
            "items" : {
              "type" : "string"
            }
          },
          "NetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "ServiceNames" : {
            "type" : "array",
            "description" : "The names of the services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the Net access points (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the Net access points.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the Net access points.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the Net access points, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "BlockDeviceMappingVmUpdate" : {
        "type" : "object",
        "properties" : {
          "Bsu" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "If set to true, the volume is deleted when terminating the VM. If set to false, the volume is not deleted when terminating the VM."
              },
              "VolumeId" : {
                "type" : "string",
                "description" : "The ID of the volume."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the BSU volume."
          },
          "DeviceName" : {
            "type" : "string",
            "description" : "The name of the device."
          },
          "NoDevice" : {
            "type" : "string",
            "description" : "Removes the device which is included in the block device mapping of the OMI."
          },
          "VirtualDeviceName" : {
            "type" : "string",
            "description" : "The name of the virtual device (ephemeralN)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the block device mapping."
      },
      "UpdateImageResponse" : {
        "type" : "object",
        "properties" : {
          "Image" : {
            "type" : "object",
            "properties" : {
              "AccountAlias" : {
                "type" : "string",
                "description" : "The account alias of the owner of the OMI."
              },
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the OMI."
              },
              "Architecture" : {
                "type" : "string",
                "description" : "The architecture of the OMI (by default, `i386`)."
              },
              "BlockDeviceMappings" : {
                "type" : "array",
                "description" : "One or more block device mappings.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "Bsu" : {
                      "type" : "object",
                      "properties" : {
                        "DeleteOnVmDeletion" : {
                          "type" : "boolean",
                          "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                        },
                        "Iops" : {
                          "type" : "integer",
                          "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                        },
                        "SnapshotId" : {
                          "type" : "string",
                          "description" : "The ID of the snapshot used to create the volume."
                        },
                        "VolumeSize" : {
                          "type" : "integer",
                          "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                        },
                        "VolumeType" : {
                          "type" : "string",
                          "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the BSU volume to create."
                    },
                    "DeviceName" : {
                      "type" : "string",
                      "description" : "The name of the device."
                    },
                    "VirtualDeviceName" : {
                      "type" : "string",
                      "description" : "The name of the virtual device (ephemeralN)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "One or more parameters used to automatically set up volumes when the VM is created."
                }
              },
              "CreationDate" : {
                "type" : "string",
                "description" : "The date and time at which the OMI was created.",
                "format" : "date"
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the OMI."
              },
              "FileLocation" : {
                "type" : "string",
                "description" : "The location of the bucket where the OMI files are stored."
              },
              "ImageId" : {
                "type" : "string",
                "description" : "The ID of the OMI."
              },
              "ImageName" : {
                "type" : "string",
                "description" : "The name of the OMI."
              },
              "ImageType" : {
                "type" : "string",
                "description" : "The type of the OMI."
              },
              "PermissionsToLaunch" : {
                "type" : "object",
                "properties" : {
                  "AccountIds" : {
                    "type" : "array",
                    "description" : "The account ID of one or more users who have permissions for the resource.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "GlobalPermission" : {
                    "type" : "boolean",
                    "description" : "If true, the resource is public. If false, the resource is private."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the users who have permissions for the resource."
              },
              "ProductCodes" : {
                "type" : "array",
                "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                "items" : {
                  "type" : "string"
                }
              },
              "RootDeviceName" : {
                "type" : "string",
                "description" : "The name of the root device."
              },
              "RootDeviceType" : {
                "type" : "string",
                "description" : "The type of root device used by the OMI (always `bsu`)."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the OMI (`pending` \\| `available` \\| `failed`)."
              },
              "StateComment" : {
                "type" : "object",
                "properties" : {
                  "StateCode" : {
                    "type" : "string",
                    "description" : "The code of the change of state."
                  },
                  "StateMessage" : {
                    "type" : "string",
                    "description" : "A message explaining the change of state."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the change of state."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the OMI.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the OMI."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkRouteTableResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ListenerForCreation" : {
        "required" : [ "BackendPort", "LoadBalancerPort", "LoadBalancerProtocol" ],
        "type" : "object",
        "properties" : {
          "BackendPort" : {
            "type" : "integer",
            "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
          },
          "BackendProtocol" : {
            "type" : "string",
            "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
          },
          "LoadBalancerPort" : {
            "type" : "integer",
            "description" : "The port on which the load balancer is listening (between `1` and `65535`, both included)."
          },
          "LoadBalancerProtocol" : {
            "type" : "string",
            "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
          },
          "ServerCertificateId" : {
            "type" : "string",
            "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the listener to create."
      },
      "FiltersDhcpOptions" : {
        "type" : "object",
        "properties" : {
          "Default" : {
            "type" : "boolean",
            "description" : "If true, lists all default DHCP options set. If false, lists all non-default DHCP options set."
          },
          "DhcpOptionsSetIds" : {
            "type" : "array",
            "description" : "The IDs of the DHCP options sets.",
            "items" : {
              "type" : "string"
            }
          },
          "DomainNameServers" : {
            "type" : "array",
            "description" : "The domain name servers used for the DHCP options sets.",
            "items" : {
              "type" : "string"
            }
          },
          "DomainNames" : {
            "type" : "array",
            "description" : "The domain names used for the DHCP options sets.",
            "items" : {
              "type" : "string"
            }
          },
          "NtpServers" : {
            "type" : "array",
            "description" : "The Network Time Protocol (NTP) servers used for the DHCP options sets.",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the DHCP options sets.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the DHCP options sets.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the DHCP options sets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "DeleteSnapshotRequest" : {
        "required" : [ "SnapshotId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "SnapshotId" : {
            "type" : "string",
            "description" : "The ID of the snapshot you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "UpdateImageRequest" : {
        "required" : [ "ImageId", "PermissionsToLaunch" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ImageId" : {
            "type" : "string",
            "description" : "The ID of the OMI you want to modify."
          },
          "PermissionsToLaunch" : {
            "type" : "object",
            "properties" : {
              "Additions" : {
                "type" : "object",
                "properties" : {
                  "AccountIds" : {
                    "type" : "array",
                    "description" : "The account ID of one or more users who have permissions for the resource.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "GlobalPermission" : {
                    "type" : "boolean",
                    "description" : "If true, the resource is public. If false, the resource is private."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the users who have permissions for the resource."
              },
              "Removals" : {
                "type" : "object",
                "properties" : {
                  "AccountIds" : {
                    "type" : "array",
                    "description" : "The account ID of one or more users who have permissions for the resource.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "GlobalPermission" : {
                    "type" : "boolean",
                    "description" : "If true, the resource is public. If false, the resource is private."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the users who have permissions for the resource."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the permissions for the resource."
          }
        },
        "additionalProperties" : false
      },
      "CreateImageExportTaskResponse" : {
        "type" : "object",
        "properties" : {
          "ImageExportTask" : {
            "type" : "object",
            "properties" : {
              "Comment" : {
                "type" : "string",
                "description" : "If the OMI export task fails, an error message appears."
              },
              "ImageId" : {
                "type" : "string",
                "description" : "The ID of the OMI to be exported."
              },
              "OsuExport" : {
                "required" : [ "DiskImageFormat", "OsuBucket" ],
                "type" : "object",
                "properties" : {
                  "DiskImageFormat" : {
                    "type" : "string",
                    "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                  },
                  "OsuBucket" : {
                    "type" : "string",
                    "description" : "The name of the OOS bucket the OMI is exported to."
                  },
                  "OsuManifestUrl" : {
                    "type" : "string",
                    "description" : "The URL of the manifest file."
                  },
                  "OsuPrefix" : {
                    "type" : "string",
                    "description" : "The prefix for the key of the OOS object corresponding to the image."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the OMI export task."
              },
              "Progress" : {
                "type" : "integer",
                "description" : "The progress of the OMI export task, as a percentage."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the OMI export task (`pending/queued` \\| `pending` \\| `completed` \\| `failed` \\| `cancelled`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the image export task.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "TaskId" : {
                "type" : "string",
                "description" : "The ID of the OMI export task."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the OMI export task."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateServerCertificateRequest" : {
        "required" : [ "Name" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Name" : {
            "type" : "string",
            "description" : "The name of the server certificate you want to modify."
          },
          "NewName" : {
            "type" : "string",
            "description" : "A new name for the server certificate."
          },
          "NewPath" : {
            "type" : "string",
            "description" : "A new path for the server certificate."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkVolumeRequest" : {
        "required" : [ "VolumeId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ForceUnlink" : {
            "type" : "boolean",
            "description" : "Forces the detachment of the volume in case of previous failure. Important: This action may damage your data or file systems."
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume you want to detach."
          }
        },
        "additionalProperties" : false
      },
      "UpdateNetResponse" : {
        "type" : "object",
        "properties" : {
          "Net" : {
            "type" : "object",
            "properties" : {
              "DhcpOptionsSetId" : {
                "type" : "string",
                "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
              },
              "IpRange" : {
                "type" : "string",
                "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the Net (`pending` \\| `available`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Net.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "Tenancy" : {
                "type" : "string",
                "description" : "The VM tenancy in a Net."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Net."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeletePublicIpResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "OsuExportSnapshotExportTask" : {
        "required" : [ "DiskImageFormat", "OsuBucket" ],
        "type" : "object",
        "properties" : {
          "DiskImageFormat" : {
            "type" : "string",
            "description" : "The format of the export disk (`qcow2` \\| `raw`)."
          },
          "OsuBucket" : {
            "type" : "string",
            "description" : "The name of the OOS bucket the snapshot is exported to."
          },
          "OsuPrefix" : {
            "type" : "string",
            "description" : "The prefix for the key of the OOS object corresponding to the snapshot."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the snapshot export task."
      },
      "CreateTagsRequest" : {
        "required" : [ "ResourceIds", "Tags" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ResourceIds" : {
            "type" : "array",
            "description" : "One or more resource IDs.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags to add to the specified resources.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false
      },
      "ReadNatServicesResponse" : {
        "type" : "object",
        "properties" : {
          "NatServices" : {
            "type" : "array",
            "description" : "Information about one or more NAT services.",
            "items" : {
              "type" : "object",
              "properties" : {
                "NatServiceId" : {
                  "type" : "string",
                  "description" : "The ID of the NAT service."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net in which the NAT service is."
                },
                "PublicIps" : {
                  "type" : "array",
                  "description" : "Information about the External IP address or addresses (EIPs) associated with the NAT service.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "PublicIp" : {
                        "type" : "string",
                        "description" : "The External IP address (EIP) associated with the NAT service."
                      },
                      "PublicIpId" : {
                        "type" : "string",
                        "description" : "The allocation ID of the EIP associated with the NAT service."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the public IP."
                  }
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the NAT service (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                },
                "SubnetId" : {
                  "type" : "string",
                  "description" : "The ID of the Subnet in which the NAT service is."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the NAT service.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the NAT service."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadNatServicesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "NatServiceIds" : {
                "type" : "array",
                "description" : "The IDs of the NAT services.",
                "items" : {
                  "type" : "string"
                }
              },
              "NetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets in which the NAT services are.",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the NAT services (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                "items" : {
                  "type" : "string"
                }
              },
              "SubnetIds" : {
                "type" : "array",
                "description" : "The IDs of the Subnets in which the NAT services are.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the NAT services.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the NAT services.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the NAT services, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadSecurityGroupsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "AccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owners of the security groups.",
                "items" : {
                  "type" : "string"
                }
              },
              "Descriptions" : {
                "type" : "array",
                "description" : "The descriptions of the security groups.",
                "items" : {
                  "type" : "string"
                }
              },
              "InboundRuleAccountIds" : {
                "type" : "array",
                "description" : "The account IDs that have been granted permissions.",
                "items" : {
                  "type" : "string"
                }
              },
              "InboundRuleFromPortRanges" : {
                "type" : "array",
                "description" : "The beginnings of the port ranges for the TCP and UDP protocols, or the ICMP type numbers.",
                "items" : {
                  "type" : "integer"
                }
              },
              "InboundRuleIpRanges" : {
                "type" : "array",
                "description" : "The IP ranges that have been granted permissions, in CIDR notation (for example, 10.0.0.0/24).",
                "items" : {
                  "type" : "string"
                }
              },
              "InboundRuleProtocols" : {
                "type" : "array",
                "description" : "The IP protocols for the permissions (`tcp` \\| `udp` \\| `icmp`, or a protocol number, or `-1` for all protocols).",
                "items" : {
                  "type" : "string"
                }
              },
              "InboundRuleSecurityGroupIds" : {
                "type" : "array",
                "description" : "The IDs of the security groups that have been granted permissions.",
                "items" : {
                  "type" : "string"
                }
              },
              "InboundRuleSecurityGroupNames" : {
                "type" : "array",
                "description" : "The names of the security groups that have been granted permissions.",
                "items" : {
                  "type" : "string"
                }
              },
              "InboundRuleToPortRanges" : {
                "type" : "array",
                "description" : "The ends of the port ranges for the TCP and UDP protocols, or the ICMP codes.",
                "items" : {
                  "type" : "integer"
                }
              },
              "NetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets specified when the security groups were created.",
                "items" : {
                  "type" : "string"
                }
              },
              "OutboundRuleAccountIds" : {
                "type" : "array",
                "description" : "The account IDs that have been granted permissions.",
                "items" : {
                  "type" : "string"
                }
              },
              "OutboundRuleFromPortRanges" : {
                "type" : "array",
                "description" : "The beginnings of the port ranges for the TCP and UDP protocols, or the ICMP type numbers.",
                "items" : {
                  "type" : "integer"
                }
              },
              "OutboundRuleIpRanges" : {
                "type" : "array",
                "description" : "The IP ranges that have been granted permissions, in CIDR notation (for example, 10.0.0.0/24).",
                "items" : {
                  "type" : "string"
                }
              },
              "OutboundRuleProtocols" : {
                "type" : "array",
                "description" : "The IP protocols for the permissions (`tcp` \\| `udp` \\| `icmp`, or a protocol number, or `-1` for all protocols).",
                "items" : {
                  "type" : "string"
                }
              },
              "OutboundRuleSecurityGroupIds" : {
                "type" : "array",
                "description" : "The IDs of the security groups that have been granted permissions.",
                "items" : {
                  "type" : "string"
                }
              },
              "OutboundRuleSecurityGroupNames" : {
                "type" : "array",
                "description" : "The names of the security groups that have been granted permissions.",
                "items" : {
                  "type" : "string"
                }
              },
              "OutboundRuleToPortRanges" : {
                "type" : "array",
                "description" : "The ends of the port ranges for the TCP and UDP protocols, or the ICMP codes.",
                "items" : {
                  "type" : "integer"
                }
              },
              "SecurityGroupIds" : {
                "type" : "array",
                "description" : "The IDs of the security groups.",
                "items" : {
                  "type" : "string"
                }
              },
              "SecurityGroupNames" : {
                "type" : "array",
                "description" : "The names of the security groups.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the security groups.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the security groups.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the security groups, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "CreateKeypairResponse" : {
        "type" : "object",
        "properties" : {
          "Keypair" : {
            "type" : "object",
            "properties" : {
              "KeypairFingerprint" : {
                "type" : "string",
                "description" : "The MD5 public key fingerprint as specified in section 4 of RFC 4716."
              },
              "KeypairName" : {
                "type" : "string",
                "description" : "The name of the keypair."
              },
              "PrivateKey" : {
                "type" : "string",
                "description" : "The private key."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the created keypair."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadApiLogsResponse" : {
        "type" : "object",
        "properties" : {
          "Logs" : {
            "type" : "array",
            "description" : "Information about one or more logs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the logged call."
                },
                "CallDuration" : {
                  "type" : "integer",
                  "description" : "The duration of the logged call, in microseconds."
                },
                "QueryAccessKey" : {
                  "type" : "string",
                  "description" : "The access key used for the logged call."
                },
                "QueryApiName" : {
                  "type" : "string",
                  "description" : "The name of the API used by the logged call (always `oapi` for the OUTSCALE API)."
                },
                "QueryApiVersion" : {
                  "type" : "string",
                  "description" : "The version of the API used by the logged call."
                },
                "QueryCallName" : {
                  "type" : "string",
                  "description" : "The name of the logged call."
                },
                "QueryDate" : {
                  "type" : "string",
                  "description" : "The date of the logged call, in ISO 8601 format.",
                  "format" : "date"
                },
                "QueryHeaderRaw" : {
                  "type" : "string",
                  "description" : "The raw header of the HTTP request of the logged call."
                },
                "QueryHeaderSize" : {
                  "type" : "integer",
                  "description" : "The size of the raw header of the HTTP request of the logged call, in bytes."
                },
                "QueryIpAddress" : {
                  "type" : "string",
                  "description" : "The IP address used for the logged call."
                },
                "QueryPayloadRaw" : {
                  "type" : "string",
                  "description" : "The raw payload of the HTTP request of the logged call."
                },
                "QueryPayloadSize" : {
                  "type" : "integer",
                  "description" : "The size of the raw payload of the HTTP request of the logged call, in bytes."
                },
                "QueryUserAgent" : {
                  "type" : "string",
                  "description" : "The user agent of the HTTP request of the logged call."
                },
                "RequestId" : {
                  "type" : "string",
                  "description" : "The request ID provided in the response of the logged call."
                },
                "ResponseSize" : {
                  "type" : "integer",
                  "description" : "The size of the response of the logged call, in bytes."
                },
                "ResponseStatusCode" : {
                  "type" : "integer",
                  "description" : "The HTTP status code of the response of the logged call."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the log."
            }
          },
          "NextPageToken" : {
            "type" : "string",
            "description" : "The token to request the next page of results."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "SnapshotExportTask" : {
        "type" : "object",
        "properties" : {
          "Comment" : {
            "type" : "string",
            "description" : "If the snapshot export task fails, an error message appears."
          },
          "OsuExport" : {
            "required" : [ "DiskImageFormat", "OsuBucket" ],
            "type" : "object",
            "properties" : {
              "DiskImageFormat" : {
                "type" : "string",
                "description" : "The format of the export disk (`qcow2` \\| `raw`)."
              },
              "OsuBucket" : {
                "type" : "string",
                "description" : "The name of the OOS bucket the snapshot is exported to."
              },
              "OsuPrefix" : {
                "type" : "string",
                "description" : "The prefix for the key of the OOS object corresponding to the snapshot."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the snapshot export task."
          },
          "Progress" : {
            "type" : "integer",
            "description" : "The progress of the snapshot export task, as a percentage."
          },
          "SnapshotId" : {
            "type" : "string",
            "description" : "The ID of the snapshot to be exported."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the snapshot export task (`pending` \\| `active` \\| `completed` \\| `failed`)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the snapshot export task.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "TaskId" : {
            "type" : "string",
            "description" : "The ID of the snapshot export task."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the snapshot export task."
      },
      "Image" : {
        "type" : "object",
        "properties" : {
          "AccountAlias" : {
            "type" : "string",
            "description" : "The account alias of the owner of the OMI."
          },
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the OMI."
          },
          "Architecture" : {
            "type" : "string",
            "description" : "The architecture of the OMI (by default, `i386`)."
          },
          "BlockDeviceMappings" : {
            "type" : "array",
            "description" : "One or more block device mappings.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Bsu" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                    },
                    "Iops" : {
                      "type" : "integer",
                      "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                    },
                    "SnapshotId" : {
                      "type" : "string",
                      "description" : "The ID of the snapshot used to create the volume."
                    },
                    "VolumeSize" : {
                      "type" : "integer",
                      "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                    },
                    "VolumeType" : {
                      "type" : "string",
                      "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the BSU volume to create."
                },
                "DeviceName" : {
                  "type" : "string",
                  "description" : "The name of the device."
                },
                "VirtualDeviceName" : {
                  "type" : "string",
                  "description" : "The name of the virtual device (ephemeralN)."
                }
              },
              "additionalProperties" : false,
              "description" : "One or more parameters used to automatically set up volumes when the VM is created."
            }
          },
          "CreationDate" : {
            "type" : "string",
            "description" : "The date and time at which the OMI was created.",
            "format" : "date"
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the OMI."
          },
          "FileLocation" : {
            "type" : "string",
            "description" : "The location of the bucket where the OMI files are stored."
          },
          "ImageId" : {
            "type" : "string",
            "description" : "The ID of the OMI."
          },
          "ImageName" : {
            "type" : "string",
            "description" : "The name of the OMI."
          },
          "ImageType" : {
            "type" : "string",
            "description" : "The type of the OMI."
          },
          "PermissionsToLaunch" : {
            "type" : "object",
            "properties" : {
              "AccountIds" : {
                "type" : "array",
                "description" : "The account ID of one or more users who have permissions for the resource.",
                "items" : {
                  "type" : "string"
                }
              },
              "GlobalPermission" : {
                "type" : "boolean",
                "description" : "If true, the resource is public. If false, the resource is private."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the users who have permissions for the resource."
          },
          "ProductCodes" : {
            "type" : "array",
            "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
            "items" : {
              "type" : "string"
            }
          },
          "RootDeviceName" : {
            "type" : "string",
            "description" : "The name of the root device."
          },
          "RootDeviceType" : {
            "type" : "string",
            "description" : "The type of root device used by the OMI (always `bsu`)."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the OMI (`pending` \\| `available` \\| `failed`)."
          },
          "StateComment" : {
            "type" : "object",
            "properties" : {
              "StateCode" : {
                "type" : "string",
                "description" : "The code of the change of state."
              },
              "StateMessage" : {
                "type" : "string",
                "description" : "A message explaining the change of state."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the change of state."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the OMI.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the OMI."
      },
      "LoadBalancerStickyCookiePolicy" : {
        "type" : "object",
        "properties" : {
          "CookieExpirationPeriod" : {
            "type" : "integer",
            "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
          },
          "PolicyName" : {
            "type" : "string",
            "description" : "The name of the stickiness policy."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the stickiness policy."
      },
      "ApplicationStickyCookiePolicy" : {
        "type" : "object",
        "properties" : {
          "CookieName" : {
            "type" : "string",
            "description" : "The name of the application cookie used for stickiness."
          },
          "PolicyName" : {
            "type" : "string",
            "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the stickiness policy."
      },
      "Phase1Options" : {
        "type" : "object",
        "properties" : {
          "DpdTimeoutAction" : {
            "type" : "string",
            "description" : "The action to carry out after a Dead Peer Detection (DPD) timeout occurs."
          },
          "DpdTimeoutSeconds" : {
            "type" : "integer",
            "description" : "The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds."
          },
          "IkeVersions" : {
            "type" : "array",
            "description" : "The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.",
            "items" : {
              "type" : "string"
            }
          },
          "Phase1DhGroupNumbers" : {
            "type" : "array",
            "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.",
            "items" : {
              "type" : "integer"
            }
          },
          "Phase1EncryptionAlgorithms" : {
            "type" : "array",
            "description" : "The encryption algorithms allowed for the VPN tunnel for phase 1.",
            "items" : {
              "type" : "string"
            }
          },
          "Phase1IntegrityAlgorithms" : {
            "type" : "array",
            "description" : "The integrity algorithms allowed for the VPN tunnel for phase 1.",
            "items" : {
              "type" : "string"
            }
          },
          "Phase1LifetimeSeconds" : {
            "type" : "integer",
            "description" : "The lifetime for phase 1 of the IKE negotiation process, in seconds."
          },
          "ReplayWindowSize" : {
            "type" : "integer",
            "description" : "The number of packets in an IKE replay window."
          },
          "StartupAction" : {
            "type" : "string",
            "description" : "The action to carry out when establishing tunnels for a VPN connection."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. "
      },
      "CreateSecurityGroupRuleRequest" : {
        "required" : [ "Flow", "SecurityGroupId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Flow" : {
            "type" : "string",
            "description" : "The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Nets only."
          },
          "FromPortRange" : {
            "type" : "integer",
            "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
          },
          "IpProtocol" : {
            "type" : "string",
            "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
          },
          "IpRange" : {
            "type" : "string",
            "description" : "The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16)."
          },
          "Rules" : {
            "type" : "array",
            "description" : "Information about the security group rule to create.",
            "items" : {
              "type" : "object",
              "properties" : {
                "FromPortRange" : {
                  "type" : "integer",
                  "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                },
                "IpProtocol" : {
                  "type" : "string",
                  "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                },
                "IpRanges" : {
                  "type" : "array",
                  "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "SecurityGroupsMembers" : {
                  "type" : "array",
                  "description" : "Information about one or more members of a security group.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "AccountId" : {
                        "type" : "string",
                        "description" : "The account ID of a user."
                      },
                      "SecurityGroupId" : {
                        "type" : "string",
                        "description" : "The ID of the security group."
                      },
                      "SecurityGroupName" : {
                        "type" : "string",
                        "description" : "The name of the security group."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the member of a security group."
                  }
                },
                "ServiceIds" : {
                  "type" : "array",
                  "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "ToPortRange" : {
                  "type" : "integer",
                  "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the security group rule."
            }
          },
          "SecurityGroupAccountIdToLink" : {
            "type" : "string",
            "description" : "The account ID of the owner of the security group for which you want to create a rule."
          },
          "SecurityGroupId" : {
            "type" : "string",
            "description" : "The ID of the security group for which you want to create a rule."
          },
          "SecurityGroupNameToLink" : {
            "type" : "string",
            "description" : "The ID of the source security group. If you are in the Public Cloud, you can also specify the name of the source security group."
          },
          "ToPortRange" : {
            "type" : "integer",
            "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
          }
        },
        "additionalProperties" : false
      },
      "PrivateIp" : {
        "type" : "object",
        "properties" : {
          "IsPrimary" : {
            "type" : "boolean",
            "description" : "If true, the IP address is the primary private IP address of the NIC."
          },
          "LinkPublicIp" : {
            "type" : "object",
            "properties" : {
              "LinkPublicIpId" : {
                "type" : "string",
                "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
              },
              "PublicDnsName" : {
                "type" : "string",
                "description" : "The name of the public DNS."
              },
              "PublicIp" : {
                "type" : "string",
                "description" : "The External IP address (EIP) associated with the NIC."
              },
              "PublicIpAccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the EIP."
              },
              "PublicIpId" : {
                "type" : "string",
                "description" : "The allocation ID of the EIP."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the EIP association."
          },
          "PrivateDnsName" : {
            "type" : "string",
            "description" : "The name of the private DNS."
          },
          "PrivateIp" : {
            "type" : "string",
            "description" : "The private IP address of the NIC."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the private IP."
      },
      "DeleteExportTaskRequest" : {
        "required" : [ "ExportTaskId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ExportTaskId" : {
            "type" : "string",
            "description" : "The ID of the export task to delete."
          }
        },
        "additionalProperties" : false
      },
      "LinkFlexibleGpuRequest" : {
        "required" : [ "FlexibleGpuId", "VmId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "FlexibleGpuId" : {
            "type" : "string",
            "description" : "The ID of the fGPU you want to attach."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM you want to attach the fGPU to."
          }
        },
        "additionalProperties" : false
      },
      "FiltersInternetService" : {
        "type" : "object",
        "properties" : {
          "InternetServiceIds" : {
            "type" : "array",
            "description" : "The IDs of the Internet services.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkNetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets the Internet services are attached to.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkStates" : {
            "type" : "array",
            "description" : "The current states of the attachments between the Internet services and the Nets (only `available`, if the Internet gateway is attached to a VPC).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the Internet services.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the Internet services.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the Internet services, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "FlexibleGpu" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "If true, the fGPU is deleted when the VM is terminated."
          },
          "FlexibleGpuId" : {
            "type" : "string",
            "description" : "The ID of the fGPU."
          },
          "Generation" : {
            "type" : "string",
            "description" : "The compatible processor generation."
          },
          "ModelName" : {
            "type" : "string",
            "description" : "The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`)."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The Subregion where the fGPU is located."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM the fGPU is attached to, if any."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the flexible GPU (fGPU)."
      },
      "FiltersVm" : {
        "type" : "object",
        "properties" : {
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the VMs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          },
          "VmIds" : {
            "type" : "array",
            "description" : "One or more IDs of VMs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadVolumesResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Volumes" : {
            "type" : "array",
            "description" : "Information about one or more volumes.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Iops" : {
                  "type" : "integer",
                  "description" : "The number of I/O operations per second (IOPS):<br />\n- For `io1` volumes, the number of provisioned IOPS<br />\n- For `gp2` volumes, the baseline performance of the volume"
                },
                "LinkedVolumes" : {
                  "type" : "array",
                  "description" : "Information about your volume attachment.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "DeleteOnVmDeletion" : {
                        "type" : "boolean",
                        "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                      },
                      "DeviceName" : {
                        "type" : "string",
                        "description" : "The name of the device."
                      },
                      "State" : {
                        "type" : "string",
                        "description" : "The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`)."
                      },
                      "VmId" : {
                        "type" : "string",
                        "description" : "The ID of the VM."
                      },
                      "VolumeId" : {
                        "type" : "string",
                        "description" : "The ID of the volume."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about volume attachment."
                  }
                },
                "Size" : {
                  "type" : "integer",
                  "description" : "The size of the volume, in gibibytes (GiB)."
                },
                "SnapshotId" : {
                  "type" : "string",
                  "description" : "The snapshot from which the volume was created."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the volume (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`)."
                },
                "SubregionName" : {
                  "type" : "string",
                  "description" : "The Subregion in which the volume was created."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the volume.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "VolumeId" : {
                  "type" : "string",
                  "description" : "The ID of the volume."
                },
                "VolumeType" : {
                  "type" : "string",
                  "description" : "The type of the volume (`standard` \\| `gp2` \\| `io1`)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the volume."
            }
          }
        },
        "additionalProperties" : false
      },
      "ReadTagsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Tags" : {
            "type" : "array",
            "description" : "Information about one or more tags.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "ResourceId" : {
                  "type" : "string",
                  "description" : "The ID of the resource."
                },
                "ResourceType" : {
                  "type" : "string",
                  "description" : "The type of the resource."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false
      },
      "ReadQuotasResponse" : {
        "type" : "object",
        "properties" : {
          "QuotaTypes" : {
            "type" : "array",
            "description" : "Information about one or more quotas.",
            "items" : {
              "type" : "object",
              "properties" : {
                "QuotaType" : {
                  "type" : "string",
                  "description" : "The resource ID if it is a resource-specific quota, `global` if it is not."
                },
                "Quotas" : {
                  "type" : "array",
                  "description" : "One or more quotas associated with the user.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "AccountId" : {
                        "type" : "string",
                        "description" : "The account ID of the owner of the quotas."
                      },
                      "Description" : {
                        "type" : "string",
                        "description" : "The description of the quota."
                      },
                      "MaxValue" : {
                        "type" : "integer",
                        "description" : "The maximum value of the quota for the OUTSCALE user account (if there is no limit, `0`)."
                      },
                      "Name" : {
                        "type" : "string",
                        "description" : "The unique name of the quota."
                      },
                      "QuotaCollection" : {
                        "type" : "string",
                        "description" : "The group name of the quota."
                      },
                      "ShortDescription" : {
                        "type" : "string",
                        "description" : "The description of the quota."
                      },
                      "UsedValue" : {
                        "type" : "integer",
                        "description" : "The limit value currently used by the OUTSCALE user account."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the quota."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "One or more quotas."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadClientGatewaysResponse" : {
        "type" : "object",
        "properties" : {
          "ClientGateways" : {
            "type" : "array",
            "description" : "Information about one or more client gateways.",
            "items" : {
              "type" : "object",
              "properties" : {
                "BgpAsn" : {
                  "type" : "integer",
                  "description" : "An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet."
                },
                "ClientGatewayId" : {
                  "type" : "string",
                  "description" : "The ID of the client gateway."
                },
                "ConnectionType" : {
                  "type" : "string",
                  "description" : "The type of communication tunnel used by the client gateway (only `ipsec.1` is supported)."
                },
                "PublicIp" : {
                  "type" : "string",
                  "description" : "The public IPv4 address of the client gateway (must be a fixed address into a NATed network)."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the client gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the client gateway.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the client gateway."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LoadBalancerLight" : {
        "required" : [ "LoadBalancerName", "LoadBalancerPort" ],
        "type" : "object",
        "properties" : {
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer to which the listener is attached."
          },
          "LoadBalancerPort" : {
            "type" : "integer",
            "description" : "The port of load balancer on which the load balancer is listening (between `1` and `65535` both included)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the load balancer."
      },
      "InternetService" : {
        "type" : "object",
        "properties" : {
          "InternetServiceId" : {
            "type" : "string",
            "description" : "The ID of the Internet service."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net attached to the Internet service."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the attachment of the Net to the Internet service (always `available`)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the Internet service.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the Internet service."
      },
      "DeleteLoadBalancerRequest" : {
        "required" : [ "LoadBalancerName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "ReadAdminPasswordResponse" : {
        "type" : "object",
        "properties" : {
          "AdminPassword" : {
            "type" : "string",
            "description" : "The password of the VM. After the first boot, returns an empty string."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          }
        },
        "additionalProperties" : false
      },
      "CreateImageExportTaskRequest" : {
        "required" : [ "ImageId", "OsuExport" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ImageId" : {
            "type" : "string",
            "description" : "The ID of the OMI to export."
          },
          "OsuExport" : {
            "required" : [ "DiskImageFormat", "OsuBucket" ],
            "type" : "object",
            "properties" : {
              "DiskImageFormat" : {
                "type" : "string",
                "description" : "The format of the export disk (`qcow2` \\| `raw`)."
              },
              "OsuApiKey" : {
                "type" : "object",
                "properties" : {
                  "ApiKeyId" : {
                    "type" : "string",
                    "description" : "The API key of the OOS account that enables you to access the bucket."
                  },
                  "SecretKey" : {
                    "type" : "string",
                    "description" : "The secret key of the OOS account that enables you to access the bucket."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the OOS API key."
              },
              "OsuBucket" : {
                "type" : "string",
                "description" : "The name of the OOS bucket where you want to export the object."
              },
              "OsuManifestUrl" : {
                "type" : "string",
                "description" : "The URL of the manifest file."
              },
              "OsuPrefix" : {
                "type" : "string",
                "description" : "The prefix for the key of the OOS object."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the OOS export task to create."
          }
        },
        "additionalProperties" : false
      },
      "ReadPublicIpRangesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "Snapshot" : {
        "type" : "object",
        "properties" : {
          "AccountAlias" : {
            "type" : "string",
            "description" : "The account alias of the owner of the snapshot."
          },
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the snapshot."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the snapshot."
          },
          "PermissionsToCreateVolume" : {
            "type" : "object",
            "properties" : {
              "AccountIds" : {
                "type" : "array",
                "description" : "The account ID of one or more users who have permissions for the resource.",
                "items" : {
                  "type" : "string"
                }
              },
              "GlobalPermission" : {
                "type" : "boolean",
                "description" : "If true, the resource is public. If false, the resource is private."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the users who have permissions for the resource."
          },
          "Progress" : {
            "type" : "integer",
            "description" : "The progress of the snapshot, as a percentage."
          },
          "SnapshotId" : {
            "type" : "string",
            "description" : "The ID of the snapshot."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the snapshot (`in-queue` \\| `completed` \\| `error`)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the snapshot.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume used to create the snapshot."
          },
          "VolumeSize" : {
            "type" : "integer",
            "description" : "The size of the volume used to create the snapshot, in gibibytes (GiB)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the snapshot."
      },
      "VpnOptions" : {
        "type" : "object",
        "properties" : {
          "Phase1Options" : {
            "type" : "object",
            "properties" : {
              "DpdTimeoutAction" : {
                "type" : "string",
                "description" : "The action to carry out after a Dead Peer Detection (DPD) timeout occurs."
              },
              "DpdTimeoutSeconds" : {
                "type" : "integer",
                "description" : "The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds."
              },
              "IkeVersions" : {
                "type" : "array",
                "description" : "The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.",
                "items" : {
                  "type" : "string"
                }
              },
              "Phase1DhGroupNumbers" : {
                "type" : "array",
                "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.",
                "items" : {
                  "type" : "integer"
                }
              },
              "Phase1EncryptionAlgorithms" : {
                "type" : "array",
                "description" : "The encryption algorithms allowed for the VPN tunnel for phase 1.",
                "items" : {
                  "type" : "string"
                }
              },
              "Phase1IntegrityAlgorithms" : {
                "type" : "array",
                "description" : "The integrity algorithms allowed for the VPN tunnel for phase 1.",
                "items" : {
                  "type" : "string"
                }
              },
              "Phase1LifetimeSeconds" : {
                "type" : "integer",
                "description" : "The lifetime for phase 1 of the IKE negotiation process, in seconds."
              },
              "ReplayWindowSize" : {
                "type" : "integer",
                "description" : "The number of packets in an IKE replay window."
              },
              "StartupAction" : {
                "type" : "string",
                "description" : "The action to carry out when establishing tunnels for a VPN connection."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. "
          },
          "Phase2Options" : {
            "type" : "object",
            "properties" : {
              "Phase2DhGroupNumbers" : {
                "type" : "array",
                "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 2.",
                "items" : {
                  "type" : "integer"
                }
              },
              "Phase2EncryptionAlgorithms" : {
                "type" : "array",
                "description" : "The encryption algorithms allowed for the VPN tunnel for phase 2.",
                "items" : {
                  "type" : "string"
                }
              },
              "Phase2IntegrityAlgorithms" : {
                "type" : "array",
                "description" : "The integrity algorithms allowed for the VPN tunnel for phase 2.",
                "items" : {
                  "type" : "string"
                }
              },
              "Phase2LifetimeSeconds" : {
                "type" : "integer",
                "description" : "The lifetime for phase 2 of the Internet Key Exchange (IKE) negociation process, in seconds."
              },
              "PreSharedKey" : {
                "type" : "string",
                "description" : "The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. "
          },
          "TunnelInsideIpRange" : {
            "type" : "string",
            "description" : "The IP range for the tunnel in your VPN connection."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the VPN options."
      },
      "CreateNetPeeringRequest" : {
        "required" : [ "AccepterNetId", "SourceNetId" ],
        "type" : "object",
        "properties" : {
          "AccepterNetId" : {
            "type" : "string",
            "description" : "The ID of the Net you want to connect with."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "SourceNetId" : {
            "type" : "string",
            "description" : "The ID of the Net you send the peering request from."
          }
        },
        "additionalProperties" : false
      },
      "CreateTagsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateNetAccessPointRequest" : {
        "required" : [ "NetAccessPointId" ],
        "type" : "object",
        "properties" : {
          "AddRouteTableIds" : {
            "type" : "array",
            "description" : "One or more IDs of route tables to associate with the specified Net access point.",
            "items" : {
              "type" : "string"
            }
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetAccessPointId" : {
            "type" : "string",
            "description" : "The ID of the Net access point."
          },
          "RemoveRouteTableIds" : {
            "type" : "array",
            "description" : "One or more IDs of route tables to disassociate from the specified Net access point.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "DeleteTagsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteLoadBalancerTagsRequest" : {
        "required" : [ "LoadBalancerNames", "Tags" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerNames" : {
            "type" : "array",
            "description" : "One or more load balancer names.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags to delete from the load balancers.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false
      },
      "FiltersNatService" : {
        "type" : "object",
        "properties" : {
          "NatServiceIds" : {
            "type" : "array",
            "description" : "The IDs of the NAT services.",
            "items" : {
              "type" : "string"
            }
          },
          "NetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets in which the NAT services are.",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the NAT services (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
            "items" : {
              "type" : "string"
            }
          },
          "SubnetIds" : {
            "type" : "array",
            "description" : "The IDs of the Subnets in which the NAT services are.",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the NAT services.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the NAT services.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the NAT services, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "DeleteRouteTableResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateDirectLinkResponse" : {
        "type" : "object",
        "properties" : {
          "DirectLink" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the DirectLink."
              },
              "Bandwidth" : {
                "type" : "string",
                "description" : "The physical link bandwidth (either 1 Gbps or 10 Gbps)."
              },
              "DirectLinkId" : {
                "type" : "string",
                "description" : "The ID of the DirectLink (for example, dxcon-xxxxxxxx)."
              },
              "DirectLinkName" : {
                "type" : "string",
                "description" : "The name of the DirectLink."
              },
              "Location" : {
                "type" : "string",
                "description" : "The datacenter where the DirectLink is located."
              },
              "RegionName" : {
                "type" : "string",
                "description" : "The Region in which the DirectLink has been created."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the DirectLink.<br />\n* `requested`: The DirectLink is requested but the request has not been validated yet.<br />\n* `pending`: The DirectLink request has been validated. It remains in the `pending` state until you establish the physical link.<br />\n* `available`: The physical link is established and the connection is ready to use.<br />\n* `deleting`: The deletion process is in progress.<br />\n* `deleted`: The DirectLink is deleted."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the DirectLink."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkInternetServiceRequest" : {
        "required" : [ "InternetServiceId", "NetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "InternetServiceId" : {
            "type" : "string",
            "description" : "The ID of the Internet service you want to detach."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net from which you want to detach the Internet service."
          }
        },
        "additionalProperties" : false
      },
      "FiltersVmType" : {
        "type" : "object",
        "properties" : {
          "BsuOptimized" : {
            "type" : "boolean",
            "description" : "Indicates whether the VM is optimized for BSU I/O."
          },
          "MemorySizes" : {
            "type" : "array",
            "description" : "The amounts of memory, in gibibytes (GiB).",
            "items" : {
              "type" : "number",
              "format" : "float"
            }
          },
          "VcoreCounts" : {
            "type" : "array",
            "description" : "The numbers of vCores.",
            "items" : {
              "type" : "integer"
            }
          },
          "VmTypeNames" : {
            "type" : "array",
            "description" : "The names of the VM types. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types).",
            "items" : {
              "type" : "string"
            }
          },
          "VolumeCounts" : {
            "type" : "array",
            "description" : "The maximum number of ephemeral storage disks.",
            "items" : {
              "type" : "integer"
            }
          },
          "VolumeSizes" : {
            "type" : "array",
            "description" : "The size of one ephemeral storage disk, in gibibytes (GiB).",
            "items" : {
              "type" : "integer"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "FiltersProductType" : {
        "type" : "object",
        "properties" : {
          "ProductTypeIds" : {
            "type" : "array",
            "description" : "The IDs of the product types.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "CreateClientGatewayRequest" : {
        "required" : [ "BgpAsn", "ConnectionType", "PublicIp" ],
        "type" : "object",
        "properties" : {
          "BgpAsn" : {
            "type" : "integer",
            "description" : "An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet."
          },
          "ConnectionType" : {
            "type" : "string",
            "description" : "The communication protocol used to establish tunnel with your client gateway (only `ipsec.1` is supported)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The public fixed IPv4 address of your client gateway."
          }
        },
        "additionalProperties" : false
      },
      "FiltersVirtualGateway" : {
        "type" : "object",
        "properties" : {
          "ConnectionTypes" : {
            "type" : "array",
            "description" : "The types of the virtual gateways (only `ipsec.1` is supported).",
            "items" : {
              "type" : "string"
            }
          },
          "LinkNetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets the virtual gateways are attached to.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkStates" : {
            "type" : "array",
            "description" : "The current states of the attachments between the virtual gateways and the Nets (`attaching` \\| `attached` \\| `detaching` \\| `detached`).",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the virtual gateways (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the virtual gateways.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the virtual gateways.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the virtual gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          },
          "VirtualGatewayIds" : {
            "type" : "array",
            "description" : "The IDs of the virtual gateways.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "SourceNet" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the source Net."
          },
          "IpRange" : {
            "type" : "string",
            "description" : "The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16)."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the source Net."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the source Net."
      },
      "ReadKeypairsResponse" : {
        "type" : "object",
        "properties" : {
          "Keypairs" : {
            "type" : "array",
            "description" : "Information about one or more keypairs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "KeypairFingerprint" : {
                  "type" : "string",
                  "description" : "The MD5 public key fingerprint as specified in section 4 of RFC 4716."
                },
                "KeypairName" : {
                  "type" : "string",
                  "description" : "The name of the keypair."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the keypair."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadNetAccessPointServicesResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Services" : {
            "type" : "array",
            "description" : "The names of the services you can use for Net access points.",
            "items" : {
              "type" : "object",
              "properties" : {
                "IpRanges" : {
                  "type" : "array",
                  "description" : "The list of network prefixes used by the service, in CIDR notation.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "ServiceId" : {
                  "type" : "string",
                  "description" : "The ID of the service."
                },
                "ServiceName" : {
                  "type" : "string",
                  "description" : "The name of the service."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the service."
            }
          }
        },
        "additionalProperties" : false
      },
      "ReadVmsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Vms" : {
            "type" : "array",
            "description" : "Information about one or more VMs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Architecture" : {
                  "type" : "string",
                  "description" : "The architecture of the VM (`i386` \\| `x86_64`)."
                },
                "BlockDeviceMappings" : {
                  "type" : "array",
                  "description" : "The block device mapping of the VM.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "Bsu" : {
                        "type" : "object",
                        "properties" : {
                          "DeleteOnVmDeletion" : {
                            "type" : "boolean",
                            "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                          },
                          "LinkDate" : {
                            "type" : "string",
                            "description" : "The time and date of attachment of the volume to the VM.",
                            "format" : "date"
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the volume."
                          },
                          "VolumeId" : {
                            "type" : "string",
                            "description" : "The ID of the volume."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the created BSU volume."
                      },
                      "DeviceName" : {
                        "type" : "string",
                        "description" : "The name of the device."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the created block device mapping."
                  }
                },
                "BsuOptimized" : {
                  "type" : "boolean",
                  "description" : "If true, the VM is optimized for BSU I/O."
                },
                "ClientToken" : {
                  "type" : "string",
                  "description" : "The idempotency token provided when launching the VM."
                },
                "CreationDate" : {
                  "type" : "string",
                  "description" : "The date and time at which the VM was created.",
                  "format" : "datetime"
                },
                "DeletionProtection" : {
                  "type" : "boolean",
                  "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
                },
                "Hypervisor" : {
                  "type" : "string",
                  "description" : "The hypervisor type of the VMs (`ovm` \\| `xen`)."
                },
                "ImageId" : {
                  "type" : "string",
                  "description" : "The ID of the OMI used to create the VM."
                },
                "IsSourceDestChecked" : {
                  "type" : "boolean",
                  "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                },
                "KeypairName" : {
                  "type" : "string",
                  "description" : "The name of the keypair used when launching the VM."
                },
                "LaunchNumber" : {
                  "type" : "integer",
                  "description" : "The number for the VM when launching a group of several VMs (for example, 0, 1, 2, and so on)."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net in which the VM is running."
                },
                "Nics" : {
                  "type" : "array",
                  "description" : "(Net only) The network interface cards (NICs) the VMs are attached to.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "AccountId" : {
                        "type" : "string",
                        "description" : "The account ID of the owner of the NIC."
                      },
                      "Description" : {
                        "type" : "string",
                        "description" : "The description of the NIC."
                      },
                      "IsSourceDestChecked" : {
                        "type" : "boolean",
                        "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                      },
                      "LinkNic" : {
                        "type" : "object",
                        "properties" : {
                          "DeleteOnVmDeletion" : {
                            "type" : "boolean",
                            "description" : "If true, the NIC is deleted when the VM is terminated."
                          },
                          "DeviceNumber" : {
                            "type" : "integer",
                            "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                          },
                          "LinkNicId" : {
                            "type" : "string",
                            "description" : "The ID of the NIC to attach."
                          },
                          "State" : {
                            "type" : "string",
                            "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the network interface card (NIC)."
                      },
                      "LinkPublicIp" : {
                        "type" : "object",
                        "properties" : {
                          "PublicDnsName" : {
                            "type" : "string",
                            "description" : "The name of the public DNS."
                          },
                          "PublicIp" : {
                            "type" : "string",
                            "description" : "The External IP address (EIP) associated with the NIC."
                          },
                          "PublicIpAccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the EIP."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the EIP associated with the NIC."
                      },
                      "MacAddress" : {
                        "type" : "string",
                        "description" : "The Media Access Control (MAC) address of the NIC."
                      },
                      "NetId" : {
                        "type" : "string",
                        "description" : "The ID of the Net for the NIC."
                      },
                      "NicId" : {
                        "type" : "string",
                        "description" : "The ID of the NIC."
                      },
                      "PrivateDnsName" : {
                        "type" : "string",
                        "description" : "The name of the private DNS."
                      },
                      "PrivateIps" : {
                        "type" : "array",
                        "description" : "The private IP address or addresses of the NIC.",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "IsPrimary" : {
                              "type" : "boolean",
                              "description" : "If true, the IP address is the primary private IP address of the NIC."
                            },
                            "LinkPublicIp" : {
                              "type" : "object",
                              "properties" : {
                                "PublicDnsName" : {
                                  "type" : "string",
                                  "description" : "The name of the public DNS."
                                },
                                "PublicIp" : {
                                  "type" : "string",
                                  "description" : "The External IP address (EIP) associated with the NIC."
                                },
                                "PublicIpAccountId" : {
                                  "type" : "string",
                                  "description" : "The account ID of the owner of the EIP."
                                }
                              },
                              "additionalProperties" : false,
                              "description" : "Information about the EIP associated with the NIC."
                            },
                            "PrivateDnsName" : {
                              "type" : "string",
                              "description" : "The name of the private DNS."
                            },
                            "PrivateIp" : {
                              "type" : "string",
                              "description" : "The private IP address."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the private IP of the NIC."
                        }
                      },
                      "SecurityGroups" : {
                        "type" : "array",
                        "description" : "One or more IDs of security groups for the NIC.",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "SecurityGroupId" : {
                              "type" : "string",
                              "description" : "The ID of the security group."
                            },
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the security group."
                        }
                      },
                      "State" : {
                        "type" : "string",
                        "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                      },
                      "SubnetId" : {
                        "type" : "string",
                        "description" : "The ID of the Subnet for the NIC."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the network interface card (NIC)."
                  }
                },
                "OsFamily" : {
                  "type" : "string",
                  "description" : "Indicates the operating system (OS) of the VM."
                },
                "Performance" : {
                  "type" : "string",
                  "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`)."
                },
                "Placement" : {
                  "type" : "object",
                  "properties" : {
                    "SubregionName" : {
                      "type" : "string",
                      "description" : "The name of the Subregion."
                    },
                    "Tenancy" : {
                      "type" : "string",
                      "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the placement of the VM."
                },
                "PrivateDnsName" : {
                  "type" : "string",
                  "description" : "The name of the private DNS."
                },
                "PrivateIp" : {
                  "type" : "string",
                  "description" : "The primary private IP address of the VM."
                },
                "ProductCodes" : {
                  "type" : "array",
                  "description" : "The product code associated with the OMI used to create the VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "PublicDnsName" : {
                  "type" : "string",
                  "description" : "The name of the public DNS."
                },
                "PublicIp" : {
                  "type" : "string",
                  "description" : "The public IP address of the VM."
                },
                "ReservationId" : {
                  "type" : "string",
                  "description" : "The reservation ID of the VM."
                },
                "RootDeviceName" : {
                  "type" : "string",
                  "description" : "The name of the root device for the VM (for example, /dev/vda1)."
                },
                "RootDeviceType" : {
                  "type" : "string",
                  "description" : "The type of root device used by the VM (always `bsu`)."
                },
                "SecurityGroups" : {
                  "type" : "array",
                  "description" : "One or more security groups associated with the VM.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "SecurityGroupId" : {
                        "type" : "string",
                        "description" : "The ID of the security group."
                      },
                      "SecurityGroupName" : {
                        "type" : "string",
                        "description" : "The name of the security group."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the security group."
                  }
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
                },
                "StateReason" : {
                  "type" : "string",
                  "description" : "The reason explaining the current state of the VM."
                },
                "SubnetId" : {
                  "type" : "string",
                  "description" : "The ID of the Subnet for the VM."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the VM.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "UserData" : {
                  "type" : "string",
                  "description" : "The Base64-encoded MIME user data."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM."
                },
                "VmInitiatedShutdownBehavior" : {
                  "type" : "string",
                  "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted."
                },
                "VmType" : {
                  "type" : "string",
                  "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the VM."
            }
          }
        },
        "additionalProperties" : false
      },
      "PrivateIpLightForVm" : {
        "type" : "object",
        "properties" : {
          "IsPrimary" : {
            "type" : "boolean",
            "description" : "If true, the IP address is the primary private IP address of the NIC."
          },
          "LinkPublicIp" : {
            "type" : "object",
            "properties" : {
              "PublicDnsName" : {
                "type" : "string",
                "description" : "The name of the public DNS."
              },
              "PublicIp" : {
                "type" : "string",
                "description" : "The External IP address (EIP) associated with the NIC."
              },
              "PublicIpAccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the EIP."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the EIP associated with the NIC."
          },
          "PrivateDnsName" : {
            "type" : "string",
            "description" : "The name of the private DNS."
          },
          "PrivateIp" : {
            "type" : "string",
            "description" : "The private IP address."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the private IP of the NIC."
      },
      "FiltersServerCertificate" : {
        "type" : "object",
        "properties" : {
          "Paths" : {
            "type" : "array",
            "description" : "The paths to the server certificates.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadConsumptionAccountRequest" : {
        "required" : [ "FromDate", "ToDate" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "FromDate" : {
            "type" : "string",
            "description" : "The beginning of the time period, in ISO 8601 date-time format (for example, `2017-06-14` or `2017-06-14T00:00:00Z`).",
            "format" : "datetime"
          },
          "ToDate" : {
            "type" : "string",
            "description" : "The end of the time period, in ISO 8601 date-time format (for example, `2017-06-30` or `2017-06-30T00:00:00Z`).",
            "format" : "datetime"
          }
        },
        "additionalProperties" : false
      },
      "DeleteRouteRequest" : {
        "required" : [ "DestinationIpRange", "RouteTableId" ],
        "type" : "object",
        "properties" : {
          "DestinationIpRange" : {
            "type" : "string",
            "description" : "The exact IP range for the route."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "RouteTableId" : {
            "type" : "string",
            "description" : "The ID of the route table from which you want to delete a route."
          }
        },
        "additionalProperties" : false
      },
      "FiltersLoadBalancer" : {
        "type" : "object",
        "properties" : {
          "LoadBalancerNames" : {
            "type" : "array",
            "description" : "The names of the load balancers.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadDirectLinksResponse" : {
        "type" : "object",
        "properties" : {
          "DirectLinks" : {
            "type" : "array",
            "description" : "Information about one or more DirectLinks.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the DirectLink."
                },
                "Bandwidth" : {
                  "type" : "string",
                  "description" : "The physical link bandwidth (either 1 Gbps or 10 Gbps)."
                },
                "DirectLinkId" : {
                  "type" : "string",
                  "description" : "The ID of the DirectLink (for example, dxcon-xxxxxxxx)."
                },
                "DirectLinkName" : {
                  "type" : "string",
                  "description" : "The name of the DirectLink."
                },
                "Location" : {
                  "type" : "string",
                  "description" : "The datacenter where the DirectLink is located."
                },
                "RegionName" : {
                  "type" : "string",
                  "description" : "The Region in which the DirectLink has been created."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the DirectLink.<br />\n* `requested`: The DirectLink is requested but the request has not been validated yet.<br />\n* `pending`: The DirectLink request has been validated. It remains in the `pending` state until you establish the physical link.<br />\n* `available`: The physical link is established and the connection is ready to use.<br />\n* `deleting`: The deletion process is in progress.<br />\n* `deleted`: The DirectLink is deleted."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the DirectLink."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "PublicIp" : {
        "type" : "object",
        "properties" : {
          "LinkPublicIpId" : {
            "type" : "string",
            "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
          },
          "NicAccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the NIC."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC the EIP is associated with (if any)."
          },
          "PrivateIp" : {
            "type" : "string",
            "description" : "The private IP address associated with the EIP."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The External IP address (EIP) associated with the NAT service."
          },
          "PublicIpId" : {
            "type" : "string",
            "description" : "The allocation ID of the EIP associated with the NAT service."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the EIP.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM the External IP (EIP) is associated with (if any)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the public IP."
      },
      "UpdateSnapshotResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Snapshot" : {
            "type" : "object",
            "properties" : {
              "AccountAlias" : {
                "type" : "string",
                "description" : "The account alias of the owner of the snapshot."
              },
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the snapshot."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the snapshot."
              },
              "PermissionsToCreateVolume" : {
                "type" : "object",
                "properties" : {
                  "AccountIds" : {
                    "type" : "array",
                    "description" : "The account ID of one or more users who have permissions for the resource.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "GlobalPermission" : {
                    "type" : "boolean",
                    "description" : "If true, the resource is public. If false, the resource is private."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the users who have permissions for the resource."
              },
              "Progress" : {
                "type" : "integer",
                "description" : "The progress of the snapshot, as a percentage."
              },
              "SnapshotId" : {
                "type" : "string",
                "description" : "The ID of the snapshot."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the snapshot (`in-queue` \\| `completed` \\| `error`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the snapshot.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "VolumeId" : {
                "type" : "string",
                "description" : "The ID of the volume used to create the snapshot."
              },
              "VolumeSize" : {
                "type" : "integer",
                "description" : "The size of the volume used to create the snapshot, in gibibytes (GiB)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the snapshot."
          }
        },
        "additionalProperties" : false
      },
      "ReadCasRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "CaFingerprints" : {
                "type" : "array",
                "description" : "The fingerprints of the CAs.",
                "items" : {
                  "type" : "string"
                }
              },
              "CaIds" : {
                "type" : "array",
                "description" : "The IDs of the CAs.",
                "items" : {
                  "type" : "string"
                }
              },
              "Descriptions" : {
                "type" : "array",
                "description" : "The descriptions of the CAs.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "CreateFlexibleGpuRequest" : {
        "required" : [ "ModelName", "SubregionName" ],
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "If true, the fGPU is deleted when the VM is terminated.",
            "default" : false
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Generation" : {
            "type" : "string",
            "description" : "The processor generation that the fGPU must be compatible with. If not specified, the oldest possible processor generation is selected (as provided by [ReadFlexibleGpuCatalog](#readflexiblegpucatalog) for the specified model of fGPU)."
          },
          "ModelName" : {
            "type" : "string",
            "description" : "The model of fGPU you want to allocate. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The Subregion in which you want to create the fGPU."
          }
        },
        "additionalProperties" : false
      },
      "ReadImagesResponse" : {
        "type" : "object",
        "properties" : {
          "Images" : {
            "type" : "array",
            "description" : "Information about one or more OMIs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountAlias" : {
                  "type" : "string",
                  "description" : "The account alias of the owner of the OMI."
                },
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the OMI."
                },
                "Architecture" : {
                  "type" : "string",
                  "description" : "The architecture of the OMI (by default, `i386`)."
                },
                "BlockDeviceMappings" : {
                  "type" : "array",
                  "description" : "One or more block device mappings.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "Bsu" : {
                        "type" : "object",
                        "properties" : {
                          "DeleteOnVmDeletion" : {
                            "type" : "boolean",
                            "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                          },
                          "Iops" : {
                            "type" : "integer",
                            "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                          },
                          "SnapshotId" : {
                            "type" : "string",
                            "description" : "The ID of the snapshot used to create the volume."
                          },
                          "VolumeSize" : {
                            "type" : "integer",
                            "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                          },
                          "VolumeType" : {
                            "type" : "string",
                            "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the BSU volume to create."
                      },
                      "DeviceName" : {
                        "type" : "string",
                        "description" : "The name of the device."
                      },
                      "VirtualDeviceName" : {
                        "type" : "string",
                        "description" : "The name of the virtual device (ephemeralN)."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more parameters used to automatically set up volumes when the VM is created."
                  }
                },
                "CreationDate" : {
                  "type" : "string",
                  "description" : "The date and time at which the OMI was created.",
                  "format" : "date"
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the OMI."
                },
                "FileLocation" : {
                  "type" : "string",
                  "description" : "The location of the bucket where the OMI files are stored."
                },
                "ImageId" : {
                  "type" : "string",
                  "description" : "The ID of the OMI."
                },
                "ImageName" : {
                  "type" : "string",
                  "description" : "The name of the OMI."
                },
                "ImageType" : {
                  "type" : "string",
                  "description" : "The type of the OMI."
                },
                "PermissionsToLaunch" : {
                  "type" : "object",
                  "properties" : {
                    "AccountIds" : {
                      "type" : "array",
                      "description" : "The account ID of one or more users who have permissions for the resource.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "GlobalPermission" : {
                      "type" : "boolean",
                      "description" : "If true, the resource is public. If false, the resource is private."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the users who have permissions for the resource."
                },
                "ProductCodes" : {
                  "type" : "array",
                  "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "RootDeviceName" : {
                  "type" : "string",
                  "description" : "The name of the root device."
                },
                "RootDeviceType" : {
                  "type" : "string",
                  "description" : "The type of root device used by the OMI (always `bsu`)."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the OMI (`pending` \\| `available` \\| `failed`)."
                },
                "StateComment" : {
                  "type" : "object",
                  "properties" : {
                    "StateCode" : {
                      "type" : "string",
                      "description" : "The code of the change of state."
                    },
                    "StateMessage" : {
                      "type" : "string",
                      "description" : "A message explaining the change of state."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the change of state."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the OMI.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the OMI."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DhcpOptionsSet" : {
        "type" : "object",
        "properties" : {
          "Default" : {
            "type" : "boolean",
            "description" : "If true, the DHCP options set is a default one. If false, it is not."
          },
          "DhcpOptionsSetId" : {
            "type" : "string",
            "description" : "The ID of the DHCP options set."
          },
          "DomainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "DomainNameServers" : {
            "type" : "array",
            "description" : "One or more IP addresses for the domain name servers.",
            "items" : {
              "type" : "string"
            }
          },
          "NtpServers" : {
            "type" : "array",
            "description" : "One or more IP addresses for the NTP servers.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the DHCP options set.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the DHCP options set."
      },
      "ReadSecretAccessKeyRequest" : {
        "required" : [ "AccessKeyId" ],
        "type" : "object",
        "properties" : {
          "AccessKeyId" : {
            "type" : "string",
            "description" : "The ID of the access key."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "DeregisterVmsInLoadBalancerResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadVmsHealthRequest" : {
        "required" : [ "LoadBalancerName" ],
        "type" : "object",
        "properties" : {
          "BackendVmIds" : {
            "type" : "array",
            "description" : "One or more IDs of back-end VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer."
          }
        },
        "additionalProperties" : false
      },
      "Net" : {
        "type" : "object",
        "properties" : {
          "DhcpOptionsSetId" : {
            "type" : "string",
            "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
          },
          "IpRange" : {
            "type" : "string",
            "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the Net (`pending` \\| `available`)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the Net.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "Tenancy" : {
            "type" : "string",
            "description" : "The VM tenancy in a Net."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the Net."
      },
      "CreatePublicIpResponse" : {
        "type" : "object",
        "properties" : {
          "PublicIp" : {
            "type" : "object",
            "properties" : {
              "LinkPublicIpId" : {
                "type" : "string",
                "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
              },
              "NicAccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the NIC."
              },
              "NicId" : {
                "type" : "string",
                "description" : "The ID of the NIC the EIP is associated with (if any)."
              },
              "PrivateIp" : {
                "type" : "string",
                "description" : "The private IP address associated with the EIP."
              },
              "PublicIp" : {
                "type" : "string",
                "description" : "The External IP address (EIP) associated with the NAT service."
              },
              "PublicIpId" : {
                "type" : "string",
                "description" : "The allocation ID of the EIP associated with the NAT service."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the EIP.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "VmId" : {
                "type" : "string",
                "description" : "The ID of the VM the External IP (EIP) is associated with (if any)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the public IP."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FiltersSubnet" : {
        "type" : "object",
        "properties" : {
          "AvailableIpsCounts" : {
            "type" : "array",
            "description" : "The number of available IPs.",
            "items" : {
              "type" : "integer"
            }
          },
          "IpRanges" : {
            "type" : "array",
            "description" : "The IP ranges in the Subnets, in CIDR notation (for example, 10.0.0.0/16).",
            "items" : {
              "type" : "string"
            }
          },
          "NetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets in which the Subnets are.",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the Subnets (`pending` \\| `available`).",
            "items" : {
              "type" : "string"
            }
          },
          "SubnetIds" : {
            "type" : "array",
            "description" : "The IDs of the Subnets.",
            "items" : {
              "type" : "string"
            }
          },
          "SubregionNames" : {
            "type" : "array",
            "description" : "The names of the Subregions in which the Subnets are located.",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the Subnets.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the Subnets.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the Subnets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "SecurityGroupsMember" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of a user."
          },
          "SecurityGroupId" : {
            "type" : "string",
            "description" : "The ID of the security group."
          },
          "SecurityGroupName" : {
            "type" : "string",
            "description" : "The name of the security group."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the member of a security group."
      },
      "ReadImagesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "AccountAliases" : {
                "type" : "array",
                "description" : "The account aliases of the owners of the OMIs.",
                "items" : {
                  "type" : "string"
                }
              },
              "AccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owners of the OMIs. By default, all the OMIs for which you have launch permissions are described.",
                "items" : {
                  "type" : "string"
                }
              },
              "Architectures" : {
                "type" : "array",
                "description" : "The architectures of the OMIs (`i386` \\| `x86_64`).",
                "items" : {
                  "type" : "string"
                }
              },
              "BlockDeviceMappingDeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "Whether the volumes are deleted or not when terminating the VM."
              },
              "BlockDeviceMappingDeviceNames" : {
                "type" : "array",
                "description" : "The device names for the volumes.",
                "items" : {
                  "type" : "string"
                }
              },
              "BlockDeviceMappingSnapshotIds" : {
                "type" : "array",
                "description" : "The IDs of the snapshots used to create the volumes.",
                "items" : {
                  "type" : "string"
                }
              },
              "BlockDeviceMappingVolumeSizes" : {
                "type" : "array",
                "description" : "The sizes of the volumes, in gibibytes (GiB).",
                "items" : {
                  "type" : "integer"
                }
              },
              "BlockDeviceMappingVolumeTypes" : {
                "type" : "array",
                "description" : "The types of volumes (`standard` \\| `gp2` \\| `io1`).",
                "items" : {
                  "type" : "string"
                }
              },
              "Descriptions" : {
                "type" : "array",
                "description" : "The descriptions of the OMIs, provided when they were created.",
                "items" : {
                  "type" : "string"
                }
              },
              "FileLocations" : {
                "type" : "array",
                "description" : "The locations of the buckets where the OMI files are stored.",
                "items" : {
                  "type" : "string"
                }
              },
              "Hypervisors" : {
                "type" : "array",
                "description" : "The hypervisor type of the OMI (always `xen`).",
                "items" : {
                  "type" : "string"
                }
              },
              "ImageIds" : {
                "type" : "array",
                "description" : "The IDs of the OMIs.",
                "items" : {
                  "type" : "string"
                }
              },
              "ImageNames" : {
                "type" : "array",
                "description" : "The names of the OMIs, provided when they were created.",
                "items" : {
                  "type" : "string"
                }
              },
              "PermissionsToLaunchAccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the users who have launch permissions for the OMIs.",
                "items" : {
                  "type" : "string"
                }
              },
              "PermissionsToLaunchGlobalPermission" : {
                "type" : "boolean",
                "description" : "If true, lists all public OMIs. If false, lists all private OMIs."
              },
              "ProductCodes" : {
                "type" : "array",
                "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                "items" : {
                  "type" : "string"
                }
              },
              "RootDeviceNames" : {
                "type" : "array",
                "description" : "The device names of the root devices (for example, `/dev/sda1`).",
                "items" : {
                  "type" : "string"
                }
              },
              "RootDeviceTypes" : {
                "type" : "array",
                "description" : "The types of root device used by the OMIs (always `bsu`).",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the OMIs (`pending` \\| `available` \\| `failed`).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the OMIs.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the OMIs.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the OMIs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              },
              "VirtualizationTypes" : {
                "type" : "array",
                "description" : "The virtualization types (always `hvm`).",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadNetsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "DhcpOptionsSetIds" : {
                "type" : "array",
                "description" : "The IDs of the DHCP options sets.",
                "items" : {
                  "type" : "string"
                }
              },
              "IpRanges" : {
                "type" : "array",
                "description" : "The IP ranges for the Nets, in CIDR notation (for example, 10.0.0.0/16).",
                "items" : {
                  "type" : "string"
                }
              },
              "IsDefault" : {
                "type" : "boolean",
                "description" : "If true, the Net used is the default one."
              },
              "NetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the Nets (`pending` \\| `available`).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the Nets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkPrivateIpsRequest" : {
        "required" : [ "NicId", "PrivateIps" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC."
          },
          "PrivateIps" : {
            "type" : "array",
            "description" : "One or more secondary private IP addresses you want to unassign from the NIC.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "PrivateIpLight" : {
        "type" : "object",
        "properties" : {
          "IsPrimary" : {
            "type" : "boolean",
            "description" : "If true, the IP address is the primary private IP address of the NIC."
          },
          "PrivateIp" : {
            "type" : "string",
            "description" : "The private IP address of the NIC."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the private IP."
      },
      "CreateSecurityGroupRequest" : {
        "required" : [ "Description", "SecurityGroupName" ],
        "type" : "object",
        "properties" : {
          "Description" : {
            "type" : "string",
            "description" : "A description for the security group, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net for the security group."
          },
          "SecurityGroupName" : {
            "type" : "string",
            "description" : "The name of the security group.<br />\nThis name must not start with `sg-`.</br>\nThis name must be unique and contain between 1 and 255 ASCII characters. Accented letters are not allowed."
          }
        },
        "additionalProperties" : false
      },
      "FiltersNet" : {
        "type" : "object",
        "properties" : {
          "DhcpOptionsSetIds" : {
            "type" : "array",
            "description" : "The IDs of the DHCP options sets.",
            "items" : {
              "type" : "string"
            }
          },
          "IpRanges" : {
            "type" : "array",
            "description" : "The IP ranges for the Nets, in CIDR notation (for example, 10.0.0.0/16).",
            "items" : {
              "type" : "string"
            }
          },
          "IsDefault" : {
            "type" : "boolean",
            "description" : "If true, the Net used is the default one."
          },
          "NetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the Nets (`pending` \\| `available`).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the Nets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "Subregion" : {
        "type" : "object",
        "properties" : {
          "RegionName" : {
            "type" : "string",
            "description" : "The name of the Region containing the Subregion."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the Subregion (`available` \\| `information` \\| `impaired` \\| `unavailable`)."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The name of the Subregion."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the Subregion."
      },
      "ReadNetAccessPointsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "NetAccessPointIds" : {
                "type" : "array",
                "description" : "The IDs of the Net access points.",
                "items" : {
                  "type" : "string"
                }
              },
              "NetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "ServiceNames" : {
                "type" : "array",
                "description" : "The names of the services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the Net access points (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the Net access points.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the Net access points.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the Net access points, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "PublicIpLight" : {
        "type" : "object",
        "properties" : {
          "PublicIp" : {
            "type" : "string",
            "description" : "The External IP address (EIP) associated with the NAT service."
          },
          "PublicIpId" : {
            "type" : "string",
            "description" : "The allocation ID of the EIP associated with the NAT service."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the public IP."
      },
      "UpdateAccessKeyResponse" : {
        "type" : "object",
        "properties" : {
          "AccessKey" : {
            "type" : "object",
            "properties" : {
              "AccessKeyId" : {
                "type" : "string",
                "description" : "The ID of the access key."
              },
              "CreationDate" : {
                "type" : "string",
                "description" : "The date and time of creation of the access key.",
                "format" : "datetime"
              },
              "ExpirationDate" : {
                "type" : "string",
                "description" : "The date at which the access key expires.",
                "format" : "datetime"
              },
              "LastModificationDate" : {
                "type" : "string",
                "description" : "The date and time of the last modification of the access key.",
                "format" : "datetime"
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the access key."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteKeypairRequest" : {
        "required" : [ "KeypairName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "KeypairName" : {
            "type" : "string",
            "description" : "The name of the keypair you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "ApiAccessRule" : {
        "type" : "object",
        "properties" : {
          "ApiAccessRuleId" : {
            "type" : "string",
            "description" : " The ID of the API access rule."
          },
          "CaIds" : {
            "type" : "array",
            "description" : "One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.",
            "items" : {
              "type" : "string"
            }
          },
          "Cns" : {
            "type" : "array",
            "description" : "One or more Client Certificate Common Names (CNs).",
            "items" : {
              "type" : "string"
            }
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the API access rule."
          },
          "IpRanges" : {
            "type" : "array",
            "description" : "One or more IP ranges used for the API access rule, in CIDR notation (for example, 192.0.2.0/16).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the API access rule."
      },
      "ReadApiAccessPolicyResponse" : {
        "type" : "object",
        "properties" : {
          "ApiAccessPolicy" : {
            "type" : "object",
            "properties" : {
              "MaxAccessKeyExpirationSeconds" : {
                "type" : "integer",
                "description" : "The maximum possible lifetime for your access keys, in seconds. If `0`, your access keys can have unlimited lifetimes.",
                "format" : "int64"
              },
              "RequireTrustedEnv" : {
                "type" : "boolean",
                "description" : "If true, a trusted session is activated, allowing you to bypass Certificate Authorities (CAs) enforcement. For more information, see the `ApiKeyAuth` authentication scheme in the [Authentication](#authentication) section."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the API access policy."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateNatServiceResponse" : {
        "type" : "object",
        "properties" : {
          "NatService" : {
            "type" : "object",
            "properties" : {
              "NatServiceId" : {
                "type" : "string",
                "description" : "The ID of the NAT service."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net in which the NAT service is."
              },
              "PublicIps" : {
                "type" : "array",
                "description" : "Information about the External IP address or addresses (EIPs) associated with the NAT service.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "PublicIp" : {
                      "type" : "string",
                      "description" : "The External IP address (EIP) associated with the NAT service."
                    },
                    "PublicIpId" : {
                      "type" : "string",
                      "description" : "The allocation ID of the EIP associated with the NAT service."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the public IP."
                }
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the NAT service (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
              },
              "SubnetId" : {
                "type" : "string",
                "description" : "The ID of the Subnet in which the NAT service is."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the NAT service.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the NAT service."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadAccessKeysResponse" : {
        "type" : "object",
        "properties" : {
          "AccessKeys" : {
            "type" : "array",
            "description" : "A list of access keys.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccessKeyId" : {
                  "type" : "string",
                  "description" : "The ID of the access key."
                },
                "CreationDate" : {
                  "type" : "string",
                  "description" : "The date and time of creation of the access key.",
                  "format" : "datetime"
                },
                "ExpirationDate" : {
                  "type" : "string",
                  "description" : "The date at which the access key expires.",
                  "format" : "datetime"
                },
                "LastModificationDate" : {
                  "type" : "string",
                  "description" : "The date and time of the last modification of the access key.",
                  "format" : "datetime"
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the access key."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateDirectLinkInterfaceResponse" : {
        "type" : "object",
        "properties" : {
          "DirectLinkInterface" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the DirectLink interface."
              },
              "BgpAsn" : {
                "type" : "integer",
                "description" : "The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface."
              },
              "BgpKey" : {
                "type" : "string",
                "description" : "The BGP authentication key."
              },
              "ClientPrivateIp" : {
                "type" : "string",
                "description" : "The IP address on the customer's side of the DirectLink interface."
              },
              "DirectLinkId" : {
                "type" : "string",
                "description" : "The ID of the DirectLink."
              },
              "DirectLinkInterfaceId" : {
                "type" : "string",
                "description" : "The ID of the DirectLink interface."
              },
              "DirectLinkInterfaceName" : {
                "type" : "string",
                "description" : "The name of the DirectLink interface."
              },
              "InterfaceType" : {
                "type" : "string",
                "description" : "The type of the DirectLink interface (always `private`)."
              },
              "Location" : {
                "type" : "string",
                "description" : "The datacenter where the DirectLink interface is located."
              },
              "OutscalePrivateIp" : {
                "type" : "string",
                "description" : "The IP address on the OUTSCALE side of the DirectLink interface."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the DirectLink interface (`pending` \\| `available` \\| `deleting` \\| `deleted` \\| `confirming` \\| `rejected` \\| `expired`)."
              },
              "VirtualGatewayId" : {
                "type" : "string",
                "description" : "The ID of the target virtual gateway."
              },
              "Vlan" : {
                "type" : "integer",
                "description" : "The VLAN number associated with the DirectLink interface."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the DirectLink interfaces."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkRouteTableRequest" : {
        "required" : [ "LinkRouteTableId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LinkRouteTableId" : {
            "type" : "string",
            "description" : "The ID of the association between the route table and the Subnet."
          }
        },
        "additionalProperties" : false
      },
      "UpdateNetRequest" : {
        "required" : [ "DhcpOptionsSetId", "NetId" ],
        "type" : "object",
        "properties" : {
          "DhcpOptionsSetId" : {
            "type" : "string",
            "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkVolumeResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "NatService" : {
        "type" : "object",
        "properties" : {
          "NatServiceId" : {
            "type" : "string",
            "description" : "The ID of the NAT service."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net in which the NAT service is."
          },
          "PublicIps" : {
            "type" : "array",
            "description" : "Information about the External IP address or addresses (EIPs) associated with the NAT service.",
            "items" : {
              "type" : "object",
              "properties" : {
                "PublicIp" : {
                  "type" : "string",
                  "description" : "The External IP address (EIP) associated with the NAT service."
                },
                "PublicIpId" : {
                  "type" : "string",
                  "description" : "The allocation ID of the EIP associated with the NAT service."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the public IP."
            }
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the NAT service (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet in which the NAT service is."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the NAT service.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the NAT service."
      },
      "DeleteVmsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Vms" : {
            "type" : "array",
            "description" : "Information about one or more terminated VMs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "CurrentState" : {
                  "type" : "string",
                  "description" : "The current state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                },
                "PreviousState" : {
                  "type" : "string",
                  "description" : "The previous state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the state of the VM."
            }
          }
        },
        "additionalProperties" : false
      },
      "DeleteLoadBalancerListenersResponse" : {
        "type" : "object",
        "properties" : {
          "LoadBalancer" : {
            "type" : "object",
            "properties" : {
              "AccessLog" : {
                "type" : "object",
                "properties" : {
                  "IsEnabled" : {
                    "type" : "boolean",
                    "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                  },
                  "OsuBucketName" : {
                    "type" : "string",
                    "description" : "The name of the OOS bucket for the access logs."
                  },
                  "OsuBucketPrefix" : {
                    "type" : "string",
                    "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                  },
                  "PublicationInterval" : {
                    "type" : "integer",
                    "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about access logs."
              },
              "ApplicationStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The stickiness policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieName" : {
                      "type" : "string",
                      "description" : "The name of the application cookie used for stickiness."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "BackendVmIds" : {
                "type" : "array",
                "description" : "One or more IDs of back-end VMs for the load balancer.",
                "items" : {
                  "type" : "string"
                }
              },
              "DnsName" : {
                "type" : "string",
                "description" : "The DNS name of the load balancer."
              },
              "HealthCheck" : {
                "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                "type" : "object",
                "properties" : {
                  "CheckInterval" : {
                    "type" : "integer",
                    "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                  },
                  "HealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                  },
                  "Path" : {
                    "type" : "string",
                    "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                  },
                  "Port" : {
                    "type" : "integer",
                    "description" : "The port number (between `1` and `65535`, both included)."
                  },
                  "Protocol" : {
                    "type" : "string",
                    "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                  },
                  "Timeout" : {
                    "type" : "integer",
                    "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                  },
                  "UnhealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the health check configuration."
              },
              "Listeners" : {
                "type" : "array",
                "description" : "The listeners for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "BackendPort" : {
                      "type" : "integer",
                      "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                    },
                    "BackendProtocol" : {
                      "type" : "string",
                      "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "LoadBalancerPort" : {
                      "type" : "integer",
                      "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                    },
                    "LoadBalancerProtocol" : {
                      "type" : "string",
                      "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "PolicyNames" : {
                      "type" : "array",
                      "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ServerCertificateId" : {
                      "type" : "string",
                      "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the listener."
                }
              },
              "LoadBalancerName" : {
                "type" : "string",
                "description" : "The name of the load balancer."
              },
              "LoadBalancerStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieExpirationPeriod" : {
                      "type" : "integer",
                      "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The name of the stickiness policy."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "LoadBalancerType" : {
                "type" : "string",
                "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the load balancer."
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceSecurityGroup" : {
                "type" : "object",
                "properties" : {
                  "SecurityGroupAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the security group."
                  },
                  "SecurityGroupName" : {
                    "type" : "string",
                    "description" : "The name of the security group."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
              },
              "Subnets" : {
                "type" : "array",
                "description" : "The ID of the Subnet in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The ID of the Subregion in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the load balancer.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the load balancer."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateSubnetRequest" : {
        "required" : [ "IpRange", "NetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "IpRange" : {
            "type" : "string",
            "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net for which you want to create a Subnet."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The name of the Subregion in which you want to create the Subnet."
          }
        },
        "additionalProperties" : false
      },
      "LinkNicRequest" : {
        "required" : [ "DeviceNumber", "NicId", "VmId" ],
        "type" : "object",
        "properties" : {
          "DeviceNumber" : {
            "type" : "integer",
            "description" : "The index of the VM device for the NIC attachment (between 1 and 7, both included)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC you want to attach."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM to which you want to attach the NIC."
          }
        },
        "additionalProperties" : false
      },
      "BsuToUpdateVm" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "If set to true, the volume is deleted when terminating the VM. If set to false, the volume is not deleted when terminating the VM."
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the BSU volume."
      },
      "SendResetPasswordEmailResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadVmTypesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "BsuOptimized" : {
                "type" : "boolean",
                "description" : "Indicates whether the VM is optimized for BSU I/O."
              },
              "MemorySizes" : {
                "type" : "array",
                "description" : "The amounts of memory, in gibibytes (GiB).",
                "items" : {
                  "type" : "number",
                  "format" : "float"
                }
              },
              "VcoreCounts" : {
                "type" : "array",
                "description" : "The numbers of vCores.",
                "items" : {
                  "type" : "integer"
                }
              },
              "VmTypeNames" : {
                "type" : "array",
                "description" : "The names of the VM types. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types).",
                "items" : {
                  "type" : "string"
                }
              },
              "VolumeCounts" : {
                "type" : "array",
                "description" : "The maximum number of ephemeral storage disks.",
                "items" : {
                  "type" : "integer"
                }
              },
              "VolumeSizes" : {
                "type" : "array",
                "description" : "The size of one ephemeral storage disk, in gibibytes (GiB).",
                "items" : {
                  "type" : "integer"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadVmsStateResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "VmStates" : {
            "type" : "array",
            "description" : "Information about one or more VM states.",
            "items" : {
              "type" : "object",
              "properties" : {
                "MaintenanceEvents" : {
                  "type" : "array",
                  "description" : "One or more scheduled events associated with the VM.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "Code" : {
                        "type" : "string",
                        "description" : "The code of the event (`system-reboot` \\| `system-maintenance`)."
                      },
                      "Description" : {
                        "type" : "string",
                        "description" : "The description of the event."
                      },
                      "NotAfter" : {
                        "type" : "string",
                        "description" : "The latest scheduled end time for the event.",
                        "format" : "date"
                      },
                      "NotBefore" : {
                        "type" : "string",
                        "description" : "The earliest scheduled start time for the event.",
                        "format" : "date"
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the maintenance event."
                  }
                },
                "SubregionName" : {
                  "type" : "string",
                  "description" : "The name of the Subregion of the VM."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM."
                },
                "VmState" : {
                  "type" : "string",
                  "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the states of the VMs."
            }
          }
        },
        "additionalProperties" : false
      },
      "UnlinkFlexibleGpuRequest" : {
        "required" : [ "FlexibleGpuId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "FlexibleGpuId" : {
            "type" : "string",
            "description" : "The ID of the fGPU you want to detach from your VM."
          }
        },
        "additionalProperties" : false
      },
      "DeleteRouteTableRequest" : {
        "required" : [ "RouteTableId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "RouteTableId" : {
            "type" : "string",
            "description" : "The ID of the route table you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "UpdateFlexibleGpuRequest" : {
        "required" : [ "FlexibleGpuId" ],
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "If true, the fGPU is deleted when the VM is terminated."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "FlexibleGpuId" : {
            "type" : "string",
            "description" : "The ID of the fGPU you want to modify."
          }
        },
        "additionalProperties" : false
      },
      "DeleteLoadBalancerPolicyResponse" : {
        "type" : "object",
        "properties" : {
          "LoadBalancer" : {
            "type" : "object",
            "properties" : {
              "AccessLog" : {
                "type" : "object",
                "properties" : {
                  "IsEnabled" : {
                    "type" : "boolean",
                    "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                  },
                  "OsuBucketName" : {
                    "type" : "string",
                    "description" : "The name of the OOS bucket for the access logs."
                  },
                  "OsuBucketPrefix" : {
                    "type" : "string",
                    "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                  },
                  "PublicationInterval" : {
                    "type" : "integer",
                    "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about access logs."
              },
              "ApplicationStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The stickiness policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieName" : {
                      "type" : "string",
                      "description" : "The name of the application cookie used for stickiness."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "BackendVmIds" : {
                "type" : "array",
                "description" : "One or more IDs of back-end VMs for the load balancer.",
                "items" : {
                  "type" : "string"
                }
              },
              "DnsName" : {
                "type" : "string",
                "description" : "The DNS name of the load balancer."
              },
              "HealthCheck" : {
                "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                "type" : "object",
                "properties" : {
                  "CheckInterval" : {
                    "type" : "integer",
                    "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                  },
                  "HealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                  },
                  "Path" : {
                    "type" : "string",
                    "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                  },
                  "Port" : {
                    "type" : "integer",
                    "description" : "The port number (between `1` and `65535`, both included)."
                  },
                  "Protocol" : {
                    "type" : "string",
                    "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                  },
                  "Timeout" : {
                    "type" : "integer",
                    "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                  },
                  "UnhealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the health check configuration."
              },
              "Listeners" : {
                "type" : "array",
                "description" : "The listeners for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "BackendPort" : {
                      "type" : "integer",
                      "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                    },
                    "BackendProtocol" : {
                      "type" : "string",
                      "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "LoadBalancerPort" : {
                      "type" : "integer",
                      "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                    },
                    "LoadBalancerProtocol" : {
                      "type" : "string",
                      "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "PolicyNames" : {
                      "type" : "array",
                      "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ServerCertificateId" : {
                      "type" : "string",
                      "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the listener."
                }
              },
              "LoadBalancerName" : {
                "type" : "string",
                "description" : "The name of the load balancer."
              },
              "LoadBalancerStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieExpirationPeriod" : {
                      "type" : "integer",
                      "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The name of the stickiness policy."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "LoadBalancerType" : {
                "type" : "string",
                "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the load balancer."
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceSecurityGroup" : {
                "type" : "object",
                "properties" : {
                  "SecurityGroupAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the security group."
                  },
                  "SecurityGroupName" : {
                    "type" : "string",
                    "description" : "The name of the security group."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
              },
              "Subnets" : {
                "type" : "array",
                "description" : "The ID of the Subnet in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The ID of the Subregion in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the load balancer.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the load balancer."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadNetPeeringsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "AccepterNetAccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owners of the peer Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "AccepterNetIpRanges" : {
                "type" : "array",
                "description" : "The IP ranges of the peer Nets, in CIDR notation (for example, 10.0.0.0/24).",
                "items" : {
                  "type" : "string"
                }
              },
              "AccepterNetNetIds" : {
                "type" : "array",
                "description" : "The IDs of the peer Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "NetPeeringIds" : {
                "type" : "array",
                "description" : "The IDs of the Net peering connections.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceNetAccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owners of the peer Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceNetIpRanges" : {
                "type" : "array",
                "description" : "The IP ranges of the peer Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceNetNetIds" : {
                "type" : "array",
                "description" : "The IDs of the peer Nets.",
                "items" : {
                  "type" : "string"
                }
              },
              "StateMessages" : {
                "type" : "array",
                "description" : "Additional information about the states of the Net peering connections.",
                "items" : {
                  "type" : "string"
                }
              },
              "StateNames" : {
                "type" : "array",
                "description" : "The states of the Net peering connections (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the Net peering connections.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the Net peering connections.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the Net peering connections, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadFlexibleGpusRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "Indicates whether the fGPU is deleted when terminating the VM."
              },
              "FlexibleGpuIds" : {
                "type" : "array",
                "description" : "One or more IDs of fGPUs.",
                "items" : {
                  "type" : "string"
                }
              },
              "Generations" : {
                "type" : "array",
                "description" : "The processor generations that the fGPUs are compatible with.",
                "items" : {
                  "type" : "string"
                }
              },
              "ModelNames" : {
                "type" : "array",
                "description" : "One or more models of fGPUs. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs).",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the fGPUs (`allocated` \\| `attaching` \\| `attached` \\| `detaching`).",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The Subregions where the fGPUs are located.",
                "items" : {
                  "type" : "string"
                }
              },
              "VmIds" : {
                "type" : "array",
                "description" : "One or more IDs of VMs.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadVirtualGatewaysResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "VirtualGateways" : {
            "type" : "array",
            "description" : "Information about one or more virtual gateways.",
            "items" : {
              "type" : "object",
              "properties" : {
                "ConnectionType" : {
                  "type" : "string",
                  "description" : "The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported)."
                },
                "NetToVirtualGatewayLinks" : {
                  "type" : "array",
                  "description" : "The Net to which the virtual gateway is attached.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "NetId" : {
                        "type" : "string",
                        "description" : "The ID of the Net to which the virtual gateway is attached."
                      },
                      "State" : {
                        "type" : "string",
                        "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the attachment."
                  }
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the virtual gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the virtual gateway.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "VirtualGatewayId" : {
                  "type" : "string",
                  "description" : "The ID of the virtual gateway."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the virtual gateway."
            }
          }
        },
        "additionalProperties" : false
      },
      "DeleteImageRequest" : {
        "required" : [ "ImageId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ImageId" : {
            "type" : "string",
            "description" : "The ID of the OMI you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "DeleteClientGatewayRequest" : {
        "required" : [ "ClientGatewayId" ],
        "type" : "object",
        "properties" : {
          "ClientGatewayId" : {
            "type" : "string",
            "description" : "The ID of the client gateway you want to delete."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "ReadVpnConnectionsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "BgpAsns" : {
                "type" : "array",
                "description" : "The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.",
                "items" : {
                  "type" : "integer"
                }
              },
              "ClientGatewayIds" : {
                "type" : "array",
                "description" : "The IDs of the client gateways.",
                "items" : {
                  "type" : "string"
                }
              },
              "ConnectionTypes" : {
                "type" : "array",
                "description" : "The types of the VPN connections (only `ipsec.1` is supported).",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteDestinationIpRanges" : {
                "type" : "array",
                "description" : "The destination IP ranges.",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the VPN connections (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                "items" : {
                  "type" : "string"
                }
              },
              "StaticRoutesOnly" : {
                "type" : "boolean",
                "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the VPN connections.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the VPN connections.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the VPN connections, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              },
              "VirtualGatewayIds" : {
                "type" : "array",
                "description" : "The IDs of the virtual gateways.",
                "items" : {
                  "type" : "string"
                }
              },
              "VpnConnectionIds" : {
                "type" : "array",
                "description" : "The IDs of the VPN connections.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "CreateVpnConnectionRequest" : {
        "required" : [ "ClientGatewayId", "ConnectionType", "VirtualGatewayId" ],
        "type" : "object",
        "properties" : {
          "ClientGatewayId" : {
            "type" : "string",
            "description" : "The ID of the client gateway."
          },
          "ConnectionType" : {
            "type" : "string",
            "description" : "The type of VPN connection (only `ipsec.1` is supported)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "StaticRoutesOnly" : {
            "type" : "boolean",
            "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the virtual gateway."
          }
        },
        "additionalProperties" : false
      },
      "CreateRouteResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "RouteTable" : {
            "type" : "object",
            "properties" : {
              "LinkRouteTables" : {
                "type" : "array",
                "description" : "One or more associations between the route table and Subnets.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "LinkRouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the association between the route table and the Subnet."
                    },
                    "Main" : {
                      "type" : "boolean",
                      "description" : "If true, the route table is the main one."
                    },
                    "RouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the route table."
                    },
                    "SubnetId" : {
                      "type" : "string",
                      "description" : "The ID of the Subnet."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "One or more associations between the route table and the Subnets."
                }
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the route table."
              },
              "RoutePropagatingVirtualGateways" : {
                "type" : "array",
                "description" : "Information about virtual gateways propagating routes.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "VirtualGatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the virtual gateway."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route propagating virtual gateway."
                }
              },
              "RouteTableId" : {
                "type" : "string",
                "description" : "The ID of the route table."
              },
              "Routes" : {
                "type" : "array",
                "description" : "One or more routes in the route table.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CreationMethod" : {
                      "type" : "string",
                      "description" : "The method used to create the route."
                    },
                    "DestinationIpRange" : {
                      "type" : "string",
                      "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                    },
                    "DestinationServiceId" : {
                      "type" : "string",
                      "description" : "The ID of the OUTSCALE service."
                    },
                    "GatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                    },
                    "NatServiceId" : {
                      "type" : "string",
                      "description" : "The ID of a NAT service attached to the Net."
                    },
                    "NetAccessPointId" : {
                      "type" : "string",
                      "description" : "The ID of the Net access point."
                    },
                    "NetPeeringId" : {
                      "type" : "string",
                      "description" : "The ID of the Net peering connection."
                    },
                    "NicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                    },
                    "VmAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the VM."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of a VM specified in a route in the table."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route."
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the route table.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the route table."
          }
        },
        "additionalProperties" : false
      },
      "LinkVirtualGatewayRequest" : {
        "required" : [ "NetId", "VirtualGatewayId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net to which you want to attach the virtual gateway."
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the virtual gateway."
          }
        },
        "additionalProperties" : false
      },
      "CreateSnapshotRequest" : {
        "type" : "object",
        "properties" : {
          "Description" : {
            "type" : "string",
            "description" : "A description for the snapshot."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "FileLocation" : {
            "type" : "string",
            "description" : "The pre-signed URL of the snapshot you want to import from the bucket."
          },
          "SnapshotSize" : {
            "type" : "integer",
            "description" : "The size of the snapshot you want to create in your account, in bytes. This size must be greater than or equal to the size of the original, uncompressed snapshot.",
            "format" : "int64"
          },
          "SourceRegionName" : {
            "type" : "string",
            "description" : "The name of the source Region, which must be the same as the Region of your account."
          },
          "SourceSnapshotId" : {
            "type" : "string",
            "description" : "The ID of the snapshot you want to copy."
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume you want to create a snapshot of."
          }
        },
        "additionalProperties" : false
      },
      "FiltersSubregion" : {
        "type" : "object",
        "properties" : {
          "SubregionNames" : {
            "type" : "array",
            "description" : "The names of the Subregions.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadApiAccessRulesResponse" : {
        "type" : "object",
        "properties" : {
          "ApiAccessRules" : {
            "type" : "array",
            "description" : "A list of API access rules.",
            "items" : {
              "type" : "object",
              "properties" : {
                "ApiAccessRuleId" : {
                  "type" : "string",
                  "description" : " The ID of the API access rule."
                },
                "CaIds" : {
                  "type" : "array",
                  "description" : "One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "Cns" : {
                  "type" : "array",
                  "description" : "One or more Client Certificate Common Names (CNs).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the API access rule."
                },
                "IpRanges" : {
                  "type" : "array",
                  "description" : "One or more IP ranges used for the API access rule, in CIDR notation (for example, 192.0.2.0/16).",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the API access rule."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FiltersVolume" : {
        "type" : "object",
        "properties" : {
          "CreationDates" : {
            "type" : "array",
            "description" : "The dates and times at which the volumes were created.",
            "items" : {
              "type" : "string",
              "format" : "date"
            }
          },
          "LinkVolumeDeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "Whether the volumes are deleted or not when terminating the VMs."
          },
          "LinkVolumeDeviceNames" : {
            "type" : "array",
            "description" : "The VM device names.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkVolumeLinkDates" : {
            "type" : "array",
            "description" : "The dates and times at which the volumes were created.",
            "items" : {
              "type" : "string",
              "format" : "date"
            }
          },
          "LinkVolumeLinkStates" : {
            "type" : "array",
            "description" : "The attachment states of the volumes (`attaching` \\| `detaching` \\| `attached` \\| `detached`).",
            "items" : {
              "type" : "string"
            }
          },
          "LinkVolumeVmIds" : {
            "type" : "array",
            "description" : "One or more IDs of VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "SnapshotIds" : {
            "type" : "array",
            "description" : "The snapshots from which the volumes were created.",
            "items" : {
              "type" : "string"
            }
          },
          "SubregionNames" : {
            "type" : "array",
            "description" : "The names of the Subregions in which the volumes were created.",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the volumes.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the volumes.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the volumes, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          },
          "VolumeIds" : {
            "type" : "array",
            "description" : "The IDs of the volumes.",
            "items" : {
              "type" : "string"
            }
          },
          "VolumeSizes" : {
            "type" : "array",
            "description" : "The sizes of the volumes, in gibibytes (GiB).",
            "items" : {
              "type" : "integer"
            }
          },
          "VolumeStates" : {
            "type" : "array",
            "description" : "The states of the volumes (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`).",
            "items" : {
              "type" : "string"
            }
          },
          "VolumeTypes" : {
            "type" : "array",
            "description" : "The types of the volumes (`standard` \\| `gp2` \\| `io1`).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "CreateNicResponse" : {
        "type" : "object",
        "properties" : {
          "Nic" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the NIC."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the NIC."
              },
              "IsSourceDestChecked" : {
                "type" : "boolean",
                "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
              },
              "LinkNic" : {
                "type" : "object",
                "properties" : {
                  "DeleteOnVmDeletion" : {
                    "type" : "boolean",
                    "description" : "If true, the NIC is deleted when the VM is terminated."
                  },
                  "DeviceNumber" : {
                    "type" : "integer",
                    "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                  },
                  "LinkNicId" : {
                    "type" : "string",
                    "description" : "The ID of the NIC to attach."
                  },
                  "State" : {
                    "type" : "string",
                    "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                  },
                  "VmAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the VM."
                  },
                  "VmId" : {
                    "type" : "string",
                    "description" : "The ID of the VM."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the NIC attachment."
              },
              "LinkPublicIp" : {
                "type" : "object",
                "properties" : {
                  "LinkPublicIpId" : {
                    "type" : "string",
                    "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                  },
                  "PublicDnsName" : {
                    "type" : "string",
                    "description" : "The name of the public DNS."
                  },
                  "PublicIp" : {
                    "type" : "string",
                    "description" : "The External IP address (EIP) associated with the NIC."
                  },
                  "PublicIpAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the EIP."
                  },
                  "PublicIpId" : {
                    "type" : "string",
                    "description" : "The allocation ID of the EIP."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the EIP association."
              },
              "MacAddress" : {
                "type" : "string",
                "description" : "The Media Access Control (MAC) address of the NIC."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the NIC."
              },
              "NicId" : {
                "type" : "string",
                "description" : "The ID of the NIC."
              },
              "PrivateDnsName" : {
                "type" : "string",
                "description" : "The name of the private DNS."
              },
              "PrivateIps" : {
                "type" : "array",
                "description" : "The private IP addresses of the NIC.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "IsPrimary" : {
                      "type" : "boolean",
                      "description" : "If true, the IP address is the primary private IP address of the NIC."
                    },
                    "LinkPublicIp" : {
                      "type" : "object",
                      "properties" : {
                        "LinkPublicIpId" : {
                          "type" : "string",
                          "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                        },
                        "PublicDnsName" : {
                          "type" : "string",
                          "description" : "The name of the public DNS."
                        },
                        "PublicIp" : {
                          "type" : "string",
                          "description" : "The External IP address (EIP) associated with the NIC."
                        },
                        "PublicIpAccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the EIP."
                        },
                        "PublicIpId" : {
                          "type" : "string",
                          "description" : "The allocation ID of the EIP."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the EIP association."
                    },
                    "PrivateDnsName" : {
                      "type" : "string",
                      "description" : "The name of the private DNS."
                    },
                    "PrivateIp" : {
                      "type" : "string",
                      "description" : "The private IP address of the NIC."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the private IP."
                }
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more IDs of security groups for the NIC.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "SecurityGroupId" : {
                      "type" : "string",
                      "description" : "The ID of the security group."
                    },
                    "SecurityGroupName" : {
                      "type" : "string",
                      "description" : "The name of the security group."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group."
                }
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
              },
              "SubnetId" : {
                "type" : "string",
                "description" : "The ID of the Subnet."
              },
              "SubregionName" : {
                "type" : "string",
                "description" : "The Subregion in which the NIC is located."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the NIC.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the NIC."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ListenerRule" : {
        "type" : "object",
        "properties" : {
          "Action" : {
            "type" : "string",
            "description" : "The type of action for the rule (always `forward`)."
          },
          "HostNamePattern" : {
            "type" : "string",
            "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]."
          },
          "ListenerId" : {
            "type" : "integer",
            "description" : "The ID of the listener."
          },
          "ListenerRuleId" : {
            "type" : "integer",
            "description" : "The ID of the listener rule."
          },
          "ListenerRuleName" : {
            "type" : "string",
            "description" : "A human-readable name for the listener rule."
          },
          "PathPattern" : {
            "type" : "string",
            "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
          },
          "Priority" : {
            "type" : "integer",
            "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
          },
          "VmIds" : {
            "type" : "array",
            "description" : "The IDs of the backend VMs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the listener rule."
      },
      "DirectLinkInterfaces" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the DirectLink interface."
          },
          "BgpAsn" : {
            "type" : "integer",
            "description" : "The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface."
          },
          "BgpKey" : {
            "type" : "string",
            "description" : "The BGP authentication key."
          },
          "ClientPrivateIp" : {
            "type" : "string",
            "description" : "The IP address on the customer's side of the DirectLink interface."
          },
          "DirectLinkId" : {
            "type" : "string",
            "description" : "The ID of the DirectLink."
          },
          "DirectLinkInterfaceId" : {
            "type" : "string",
            "description" : "The ID of the DirectLink interface."
          },
          "DirectLinkInterfaceName" : {
            "type" : "string",
            "description" : "The name of the DirectLink interface."
          },
          "InterfaceType" : {
            "type" : "string",
            "description" : "The type of the DirectLink interface (always `private`)."
          },
          "Location" : {
            "type" : "string",
            "description" : "The datacenter where the DirectLink interface is located."
          },
          "OutscalePrivateIp" : {
            "type" : "string",
            "description" : "The IP address on the OUTSCALE side of the DirectLink interface."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the DirectLink interface (`pending` \\| `available` \\| `deleting` \\| `deleted` \\| `confirming` \\| `rejected` \\| `expired`)."
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the target virtual gateway."
          },
          "Vlan" : {
            "type" : "integer",
            "description" : "The VLAN number associated with the DirectLink interface."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the DirectLink interfaces."
      },
      "ReadSnapshotsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "AccountAliases" : {
                "type" : "array",
                "description" : "The account aliases of the owners of the snapshots.",
                "items" : {
                  "type" : "string"
                }
              },
              "AccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owners of the snapshots.",
                "items" : {
                  "type" : "string"
                }
              },
              "Descriptions" : {
                "type" : "array",
                "description" : "The descriptions of the snapshots.",
                "items" : {
                  "type" : "string"
                }
              },
              "PermissionsToCreateVolumeAccountIds" : {
                "type" : "array",
                "description" : "The account IDs of one or more users who have permissions to create volumes.",
                "items" : {
                  "type" : "string"
                }
              },
              "PermissionsToCreateVolumeGlobalPermission" : {
                "type" : "boolean",
                "description" : "If true, lists all public volumes. If false, lists all private volumes."
              },
              "Progresses" : {
                "type" : "array",
                "description" : "The progresses of the snapshots, as a percentage.",
                "items" : {
                  "type" : "integer"
                }
              },
              "SnapshotIds" : {
                "type" : "array",
                "description" : "The IDs of the snapshots.",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the snapshots (`in-queue` \\| `completed` \\| `error`).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the snapshots.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the snapshots.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the snapshots, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              },
              "VolumeIds" : {
                "type" : "array",
                "description" : "The IDs of the volumes used to create the snapshots.",
                "items" : {
                  "type" : "string"
                }
              },
              "VolumeSizes" : {
                "type" : "array",
                "description" : "The sizes of the volumes used to create the snapshots, in gibibytes (GiB).",
                "items" : {
                  "type" : "integer"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "Nic" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the NIC."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the NIC."
          },
          "IsSourceDestChecked" : {
            "type" : "boolean",
            "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
          },
          "LinkNic" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "If true, the NIC is deleted when the VM is terminated."
              },
              "DeviceNumber" : {
                "type" : "integer",
                "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
              },
              "LinkNicId" : {
                "type" : "string",
                "description" : "The ID of the NIC to attach."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
              },
              "VmAccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the VM."
              },
              "VmId" : {
                "type" : "string",
                "description" : "The ID of the VM."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the NIC attachment."
          },
          "LinkPublicIp" : {
            "type" : "object",
            "properties" : {
              "LinkPublicIpId" : {
                "type" : "string",
                "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
              },
              "PublicDnsName" : {
                "type" : "string",
                "description" : "The name of the public DNS."
              },
              "PublicIp" : {
                "type" : "string",
                "description" : "The External IP address (EIP) associated with the NIC."
              },
              "PublicIpAccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the EIP."
              },
              "PublicIpId" : {
                "type" : "string",
                "description" : "The allocation ID of the EIP."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the EIP association."
          },
          "MacAddress" : {
            "type" : "string",
            "description" : "The Media Access Control (MAC) address of the NIC."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net for the NIC."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC."
          },
          "PrivateDnsName" : {
            "type" : "string",
            "description" : "The name of the private DNS."
          },
          "PrivateIps" : {
            "type" : "array",
            "description" : "The private IP addresses of the NIC.",
            "items" : {
              "type" : "object",
              "properties" : {
                "IsPrimary" : {
                  "type" : "boolean",
                  "description" : "If true, the IP address is the primary private IP address of the NIC."
                },
                "LinkPublicIp" : {
                  "type" : "object",
                  "properties" : {
                    "LinkPublicIpId" : {
                      "type" : "string",
                      "description" : "(Required in a Net) The ID representing the association of the EIP with the VM or the NIC."
                    },
                    "PublicDnsName" : {
                      "type" : "string",
                      "description" : "The name of the public DNS."
                    },
                    "PublicIp" : {
                      "type" : "string",
                      "description" : "The External IP address (EIP) associated with the NIC."
                    },
                    "PublicIpAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the EIP."
                    },
                    "PublicIpId" : {
                      "type" : "string",
                      "description" : "The allocation ID of the EIP."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the EIP association."
                },
                "PrivateDnsName" : {
                  "type" : "string",
                  "description" : "The name of the private DNS."
                },
                "PrivateIp" : {
                  "type" : "string",
                  "description" : "The private IP address of the NIC."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the private IP."
            }
          },
          "SecurityGroups" : {
            "type" : "array",
            "description" : "One or more IDs of security groups for the NIC.",
            "items" : {
              "type" : "object",
              "properties" : {
                "SecurityGroupId" : {
                  "type" : "string",
                  "description" : "The ID of the security group."
                },
                "SecurityGroupName" : {
                  "type" : "string",
                  "description" : "The name of the security group."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the security group."
            }
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The Subregion in which the NIC is located."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the NIC.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the NIC."
      },
      "LinkFlexibleGpuResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "SecurityGroupRule" : {
        "type" : "object",
        "properties" : {
          "FromPortRange" : {
            "type" : "integer",
            "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
          },
          "IpProtocol" : {
            "type" : "string",
            "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
          },
          "IpRanges" : {
            "type" : "array",
            "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
            "items" : {
              "type" : "string"
            }
          },
          "SecurityGroupsMembers" : {
            "type" : "array",
            "description" : "Information about one or more members of a security group.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of a user."
                },
                "SecurityGroupId" : {
                  "type" : "string",
                  "description" : "The ID of the security group."
                },
                "SecurityGroupName" : {
                  "type" : "string",
                  "description" : "The name of the security group."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the member of a security group."
            }
          },
          "ServiceIds" : {
            "type" : "array",
            "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
            "items" : {
              "type" : "string"
            }
          },
          "ToPortRange" : {
            "type" : "integer",
            "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the security group rule."
      },
      "FiltersApiLog" : {
        "type" : "object",
        "properties" : {
          "QueryAccessKeys" : {
            "type" : "array",
            "description" : "The access keys used for the logged calls.",
            "items" : {
              "type" : "string"
            }
          },
          "QueryApiNames" : {
            "type" : "array",
            "description" : "The names of the APIs of the logged calls (always `oapi` for the OUTSCALE API).",
            "items" : {
              "type" : "string"
            }
          },
          "QueryCallNames" : {
            "type" : "array",
            "description" : "The names of the logged calls.",
            "items" : {
              "type" : "string"
            }
          },
          "QueryDateAfter" : {
            "type" : "string",
            "description" : "The date after which you want to retrieve logged calls, in ISO 8601 format (for example, `2020-06-14`). By default, this date is set to 2 days ago.",
            "format" : "date"
          },
          "QueryDateBefore" : {
            "type" : "string",
            "description" : "The date before which you want to retrieve logged calls, in ISO 8601 format (for example, `2020-06-30`). By default, this date is set to now.",
            "format" : "date"
          },
          "QueryIpAddresses" : {
            "type" : "array",
            "description" : "The IP addresses used for the logged calls.",
            "items" : {
              "type" : "string"
            }
          },
          "QueryUserAgents" : {
            "type" : "array",
            "description" : "The user agents of the HTTP requests of the logged calls.",
            "items" : {
              "type" : "string"
            }
          },
          "RequestIds" : {
            "type" : "array",
            "description" : "The request IDs provided in the responses of the logged calls.",
            "items" : {
              "type" : "string"
            }
          },
          "ResponseStatusCodes" : {
            "type" : "array",
            "description" : "The HTTP status codes of the logged calls.",
            "items" : {
              "type" : "integer"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "OsuApiKey" : {
        "type" : "object",
        "properties" : {
          "ApiKeyId" : {
            "type" : "string",
            "description" : "The API key of the OOS account that enables you to access the bucket."
          },
          "SecretKey" : {
            "type" : "string",
            "description" : "The secret key of the OOS account that enables you to access the bucket."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the OOS API key."
      },
      "CreateAccessKeyRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ExpirationDate" : {
            "type" : "string",
            "description" : "The date and time at which you want the access key to expire, in ISO 8601 format (for example, `2017-06-14` or `2017-06-14T00:00:00Z`). If not specified, the access key has no expiration date.",
            "format" : "datetime"
          }
        },
        "additionalProperties" : false
      },
      "ReadDirectLinksRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "DirectLinkIds" : {
                "type" : "array",
                "description" : "The IDs of the DirectLinks.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadInternetServicesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "InternetServiceIds" : {
                "type" : "array",
                "description" : "The IDs of the Internet services.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkNetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets the Internet services are attached to.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkStates" : {
                "type" : "array",
                "description" : "The current states of the attachments between the Internet services and the Nets (only `available`, if the Internet gateway is attached to a VPC).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the Internet services.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the Internet services.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the Internet services, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "DeleteLoadBalancerPolicyRequest" : {
        "required" : [ "LoadBalancerName", "PolicyName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer for which you want to delete a policy."
          },
          "PolicyName" : {
            "type" : "string",
            "description" : "The name of the policy you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "FiltersFlexibleGpu" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "Indicates whether the fGPU is deleted when terminating the VM."
          },
          "FlexibleGpuIds" : {
            "type" : "array",
            "description" : "One or more IDs of fGPUs.",
            "items" : {
              "type" : "string"
            }
          },
          "Generations" : {
            "type" : "array",
            "description" : "The processor generations that the fGPUs are compatible with.",
            "items" : {
              "type" : "string"
            }
          },
          "ModelNames" : {
            "type" : "array",
            "description" : "One or more models of fGPUs. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs).",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the fGPUs (`allocated` \\| `attaching` \\| `attached` \\| `detaching`).",
            "items" : {
              "type" : "string"
            }
          },
          "SubregionNames" : {
            "type" : "array",
            "description" : "The Subregions where the fGPUs are located.",
            "items" : {
              "type" : "string"
            }
          },
          "VmIds" : {
            "type" : "array",
            "description" : "One or more IDs of VMs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "CreateLoadBalancerListenersRequest" : {
        "required" : [ "Listeners", "LoadBalancerName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Listeners" : {
            "type" : "array",
            "description" : "One or more listeners for the load balancer.",
            "items" : {
              "required" : [ "BackendPort", "LoadBalancerPort", "LoadBalancerProtocol" ],
              "type" : "object",
              "properties" : {
                "BackendPort" : {
                  "type" : "integer",
                  "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                },
                "BackendProtocol" : {
                  "type" : "string",
                  "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                },
                "LoadBalancerPort" : {
                  "type" : "integer",
                  "description" : "The port on which the load balancer is listening (between `1` and `65535`, both included)."
                },
                "LoadBalancerProtocol" : {
                  "type" : "string",
                  "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                },
                "ServerCertificateId" : {
                  "type" : "string",
                  "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the listener to create."
            }
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer for which you want to create listeners."
          }
        },
        "additionalProperties" : false
      },
      "ReadVmsStateRequest" : {
        "type" : "object",
        "properties" : {
          "AllVms" : {
            "type" : "boolean",
            "description" : "If true, includes the status of all VMs. By default or if set to false, only includes the status of running VMs."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "MaintenanceEventCodes" : {
                "type" : "array",
                "description" : "The code for the scheduled event (`system-reboot` | `system-maintenance`).",
                "items" : {
                  "type" : "string"
                }
              },
              "MaintenanceEventDescriptions" : {
                "type" : "array",
                "description" : "The description of the scheduled event.",
                "items" : {
                  "type" : "string"
                }
              },
              "MaintenanceEventsNotAfter" : {
                "type" : "array",
                "description" : "The latest time the event can end.",
                "items" : {
                  "type" : "string",
                  "format" : "date"
                }
              },
              "MaintenanceEventsNotBefore" : {
                "type" : "array",
                "description" : "The earliest time the event can start.",
                "items" : {
                  "type" : "string",
                  "format" : "date"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The names of the Subregions of the VMs.",
                "items" : {
                  "type" : "string"
                }
              },
              "VmIds" : {
                "type" : "array",
                "description" : "One or more IDs of VMs.",
                "items" : {
                  "type" : "string"
                }
              },
              "VmStates" : {
                "type" : "array",
                "description" : "The states of the VMs (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkNicRequest" : {
        "required" : [ "LinkNicId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LinkNicId" : {
            "type" : "string",
            "description" : "The ID of the attachment operation."
          }
        },
        "additionalProperties" : false
      },
      "AcceptNetPeeringResponse" : {
        "type" : "object",
        "properties" : {
          "NetPeering" : {
            "type" : "object",
            "properties" : {
              "AccepterNet" : {
                "type" : "object",
                "properties" : {
                  "AccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the accepter Net."
                  },
                  "IpRange" : {
                    "type" : "string",
                    "description" : "The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16)."
                  },
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the accepter Net."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the accepter Net."
              },
              "NetPeeringId" : {
                "type" : "string",
                "description" : "The ID of the Net peering connection."
              },
              "SourceNet" : {
                "type" : "object",
                "properties" : {
                  "AccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the source Net."
                  },
                  "IpRange" : {
                    "type" : "string",
                    "description" : "The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16)."
                  },
                  "NetId" : {
                    "type" : "string",
                    "description" : "The ID of the source Net."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the source Net."
              },
              "State" : {
                "type" : "object",
                "properties" : {
                  "Message" : {
                    "type" : "string",
                    "description" : "Additional information about the state of the Net peering connection."
                  },
                  "Name" : {
                    "type" : "string",
                    "description" : "The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the state of the Net peering connection."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Net peering connection.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Net peering connection."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadClientGatewaysRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "BgpAsns" : {
                "type" : "array",
                "description" : "The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.",
                "items" : {
                  "type" : "integer"
                }
              },
              "ClientGatewayIds" : {
                "type" : "array",
                "description" : "The IDs of the client gateways.",
                "items" : {
                  "type" : "string"
                }
              },
              "ConnectionTypes" : {
                "type" : "array",
                "description" : "The types of communication tunnels used by the client gateways (only `ipsec.1` is supported).",
                "items" : {
                  "type" : "string"
                }
              },
              "PublicIps" : {
                "type" : "array",
                "description" : "The public IPv4 addresses of the client gateways.",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the client gateways (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the client gateways.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the client gateways.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the client gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "FiltersApiAccessRule" : {
        "type" : "object",
        "properties" : {
          "ApiAccessRuleIds" : {
            "type" : "array",
            "description" : "One or more IDs of API access rules.",
            "items" : {
              "type" : "string"
            }
          },
          "CaIds" : {
            "type" : "array",
            "description" : "One or more IDs of Client Certificate Authorities (CAs).",
            "items" : {
              "type" : "string"
            }
          },
          "Cns" : {
            "type" : "array",
            "description" : "One or more Client Certificate Common Names (CNs).",
            "items" : {
              "type" : "string"
            }
          },
          "Descriptions" : {
            "type" : "array",
            "description" : "One or more descriptions of API access rules.",
            "items" : {
              "type" : "string"
            }
          },
          "IpRanges" : {
            "type" : "array",
            "description" : "One or more IP ranges, in CIDR notation (for example, 192.0.2.0/16).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ServerCertificate" : {
        "type" : "object",
        "properties" : {
          "ExpirationDate" : {
            "type" : "string",
            "description" : "The date at which the server certificate expires.",
            "format" : "date"
          },
          "Id" : {
            "type" : "string",
            "description" : "The ID of the server certificate."
          },
          "Name" : {
            "type" : "string",
            "description" : "The name of the server certificate."
          },
          "Path" : {
            "type" : "string",
            "description" : "The path to the server certificate."
          },
          "UploadDate" : {
            "type" : "string",
            "description" : "The date at which the server certificate has been uploaded.",
            "format" : "date"
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the server certificate."
      },
      "CreateCaRequest" : {
        "required" : [ "CaPem" ],
        "type" : "object",
        "properties" : {
          "CaPem" : {
            "type" : "string",
            "description" : "The CA in PEM format."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the CA."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "RejectNetPeeringResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "Phase2Options" : {
        "type" : "object",
        "properties" : {
          "Phase2DhGroupNumbers" : {
            "type" : "array",
            "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 2.",
            "items" : {
              "type" : "integer"
            }
          },
          "Phase2EncryptionAlgorithms" : {
            "type" : "array",
            "description" : "The encryption algorithms allowed for the VPN tunnel for phase 2.",
            "items" : {
              "type" : "string"
            }
          },
          "Phase2IntegrityAlgorithms" : {
            "type" : "array",
            "description" : "The integrity algorithms allowed for the VPN tunnel for phase 2.",
            "items" : {
              "type" : "string"
            }
          },
          "Phase2LifetimeSeconds" : {
            "type" : "integer",
            "description" : "The lifetime for phase 2 of the Internet Key Exchange (IKE) negociation process, in seconds."
          },
          "PreSharedKey" : {
            "type" : "string",
            "description" : "The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. "
      },
      "ReadSnapshotExportTasksRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "TaskIds" : {
                "type" : "array",
                "description" : "The IDs of the export tasks.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "DeleteSecurityGroupRuleResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "SecurityGroup" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of a user that has been granted permission."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the security group."
              },
              "InboundRules" : {
                "type" : "array",
                "description" : "The inbound rules associated with the security group.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "FromPortRange" : {
                      "type" : "integer",
                      "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                    },
                    "IpProtocol" : {
                      "type" : "string",
                      "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                    },
                    "IpRanges" : {
                      "type" : "array",
                      "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "SecurityGroupsMembers" : {
                      "type" : "array",
                      "description" : "Information about one or more members of a security group.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of a user."
                          },
                          "SecurityGroupId" : {
                            "type" : "string",
                            "description" : "The ID of the security group."
                          },
                          "SecurityGroupName" : {
                            "type" : "string",
                            "description" : "The name of the security group."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the member of a security group."
                      }
                    },
                    "ServiceIds" : {
                      "type" : "array",
                      "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ToPortRange" : {
                      "type" : "integer",
                      "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group rule."
                }
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the security group."
              },
              "OutboundRules" : {
                "type" : "array",
                "description" : "The outbound rules associated with the security group.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "FromPortRange" : {
                      "type" : "integer",
                      "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                    },
                    "IpProtocol" : {
                      "type" : "string",
                      "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                    },
                    "IpRanges" : {
                      "type" : "array",
                      "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "SecurityGroupsMembers" : {
                      "type" : "array",
                      "description" : "Information about one or more members of a security group.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of a user."
                          },
                          "SecurityGroupId" : {
                            "type" : "string",
                            "description" : "The ID of the security group."
                          },
                          "SecurityGroupName" : {
                            "type" : "string",
                            "description" : "The name of the security group."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the member of a security group."
                      }
                    },
                    "ServiceIds" : {
                      "type" : "array",
                      "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ToPortRange" : {
                      "type" : "integer",
                      "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group rule."
                }
              },
              "SecurityGroupId" : {
                "type" : "string",
                "description" : "The ID of the security group."
              },
              "SecurityGroupName" : {
                "type" : "string",
                "description" : "The name of the security group."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the security group.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the security group."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkVirtualGatewayResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadSecretAccessKeyResponse" : {
        "type" : "object",
        "properties" : {
          "AccessKey" : {
            "type" : "object",
            "properties" : {
              "AccessKeyId" : {
                "type" : "string",
                "description" : "The ID of the secret access key."
              },
              "CreationDate" : {
                "type" : "string",
                "description" : "The date and time of creation of the secret access key.",
                "format" : "datetime"
              },
              "ExpirationDate" : {
                "type" : "string",
                "description" : "The date at which the access key expires.",
                "format" : "datetime"
              },
              "LastModificationDate" : {
                "type" : "string",
                "description" : "The date and time of the last modification of the secret access key.",
                "format" : "datetime"
              },
              "SecretKey" : {
                "type" : "string",
                "description" : "The secret access key that enables you to send requests."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the secret access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the secret access key."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateVolumeRequest" : {
        "required" : [ "VolumeId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Iops" : {
            "type" : "integer",
            "description" : "The new number of I/O operations per second (IOPS). This parameter can be specified only if you update an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`. This modification is instantaneous on a cold volume, not on a hot one."
          },
          "Size" : {
            "type" : "integer",
            "description" : "(cold volume only) The new size of the volume, in gibibytes (GiB). This value must be equal to or greater than the current size of the volume. This modification is not instantaneous."
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume you want to update."
          },
          "VolumeType" : {
            "type" : "string",
            "description" : "(cold volume only) The new type of the volume (`standard` \\| `io1` \\| `gp2`). This modification is instantaneous. If you update to an `io1` volume, you must also specify the `Iops` parameter."
          }
        },
        "additionalProperties" : false
      },
      "ReadVmTypesResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "VmTypes" : {
            "type" : "array",
            "description" : "Information about one or more VM types.",
            "items" : {
              "type" : "object",
              "properties" : {
                "BsuOptimized" : {
                  "type" : "boolean",
                  "description" : "Indicates whether the VM is optimized for BSU I/O."
                },
                "MaxPrivateIps" : {
                  "type" : "integer",
                  "description" : "The maximum number of private IP addresses per network interface card (NIC)."
                },
                "MemorySize" : {
                  "type" : "number",
                  "description" : "The amount of memory, in gibibytes.",
                  "format" : "float"
                },
                "VcoreCount" : {
                  "type" : "integer",
                  "description" : "The number of vCores."
                },
                "VmTypeName" : {
                  "type" : "string",
                  "description" : "The name of the VM type."
                },
                "VolumeCount" : {
                  "type" : "integer",
                  "description" : "The maximum number of ephemeral storage disks."
                },
                "VolumeSize" : {
                  "type" : "integer",
                  "description" : "The size of one ephemeral storage disk, in gibibytes (GiB)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the VM type."
            }
          }
        },
        "additionalProperties" : false
      },
      "ProductType" : {
        "type" : "object",
        "properties" : {
          "Description" : {
            "type" : "string",
            "description" : "The description of the product type."
          },
          "ProductTypeId" : {
            "type" : "string",
            "description" : "The ID of the product type."
          },
          "Vendor" : {
            "type" : "string",
            "description" : "The vendor of the product type."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the product type."
      },
      "DeleteVolumeResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadApiAccessRulesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "ApiAccessRuleIds" : {
                "type" : "array",
                "description" : "One or more IDs of API access rules.",
                "items" : {
                  "type" : "string"
                }
              },
              "CaIds" : {
                "type" : "array",
                "description" : "One or more IDs of Client Certificate Authorities (CAs).",
                "items" : {
                  "type" : "string"
                }
              },
              "Cns" : {
                "type" : "array",
                "description" : "One or more Client Certificate Common Names (CNs).",
                "items" : {
                  "type" : "string"
                }
              },
              "Descriptions" : {
                "type" : "array",
                "description" : "One or more descriptions of API access rules.",
                "items" : {
                  "type" : "string"
                }
              },
              "IpRanges" : {
                "type" : "array",
                "description" : "One or more IP ranges, in CIDR notation (for example, 192.0.2.0/16).",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "UpdateVmResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Vm" : {
            "type" : "object",
            "properties" : {
              "Architecture" : {
                "type" : "string",
                "description" : "The architecture of the VM (`i386` \\| `x86_64`)."
              },
              "BlockDeviceMappings" : {
                "type" : "array",
                "description" : "The block device mapping of the VM.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "Bsu" : {
                      "type" : "object",
                      "properties" : {
                        "DeleteOnVmDeletion" : {
                          "type" : "boolean",
                          "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                        },
                        "LinkDate" : {
                          "type" : "string",
                          "description" : "The time and date of attachment of the volume to the VM.",
                          "format" : "date"
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the volume."
                        },
                        "VolumeId" : {
                          "type" : "string",
                          "description" : "The ID of the volume."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the created BSU volume."
                    },
                    "DeviceName" : {
                      "type" : "string",
                      "description" : "The name of the device."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the created block device mapping."
                }
              },
              "BsuOptimized" : {
                "type" : "boolean",
                "description" : "If true, the VM is optimized for BSU I/O."
              },
              "ClientToken" : {
                "type" : "string",
                "description" : "The idempotency token provided when launching the VM."
              },
              "CreationDate" : {
                "type" : "string",
                "description" : "The date and time at which the VM was created.",
                "format" : "datetime"
              },
              "DeletionProtection" : {
                "type" : "boolean",
                "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
              },
              "Hypervisor" : {
                "type" : "string",
                "description" : "The hypervisor type of the VMs (`ovm` \\| `xen`)."
              },
              "ImageId" : {
                "type" : "string",
                "description" : "The ID of the OMI used to create the VM."
              },
              "IsSourceDestChecked" : {
                "type" : "boolean",
                "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
              },
              "KeypairName" : {
                "type" : "string",
                "description" : "The name of the keypair used when launching the VM."
              },
              "LaunchNumber" : {
                "type" : "integer",
                "description" : "The number for the VM when launching a group of several VMs (for example, 0, 1, 2, and so on)."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net in which the VM is running."
              },
              "Nics" : {
                "type" : "array",
                "description" : "(Net only) The network interface cards (NICs) the VMs are attached to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "AccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the NIC."
                    },
                    "Description" : {
                      "type" : "string",
                      "description" : "The description of the NIC."
                    },
                    "IsSourceDestChecked" : {
                      "type" : "boolean",
                      "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                    },
                    "LinkNic" : {
                      "type" : "object",
                      "properties" : {
                        "DeleteOnVmDeletion" : {
                          "type" : "boolean",
                          "description" : "If true, the NIC is deleted when the VM is terminated."
                        },
                        "DeviceNumber" : {
                          "type" : "integer",
                          "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                        },
                        "LinkNicId" : {
                          "type" : "string",
                          "description" : "The ID of the NIC to attach."
                        },
                        "State" : {
                          "type" : "string",
                          "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the network interface card (NIC)."
                    },
                    "LinkPublicIp" : {
                      "type" : "object",
                      "properties" : {
                        "PublicDnsName" : {
                          "type" : "string",
                          "description" : "The name of the public DNS."
                        },
                        "PublicIp" : {
                          "type" : "string",
                          "description" : "The External IP address (EIP) associated with the NIC."
                        },
                        "PublicIpAccountId" : {
                          "type" : "string",
                          "description" : "The account ID of the owner of the EIP."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the EIP associated with the NIC."
                    },
                    "MacAddress" : {
                      "type" : "string",
                      "description" : "The Media Access Control (MAC) address of the NIC."
                    },
                    "NetId" : {
                      "type" : "string",
                      "description" : "The ID of the Net for the NIC."
                    },
                    "NicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC."
                    },
                    "PrivateDnsName" : {
                      "type" : "string",
                      "description" : "The name of the private DNS."
                    },
                    "PrivateIps" : {
                      "type" : "array",
                      "description" : "The private IP address or addresses of the NIC.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "IsPrimary" : {
                            "type" : "boolean",
                            "description" : "If true, the IP address is the primary private IP address of the NIC."
                          },
                          "LinkPublicIp" : {
                            "type" : "object",
                            "properties" : {
                              "PublicDnsName" : {
                                "type" : "string",
                                "description" : "The name of the public DNS."
                              },
                              "PublicIp" : {
                                "type" : "string",
                                "description" : "The External IP address (EIP) associated with the NIC."
                              },
                              "PublicIpAccountId" : {
                                "type" : "string",
                                "description" : "The account ID of the owner of the EIP."
                              }
                            },
                            "additionalProperties" : false,
                            "description" : "Information about the EIP associated with the NIC."
                          },
                          "PrivateDnsName" : {
                            "type" : "string",
                            "description" : "The name of the private DNS."
                          },
                          "PrivateIp" : {
                            "type" : "string",
                            "description" : "The private IP address."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the private IP of the NIC."
                      }
                    },
                    "SecurityGroups" : {
                      "type" : "array",
                      "description" : "One or more IDs of security groups for the NIC.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "SecurityGroupId" : {
                            "type" : "string",
                            "description" : "The ID of the security group."
                          },
                          "SecurityGroupName" : {
                            "type" : "string",
                            "description" : "The name of the security group."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the security group."
                      }
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                    },
                    "SubnetId" : {
                      "type" : "string",
                      "description" : "The ID of the Subnet for the NIC."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the network interface card (NIC)."
                }
              },
              "OsFamily" : {
                "type" : "string",
                "description" : "Indicates the operating system (OS) of the VM."
              },
              "Performance" : {
                "type" : "string",
                "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`)."
              },
              "Placement" : {
                "type" : "object",
                "properties" : {
                  "SubregionName" : {
                    "type" : "string",
                    "description" : "The name of the Subregion."
                  },
                  "Tenancy" : {
                    "type" : "string",
                    "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the placement of the VM."
              },
              "PrivateDnsName" : {
                "type" : "string",
                "description" : "The name of the private DNS."
              },
              "PrivateIp" : {
                "type" : "string",
                "description" : "The primary private IP address of the VM."
              },
              "ProductCodes" : {
                "type" : "array",
                "description" : "The product code associated with the OMI used to create the VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                "items" : {
                  "type" : "string"
                }
              },
              "PublicDnsName" : {
                "type" : "string",
                "description" : "The name of the public DNS."
              },
              "PublicIp" : {
                "type" : "string",
                "description" : "The public IP address of the VM."
              },
              "ReservationId" : {
                "type" : "string",
                "description" : "The reservation ID of the VM."
              },
              "RootDeviceName" : {
                "type" : "string",
                "description" : "The name of the root device for the VM (for example, /dev/vda1)."
              },
              "RootDeviceType" : {
                "type" : "string",
                "description" : "The type of root device used by the VM (always `bsu`)."
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more security groups associated with the VM.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "SecurityGroupId" : {
                      "type" : "string",
                      "description" : "The ID of the security group."
                    },
                    "SecurityGroupName" : {
                      "type" : "string",
                      "description" : "The name of the security group."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group."
                }
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
              },
              "StateReason" : {
                "type" : "string",
                "description" : "The reason explaining the current state of the VM."
              },
              "SubnetId" : {
                "type" : "string",
                "description" : "The ID of the Subnet for the VM."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the VM.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "UserData" : {
                "type" : "string",
                "description" : "The Base64-encoded MIME user data."
              },
              "VmId" : {
                "type" : "string",
                "description" : "The ID of the VM."
              },
              "VmInitiatedShutdownBehavior" : {
                "type" : "string",
                "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted."
              },
              "VmType" : {
                "type" : "string",
                "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the VM."
          }
        },
        "additionalProperties" : false
      },
      "FiltersClientGateway" : {
        "type" : "object",
        "properties" : {
          "BgpAsns" : {
            "type" : "array",
            "description" : "The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.",
            "items" : {
              "type" : "integer"
            }
          },
          "ClientGatewayIds" : {
            "type" : "array",
            "description" : "The IDs of the client gateways.",
            "items" : {
              "type" : "string"
            }
          },
          "ConnectionTypes" : {
            "type" : "array",
            "description" : "The types of communication tunnels used by the client gateways (only `ipsec.1` is supported).",
            "items" : {
              "type" : "string"
            }
          },
          "PublicIps" : {
            "type" : "array",
            "description" : "The public IPv4 addresses of the client gateways.",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the client gateways (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the client gateways.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the client gateways.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the client gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "DeleteSubnetRequest" : {
        "required" : [ "SubnetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "UpdateRoutePropagationRequest" : {
        "required" : [ "Enable", "RouteTableId", "VirtualGatewayId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Enable" : {
            "type" : "boolean",
            "description" : "If true, a virtual gateway can propagate routes to a specified route table of a Net. If false, the propagation is disabled."
          },
          "RouteTableId" : {
            "type" : "string",
            "description" : "The ID of the route table."
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the virtual gateway."
          }
        },
        "additionalProperties" : false
      },
      "Volume" : {
        "type" : "object",
        "properties" : {
          "Iops" : {
            "type" : "integer",
            "description" : "The number of I/O operations per second (IOPS):<br />\n- For `io1` volumes, the number of provisioned IOPS<br />\n- For `gp2` volumes, the baseline performance of the volume"
          },
          "LinkedVolumes" : {
            "type" : "array",
            "description" : "Information about your volume attachment.",
            "items" : {
              "type" : "object",
              "properties" : {
                "DeleteOnVmDeletion" : {
                  "type" : "boolean",
                  "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                },
                "DeviceName" : {
                  "type" : "string",
                  "description" : "The name of the device."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`)."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM."
                },
                "VolumeId" : {
                  "type" : "string",
                  "description" : "The ID of the volume."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about volume attachment."
            }
          },
          "Size" : {
            "type" : "integer",
            "description" : "The size of the volume, in gibibytes (GiB)."
          },
          "SnapshotId" : {
            "type" : "string",
            "description" : "The snapshot from which the volume was created."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the volume (`creating` \\| `available` \\| `in-use` \\| `updating` \\| `deleting` \\| `error`)."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The Subregion in which the volume was created."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the volume.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume."
          },
          "VolumeType" : {
            "type" : "string",
            "description" : "The type of the volume (`standard` \\| `gp2` \\| `io1`)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the volume."
      },
      "FiltersPublicIp" : {
        "type" : "object",
        "properties" : {
          "LinkPublicIpIds" : {
            "type" : "array",
            "description" : "The IDs representing the associations of EIPs with VMs or NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "NicAccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owners of the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "NicIds" : {
            "type" : "array",
            "description" : "The IDs of the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "Placements" : {
            "type" : "array",
            "description" : "Whether the EIPs are for use in the public Cloud or in a Net.",
            "items" : {
              "type" : "string"
            }
          },
          "PrivateIps" : {
            "type" : "array",
            "description" : "The private IP addresses associated with the EIPs.",
            "items" : {
              "type" : "string"
            }
          },
          "PublicIpIds" : {
            "type" : "array",
            "description" : "The IDs of the External IP addresses (EIPs).",
            "items" : {
              "type" : "string"
            }
          },
          "PublicIps" : {
            "type" : "array",
            "description" : "The External IP addresses (EIPs).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the EIPs.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the EIPs.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the EIPs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          },
          "VmIds" : {
            "type" : "array",
            "description" : "The IDs of the VMs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "CreateLoadBalancerPolicyRequest" : {
        "required" : [ "LoadBalancerName", "PolicyName", "PolicyType" ],
        "type" : "object",
        "properties" : {
          "CookieExpirationPeriod" : {
            "type" : "integer",
            "description" : "The lifetime of the cookie, in seconds. If not specified, the default value of this parameter is 1, which means that the sticky session lasts for the duration of the browser session."
          },
          "CookieName" : {
            "type" : "string",
            "description" : "The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer for which you want to create a policy."
          },
          "PolicyName" : {
            "type" : "string",
            "description" : "The name of the policy. This name must be unique and consist of alphanumeric characters and dashes (-)."
          },
          "PolicyType" : {
            "type" : "string",
            "description" : "The type of stickiness policy you want to create: `app` or `load_balancer`."
          }
        },
        "additionalProperties" : false
      },
      "FiltersListenerRule" : {
        "type" : "object",
        "properties" : {
          "ListenerRuleNames" : {
            "type" : "array",
            "description" : "The names of the listener rules.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "CreateVpnConnectionRouteRequest" : {
        "required" : [ "DestinationIpRange", "VpnConnectionId" ],
        "type" : "object",
        "properties" : {
          "DestinationIpRange" : {
            "type" : "string",
            "description" : "The network prefix of the route, in CIDR notation (for example, 10.12.0.0/16)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VpnConnectionId" : {
            "type" : "string",
            "description" : "The ID of the target VPN connection of the static route."
          }
        },
        "additionalProperties" : false
      },
      "AccessLog" : {
        "type" : "object",
        "properties" : {
          "IsEnabled" : {
            "type" : "boolean",
            "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
          },
          "OsuBucketName" : {
            "type" : "string",
            "description" : "The name of the OOS bucket for the access logs."
          },
          "OsuBucketPrefix" : {
            "type" : "string",
            "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
          },
          "PublicationInterval" : {
            "type" : "integer",
            "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about access logs."
      },
      "UpdateAccountRequest" : {
        "type" : "object",
        "properties" : {
          "City" : {
            "type" : "string",
            "description" : "The new city of the account owner."
          },
          "CompanyName" : {
            "type" : "string",
            "description" : "The new name of the company for the account."
          },
          "Country" : {
            "type" : "string",
            "description" : "The new country of the account owner."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Email" : {
            "type" : "string",
            "description" : "The new email address for the account."
          },
          "FirstName" : {
            "type" : "string",
            "description" : "The new first name of the account owner."
          },
          "JobTitle" : {
            "type" : "string",
            "description" : "The new job title of the account owner."
          },
          "LastName" : {
            "type" : "string",
            "description" : "The new last name of the account owner."
          },
          "MobileNumber" : {
            "type" : "string",
            "description" : "The new mobile phone number of the account owner."
          },
          "PhoneNumber" : {
            "type" : "string",
            "description" : "The new landline phone number of the account owner."
          },
          "StateProvince" : {
            "type" : "string",
            "description" : "The new state/province of the account owner."
          },
          "VatNumber" : {
            "type" : "string",
            "description" : "The new value added tax (VAT) number for the account."
          },
          "ZipCode" : {
            "type" : "string",
            "description" : "The new ZIP code of the city."
          }
        },
        "additionalProperties" : false
      },
      "CreateSnapshotExportTaskResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "SnapshotExportTask" : {
            "type" : "object",
            "properties" : {
              "Comment" : {
                "type" : "string",
                "description" : "If the snapshot export task fails, an error message appears."
              },
              "OsuExport" : {
                "required" : [ "DiskImageFormat", "OsuBucket" ],
                "type" : "object",
                "properties" : {
                  "DiskImageFormat" : {
                    "type" : "string",
                    "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                  },
                  "OsuBucket" : {
                    "type" : "string",
                    "description" : "The name of the OOS bucket the snapshot is exported to."
                  },
                  "OsuPrefix" : {
                    "type" : "string",
                    "description" : "The prefix for the key of the OOS object corresponding to the snapshot."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the snapshot export task."
              },
              "Progress" : {
                "type" : "integer",
                "description" : "The progress of the snapshot export task, as a percentage."
              },
              "SnapshotId" : {
                "type" : "string",
                "description" : "The ID of the snapshot to be exported."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the snapshot export task (`pending` \\| `active` \\| `completed` \\| `failed`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the snapshot export task.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "TaskId" : {
                "type" : "string",
                "description" : "The ID of the snapshot export task."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the snapshot export task."
          }
        },
        "additionalProperties" : false
      },
      "VpnConnection" : {
        "type" : "object",
        "properties" : {
          "ClientGatewayConfiguration" : {
            "type" : "string",
            "description" : "Example configuration for the client gateway."
          },
          "ClientGatewayId" : {
            "type" : "string",
            "description" : "The ID of the client gateway used on the client end of the connection."
          },
          "ConnectionType" : {
            "type" : "string",
            "description" : "The type of VPN connection (always `ipsec.1`)."
          },
          "Routes" : {
            "type" : "array",
            "description" : "Information about one or more static routes associated with the VPN connection, if any.",
            "items" : {
              "type" : "object",
              "properties" : {
                "DestinationIpRange" : {
                  "type" : "string",
                  "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                },
                "RouteType" : {
                  "type" : "string",
                  "description" : "The type of route (always `static`)."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The current state of the static route (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the route."
            }
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the VPN connection (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
          },
          "StaticRoutesOnly" : {
            "type" : "boolean",
            "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the VPN connection.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the virtual gateway used on the OUTSCALE end of the connection."
          },
          "VpnConnectionId" : {
            "type" : "string",
            "description" : "The ID of the VPN connection."
          },
          "VpnOptions" : {
            "type" : "object",
            "properties" : {
              "Phase1Options" : {
                "type" : "object",
                "properties" : {
                  "DpdTimeoutAction" : {
                    "type" : "string",
                    "description" : "The action to carry out after a Dead Peer Detection (DPD) timeout occurs."
                  },
                  "DpdTimeoutSeconds" : {
                    "type" : "integer",
                    "description" : "The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds."
                  },
                  "IkeVersions" : {
                    "type" : "array",
                    "description" : "The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "Phase1DhGroupNumbers" : {
                    "type" : "array",
                    "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.",
                    "items" : {
                      "type" : "integer"
                    }
                  },
                  "Phase1EncryptionAlgorithms" : {
                    "type" : "array",
                    "description" : "The encryption algorithms allowed for the VPN tunnel for phase 1.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "Phase1IntegrityAlgorithms" : {
                    "type" : "array",
                    "description" : "The integrity algorithms allowed for the VPN tunnel for phase 1.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "Phase1LifetimeSeconds" : {
                    "type" : "integer",
                    "description" : "The lifetime for phase 1 of the IKE negotiation process, in seconds."
                  },
                  "ReplayWindowSize" : {
                    "type" : "integer",
                    "description" : "The number of packets in an IKE replay window."
                  },
                  "StartupAction" : {
                    "type" : "string",
                    "description" : "The action to carry out when establishing tunnels for a VPN connection."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. "
              },
              "Phase2Options" : {
                "type" : "object",
                "properties" : {
                  "Phase2DhGroupNumbers" : {
                    "type" : "array",
                    "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 2.",
                    "items" : {
                      "type" : "integer"
                    }
                  },
                  "Phase2EncryptionAlgorithms" : {
                    "type" : "array",
                    "description" : "The encryption algorithms allowed for the VPN tunnel for phase 2.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "Phase2IntegrityAlgorithms" : {
                    "type" : "array",
                    "description" : "The integrity algorithms allowed for the VPN tunnel for phase 2.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "Phase2LifetimeSeconds" : {
                    "type" : "integer",
                    "description" : "The lifetime for phase 2 of the Internet Key Exchange (IKE) negociation process, in seconds."
                  },
                  "PreSharedKey" : {
                    "type" : "string",
                    "description" : "The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. "
              },
              "TunnelInsideIpRange" : {
                "type" : "string",
                "description" : "The IP range for the tunnel in your VPN connection."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the VPN options."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about a VPN connection."
      },
      "DeleteVpnConnectionRequest" : {
        "required" : [ "VpnConnectionId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VpnConnectionId" : {
            "type" : "string",
            "description" : "The ID of the VPN connection you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "FiltersNetPeering" : {
        "type" : "object",
        "properties" : {
          "AccepterNetAccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owners of the peer Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "AccepterNetIpRanges" : {
            "type" : "array",
            "description" : "The IP ranges of the peer Nets, in CIDR notation (for example, 10.0.0.0/24).",
            "items" : {
              "type" : "string"
            }
          },
          "AccepterNetNetIds" : {
            "type" : "array",
            "description" : "The IDs of the peer Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "NetPeeringIds" : {
            "type" : "array",
            "description" : "The IDs of the Net peering connections.",
            "items" : {
              "type" : "string"
            }
          },
          "SourceNetAccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owners of the peer Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "SourceNetIpRanges" : {
            "type" : "array",
            "description" : "The IP ranges of the peer Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "SourceNetNetIds" : {
            "type" : "array",
            "description" : "The IDs of the peer Nets.",
            "items" : {
              "type" : "string"
            }
          },
          "StateMessages" : {
            "type" : "array",
            "description" : "Additional information about the states of the Net peering connections.",
            "items" : {
              "type" : "string"
            }
          },
          "StateNames" : {
            "type" : "array",
            "description" : "The states of the Net peering connections (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the Net peering connections.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the Net peering connections.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the Net peering connections, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadTagsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "Keys" : {
                "type" : "array",
                "description" : "The keys of the tags that are assigned to the resources. You can use this filter alongside the `Values` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.",
                "items" : {
                  "type" : "string"
                }
              },
              "ResourceIds" : {
                "type" : "array",
                "description" : "The IDs of the resources with which the tags are associated.",
                "items" : {
                  "type" : "string"
                }
              },
              "ResourceTypes" : {
                "type" : "array",
                "description" : "The resource type (`vm` \\| `image` \\| `volume` \\| `snapshot` \\| `public-ip` \\| `security-group` \\| `route-table` \\| `nic` \\| `net` \\| `subnet` \\| `net-peering` \\| `net-access-point` \\| `nat-service` \\| `internet-service` \\| `client-gateway` \\| `virtual-gateway` \\| `vpn-connection` \\| `dhcp-options` \\| `task`).",
                "items" : {
                  "type" : "string"
                }
              },
              "Values" : {
                "type" : "array",
                "description" : "The values of the tags that are assigned to the resources. You can use this filter alongside the `TagKeys` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "LinkNic" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "If true, the NIC is deleted when the VM is terminated."
          },
          "DeviceNumber" : {
            "type" : "integer",
            "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
          },
          "LinkNicId" : {
            "type" : "string",
            "description" : "The ID of the NIC to attach."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
          },
          "VmAccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the VM."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the NIC attachment."
      },
      "ReadNetAccessPointsResponse" : {
        "type" : "object",
        "properties" : {
          "NetAccessPoints" : {
            "type" : "array",
            "description" : "One or more Net access points.",
            "items" : {
              "type" : "object",
              "properties" : {
                "NetAccessPointId" : {
                  "type" : "string",
                  "description" : "The ID of the Net access point."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net with which the Net access point is associated."
                },
                "RouteTableIds" : {
                  "type" : "array",
                  "description" : "The ID of the route tables associated with the Net access point.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "ServiceName" : {
                  "type" : "string",
                  "description" : "The name of the service with which the Net access point is associated."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the Net access point (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the Net access point.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the Net access point."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FiltersVmsState" : {
        "type" : "object",
        "properties" : {
          "MaintenanceEventCodes" : {
            "type" : "array",
            "description" : "The code for the scheduled event (`system-reboot` | `system-maintenance`).",
            "items" : {
              "type" : "string"
            }
          },
          "MaintenanceEventDescriptions" : {
            "type" : "array",
            "description" : "The description of the scheduled event.",
            "items" : {
              "type" : "string"
            }
          },
          "MaintenanceEventsNotAfter" : {
            "type" : "array",
            "description" : "The latest time the event can end.",
            "items" : {
              "type" : "string",
              "format" : "date"
            }
          },
          "MaintenanceEventsNotBefore" : {
            "type" : "array",
            "description" : "The earliest time the event can start.",
            "items" : {
              "type" : "string",
              "format" : "date"
            }
          },
          "SubregionNames" : {
            "type" : "array",
            "description" : "The names of the Subregions of the VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "VmIds" : {
            "type" : "array",
            "description" : "One or more IDs of VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "VmStates" : {
            "type" : "array",
            "description" : "The states of the VMs (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "DeleteNetAccessPointResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LinkPrivateIpsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteDhcpOptionsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "NicLight" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the NIC."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the NIC."
          },
          "IsSourceDestChecked" : {
            "type" : "boolean",
            "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
          },
          "LinkNic" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "If true, the NIC is deleted when the VM is terminated."
              },
              "DeviceNumber" : {
                "type" : "integer",
                "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
              },
              "LinkNicId" : {
                "type" : "string",
                "description" : "The ID of the NIC to attach."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the network interface card (NIC)."
          },
          "LinkPublicIp" : {
            "type" : "object",
            "properties" : {
              "PublicDnsName" : {
                "type" : "string",
                "description" : "The name of the public DNS."
              },
              "PublicIp" : {
                "type" : "string",
                "description" : "The External IP address (EIP) associated with the NIC."
              },
              "PublicIpAccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the EIP."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the EIP associated with the NIC."
          },
          "MacAddress" : {
            "type" : "string",
            "description" : "The Media Access Control (MAC) address of the NIC."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net for the NIC."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC."
          },
          "PrivateDnsName" : {
            "type" : "string",
            "description" : "The name of the private DNS."
          },
          "PrivateIps" : {
            "type" : "array",
            "description" : "The private IP address or addresses of the NIC.",
            "items" : {
              "type" : "object",
              "properties" : {
                "IsPrimary" : {
                  "type" : "boolean",
                  "description" : "If true, the IP address is the primary private IP address of the NIC."
                },
                "LinkPublicIp" : {
                  "type" : "object",
                  "properties" : {
                    "PublicDnsName" : {
                      "type" : "string",
                      "description" : "The name of the public DNS."
                    },
                    "PublicIp" : {
                      "type" : "string",
                      "description" : "The External IP address (EIP) associated with the NIC."
                    },
                    "PublicIpAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the EIP."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the EIP associated with the NIC."
                },
                "PrivateDnsName" : {
                  "type" : "string",
                  "description" : "The name of the private DNS."
                },
                "PrivateIp" : {
                  "type" : "string",
                  "description" : "The private IP address."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the private IP of the NIC."
            }
          },
          "SecurityGroups" : {
            "type" : "array",
            "description" : "One or more IDs of security groups for the NIC.",
            "items" : {
              "type" : "object",
              "properties" : {
                "SecurityGroupId" : {
                  "type" : "string",
                  "description" : "The ID of the security group."
                },
                "SecurityGroupName" : {
                  "type" : "string",
                  "description" : "The name of the security group."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the security group."
            }
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet for the NIC."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the network interface card (NIC)."
      },
      "FiltersService" : {
        "type" : "object",
        "properties" : {
          "ServiceIds" : {
            "type" : "array",
            "description" : "The IDs of the services.",
            "items" : {
              "type" : "string"
            }
          },
          "ServiceNames" : {
            "type" : "array",
            "description" : "The names of the services.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ImageExportTask" : {
        "type" : "object",
        "properties" : {
          "Comment" : {
            "type" : "string",
            "description" : "If the OMI export task fails, an error message appears."
          },
          "ImageId" : {
            "type" : "string",
            "description" : "The ID of the OMI to be exported."
          },
          "OsuExport" : {
            "required" : [ "DiskImageFormat", "OsuBucket" ],
            "type" : "object",
            "properties" : {
              "DiskImageFormat" : {
                "type" : "string",
                "description" : "The format of the export disk (`qcow2` \\| `raw`)."
              },
              "OsuBucket" : {
                "type" : "string",
                "description" : "The name of the OOS bucket the OMI is exported to."
              },
              "OsuManifestUrl" : {
                "type" : "string",
                "description" : "The URL of the manifest file."
              },
              "OsuPrefix" : {
                "type" : "string",
                "description" : "The prefix for the key of the OOS object corresponding to the image."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the OMI export task."
          },
          "Progress" : {
            "type" : "integer",
            "description" : "The progress of the OMI export task, as a percentage."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the OMI export task (`pending/queued` \\| `pending` \\| `completed` \\| `failed` \\| `cancelled`)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the image export task.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "TaskId" : {
            "type" : "string",
            "description" : "The ID of the OMI export task."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the OMI export task."
      },
      "ReadAccountsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "VmType" : {
        "type" : "object",
        "properties" : {
          "BsuOptimized" : {
            "type" : "boolean",
            "description" : "Indicates whether the VM is optimized for BSU I/O."
          },
          "MaxPrivateIps" : {
            "type" : "integer",
            "description" : "The maximum number of private IP addresses per network interface card (NIC)."
          },
          "MemorySize" : {
            "type" : "number",
            "description" : "The amount of memory, in gibibytes.",
            "format" : "float"
          },
          "VcoreCount" : {
            "type" : "integer",
            "description" : "The number of vCores."
          },
          "VmTypeName" : {
            "type" : "string",
            "description" : "The name of the VM type."
          },
          "VolumeCount" : {
            "type" : "integer",
            "description" : "The maximum number of ephemeral storage disks."
          },
          "VolumeSize" : {
            "type" : "integer",
            "description" : "The size of one ephemeral storage disk, in gibibytes (GiB)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the VM type."
      },
      "ResourceLoadBalancerTag" : {
        "type" : "object",
        "properties" : {
          "Key" : {
            "type" : "string",
            "description" : "The key of the tag, with a minimum of 1 character."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the tag."
      },
      "FiltersNic" : {
        "type" : "object",
        "properties" : {
          "Descriptions" : {
            "type" : "array",
            "description" : "The descriptions of the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "IsSourceDestCheck" : {
            "type" : "boolean",
            "description" : "Whether the source/destination checking is enabled (true) or disabled (false)."
          },
          "LinkNicDeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "Whether the NICs are deleted when the VMs they are attached to are terminated."
          },
          "LinkNicDeviceNumbers" : {
            "type" : "array",
            "description" : "The device numbers the NICs are attached to.",
            "items" : {
              "type" : "integer"
            }
          },
          "LinkNicLinkNicIds" : {
            "type" : "array",
            "description" : "The attachment IDs of the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkNicStates" : {
            "type" : "array",
            "description" : "The states of the attachments.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkNicVmAccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owners of the VMs the NICs are attached to.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkNicVmIds" : {
            "type" : "array",
            "description" : "The IDs of the VMs the NICs are attached to.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkPublicIpAccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owners of the EIPs associated with the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkPublicIpLinkPublicIpIds" : {
            "type" : "array",
            "description" : "The association IDs returned when the EIPs were associated with the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkPublicIpPublicIpIds" : {
            "type" : "array",
            "description" : "The allocation IDs returned when the EIPs were allocated to their accounts.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkPublicIpPublicIps" : {
            "type" : "array",
            "description" : "The EIPs associated with the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "MacAddresses" : {
            "type" : "array",
            "description" : "The Media Access Control (MAC) addresses of the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "NetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets where the NICs are located.",
            "items" : {
              "type" : "string"
            }
          },
          "NicIds" : {
            "type" : "array",
            "description" : "The IDs of the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "PrivateDnsNames" : {
            "type" : "array",
            "description" : "The private DNS names associated with the primary private IP addresses.",
            "items" : {
              "type" : "string"
            }
          },
          "PrivateIpsLinkPublicIpAccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owner of the EIPs associated with the private IP addresses.",
            "items" : {
              "type" : "string"
            }
          },
          "PrivateIpsLinkPublicIpPublicIps" : {
            "type" : "array",
            "description" : "The EIPs associated with the private IP addresses.",
            "items" : {
              "type" : "string"
            }
          },
          "PrivateIpsPrimaryIp" : {
            "type" : "boolean",
            "description" : "The primary private IP addresses of the NICs."
          },
          "PrivateIpsPrivateIps" : {
            "type" : "array",
            "description" : "The private IP addresses of the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "SecurityGroupIds" : {
            "type" : "array",
            "description" : "The IDs of the security groups associated with the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "SecurityGroupNames" : {
            "type" : "array",
            "description" : "The names of the security groups associated with the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "SubnetIds" : {
            "type" : "array",
            "description" : "The IDs of the Subnets for the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "SubregionNames" : {
            "type" : "array",
            "description" : "The Subregions where the NICs are located.",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the NICs.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the NICs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "DeleteNetRequest" : {
        "required" : [ "NetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "LinkPublicIpResponse" : {
        "type" : "object",
        "properties" : {
          "LinkPublicIpId" : {
            "type" : "string",
            "description" : "(Net only) The ID representing the association of the EIP with the VM or the NIC."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateRoutePropagationResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "RouteTable" : {
            "type" : "object",
            "properties" : {
              "LinkRouteTables" : {
                "type" : "array",
                "description" : "One or more associations between the route table and Subnets.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "LinkRouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the association between the route table and the Subnet."
                    },
                    "Main" : {
                      "type" : "boolean",
                      "description" : "If true, the route table is the main one."
                    },
                    "RouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the route table."
                    },
                    "SubnetId" : {
                      "type" : "string",
                      "description" : "The ID of the Subnet."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "One or more associations between the route table and the Subnets."
                }
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the route table."
              },
              "RoutePropagatingVirtualGateways" : {
                "type" : "array",
                "description" : "Information about virtual gateways propagating routes.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "VirtualGatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the virtual gateway."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route propagating virtual gateway."
                }
              },
              "RouteTableId" : {
                "type" : "string",
                "description" : "The ID of the route table."
              },
              "Routes" : {
                "type" : "array",
                "description" : "One or more routes in the route table.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CreationMethod" : {
                      "type" : "string",
                      "description" : "The method used to create the route."
                    },
                    "DestinationIpRange" : {
                      "type" : "string",
                      "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                    },
                    "DestinationServiceId" : {
                      "type" : "string",
                      "description" : "The ID of the OUTSCALE service."
                    },
                    "GatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                    },
                    "NatServiceId" : {
                      "type" : "string",
                      "description" : "The ID of a NAT service attached to the Net."
                    },
                    "NetAccessPointId" : {
                      "type" : "string",
                      "description" : "The ID of the Net access point."
                    },
                    "NetPeeringId" : {
                      "type" : "string",
                      "description" : "The ID of the Net peering connection."
                    },
                    "NicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                    },
                    "VmAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the VM."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of a VM specified in a route in the table."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route."
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the route table.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the route table."
          }
        },
        "additionalProperties" : false
      },
      "ResetAccountPasswordResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadSnapshotsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Snapshots" : {
            "type" : "array",
            "description" : "Information about one or more snapshots and their permissions.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountAlias" : {
                  "type" : "string",
                  "description" : "The account alias of the owner of the snapshot."
                },
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the snapshot."
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the snapshot."
                },
                "PermissionsToCreateVolume" : {
                  "type" : "object",
                  "properties" : {
                    "AccountIds" : {
                      "type" : "array",
                      "description" : "The account ID of one or more users who have permissions for the resource.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "GlobalPermission" : {
                      "type" : "boolean",
                      "description" : "If true, the resource is public. If false, the resource is private."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the users who have permissions for the resource."
                },
                "Progress" : {
                  "type" : "integer",
                  "description" : "The progress of the snapshot, as a percentage."
                },
                "SnapshotId" : {
                  "type" : "string",
                  "description" : "The ID of the snapshot."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the snapshot (`in-queue` \\| `completed` \\| `error`)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the snapshot.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "VolumeId" : {
                  "type" : "string",
                  "description" : "The ID of the volume used to create the snapshot."
                },
                "VolumeSize" : {
                  "type" : "integer",
                  "description" : "The size of the volume used to create the snapshot, in gibibytes (GiB)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the snapshot."
            }
          }
        },
        "additionalProperties" : false
      },
      "CreateRouteTableRequest" : {
        "required" : [ "NetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net for which you want to create a route table."
          }
        },
        "additionalProperties" : false
      },
      "ReadVmsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the VMs.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the VMs.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the VMs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              },
              "VmIds" : {
                "type" : "array",
                "description" : "One or more IDs of VMs.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "LinkVirtualGatewayResponse" : {
        "type" : "object",
        "properties" : {
          "NetToVirtualGatewayLink" : {
            "type" : "object",
            "properties" : {
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net to which the virtual gateway is attached."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the attachment."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteLoadBalancerTagsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "NetPeering" : {
        "type" : "object",
        "properties" : {
          "AccepterNet" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the accepter Net."
              },
              "IpRange" : {
                "type" : "string",
                "description" : "The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16)."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the accepter Net."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the accepter Net."
          },
          "NetPeeringId" : {
            "type" : "string",
            "description" : "The ID of the Net peering connection."
          },
          "SourceNet" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the source Net."
              },
              "IpRange" : {
                "type" : "string",
                "description" : "The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16)."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the source Net."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the source Net."
          },
          "State" : {
            "type" : "object",
            "properties" : {
              "Message" : {
                "type" : "string",
                "description" : "Additional information about the state of the Net peering connection."
              },
              "Name" : {
                "type" : "string",
                "description" : "The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the state of the Net peering connection."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the Net peering connection.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the Net peering connection."
      },
      "DeleteInternetServiceResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FiltersSnapshot" : {
        "type" : "object",
        "properties" : {
          "AccountAliases" : {
            "type" : "array",
            "description" : "The account aliases of the owners of the snapshots.",
            "items" : {
              "type" : "string"
            }
          },
          "AccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owners of the snapshots.",
            "items" : {
              "type" : "string"
            }
          },
          "Descriptions" : {
            "type" : "array",
            "description" : "The descriptions of the snapshots.",
            "items" : {
              "type" : "string"
            }
          },
          "PermissionsToCreateVolumeAccountIds" : {
            "type" : "array",
            "description" : "The account IDs of one or more users who have permissions to create volumes.",
            "items" : {
              "type" : "string"
            }
          },
          "PermissionsToCreateVolumeGlobalPermission" : {
            "type" : "boolean",
            "description" : "If true, lists all public volumes. If false, lists all private volumes."
          },
          "Progresses" : {
            "type" : "array",
            "description" : "The progresses of the snapshots, as a percentage.",
            "items" : {
              "type" : "integer"
            }
          },
          "SnapshotIds" : {
            "type" : "array",
            "description" : "The IDs of the snapshots.",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the snapshots (`in-queue` \\| `completed` \\| `error`).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the snapshots.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the snapshots.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the snapshots, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          },
          "VolumeIds" : {
            "type" : "array",
            "description" : "The IDs of the volumes used to create the snapshots.",
            "items" : {
              "type" : "string"
            }
          },
          "VolumeSizes" : {
            "type" : "array",
            "description" : "The sizes of the volumes used to create the snapshots, in gibibytes (GiB).",
            "items" : {
              "type" : "integer"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "CreateImageRequest" : {
        "type" : "object",
        "properties" : {
          "Architecture" : {
            "type" : "string",
            "description" : "The architecture of the OMI (by default, `i386`)."
          },
          "BlockDeviceMappings" : {
            "type" : "array",
            "description" : "One or more block device mappings.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Bsu" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                    },
                    "Iops" : {
                      "type" : "integer",
                      "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                    },
                    "SnapshotId" : {
                      "type" : "string",
                      "description" : "The ID of the snapshot used to create the volume."
                    },
                    "VolumeSize" : {
                      "type" : "integer",
                      "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                    },
                    "VolumeType" : {
                      "type" : "string",
                      "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the BSU volume to create."
                },
                "DeviceName" : {
                  "type" : "string",
                  "description" : "The name of the device."
                },
                "VirtualDeviceName" : {
                  "type" : "string",
                  "description" : "The name of the virtual device (ephemeralN)."
                }
              },
              "additionalProperties" : false,
              "description" : "One or more parameters used to automatically set up volumes when the VM is created."
            }
          },
          "Description" : {
            "type" : "string",
            "description" : "A description for the new OMI."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "FileLocation" : {
            "type" : "string",
            "description" : "The pre-signed URL of the OMI manifest file, or the full path to the OMI stored in a bucket. If you specify this parameter, a copy of the OMI is created in your account."
          },
          "ImageName" : {
            "type" : "string",
            "description" : "A unique name for the new OMI.<br />\nConstraints: 3-128 alphanumeric characters, underscores (_), spaces ( ), parentheses (()), slashes (/), periods (.), or dashes (-)."
          },
          "NoReboot" : {
            "type" : "boolean",
            "description" : "If false, the VM shuts down before creating the OMI and then reboots. If true, the VM does not."
          },
          "RootDeviceName" : {
            "type" : "string",
            "description" : "The name of the root device."
          },
          "SourceImageId" : {
            "type" : "string",
            "description" : "The ID of the OMI you want to copy."
          },
          "SourceRegionName" : {
            "type" : "string",
            "description" : "The name of the source Region, which must be the same as the Region of your account."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM from which you want to create the OMI."
          }
        },
        "additionalProperties" : false
      },
      "ReadProductTypesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "ProductTypeIds" : {
                "type" : "array",
                "description" : "The IDs of the product types.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "DeleteNatServiceRequest" : {
        "required" : [ "NatServiceId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NatServiceId" : {
            "type" : "string",
            "description" : "The ID of the NAT service you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "ReadQuotasRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "Collections" : {
                "type" : "array",
                "description" : "The group names of the quotas.",
                "items" : {
                  "type" : "string"
                }
              },
              "QuotaNames" : {
                "type" : "array",
                "description" : "The names of the quotas.",
                "items" : {
                  "type" : "string"
                }
              },
              "QuotaTypes" : {
                "type" : "array",
                "description" : "The resource IDs if these are resource-specific quotas, `global` if they are not.",
                "items" : {
                  "type" : "string"
                }
              },
              "ShortDescriptions" : {
                "type" : "array",
                "description" : "The description of the quotas.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "UpdateNetAccessPointResponse" : {
        "type" : "object",
        "properties" : {
          "NetAccessPoint" : {
            "type" : "object",
            "properties" : {
              "NetAccessPointId" : {
                "type" : "string",
                "description" : "The ID of the Net access point."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net with which the Net access point is associated."
              },
              "RouteTableIds" : {
                "type" : "array",
                "description" : "The ID of the route tables associated with the Net access point.",
                "items" : {
                  "type" : "string"
                }
              },
              "ServiceName" : {
                "type" : "string",
                "description" : "The name of the service with which the Net access point is associated."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the Net access point (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Net access point.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Net access point."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadListenerRulesResponse" : {
        "type" : "object",
        "properties" : {
          "ListenerRules" : {
            "type" : "array",
            "description" : "The list of the rules to describe.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Action" : {
                  "type" : "string",
                  "description" : "The type of action for the rule (always `forward`)."
                },
                "HostNamePattern" : {
                  "type" : "string",
                  "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]."
                },
                "ListenerId" : {
                  "type" : "integer",
                  "description" : "The ID of the listener."
                },
                "ListenerRuleId" : {
                  "type" : "integer",
                  "description" : "The ID of the listener rule."
                },
                "ListenerRuleName" : {
                  "type" : "string",
                  "description" : "A human-readable name for the listener rule."
                },
                "PathPattern" : {
                  "type" : "string",
                  "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
                },
                "Priority" : {
                  "type" : "integer",
                  "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
                },
                "VmIds" : {
                  "type" : "array",
                  "description" : "The IDs of the backend VMs.",
                  "items" : {
                    "type" : "string"
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the listener rule."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadApiLogsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "QueryAccessKeys" : {
                "type" : "array",
                "description" : "The access keys used for the logged calls.",
                "items" : {
                  "type" : "string"
                }
              },
              "QueryApiNames" : {
                "type" : "array",
                "description" : "The names of the APIs of the logged calls (always `oapi` for the OUTSCALE API).",
                "items" : {
                  "type" : "string"
                }
              },
              "QueryCallNames" : {
                "type" : "array",
                "description" : "The names of the logged calls.",
                "items" : {
                  "type" : "string"
                }
              },
              "QueryDateAfter" : {
                "type" : "string",
                "description" : "The date after which you want to retrieve logged calls, in ISO 8601 format (for example, `2020-06-14`). By default, this date is set to 2 days ago.",
                "format" : "date"
              },
              "QueryDateBefore" : {
                "type" : "string",
                "description" : "The date before which you want to retrieve logged calls, in ISO 8601 format (for example, `2020-06-30`). By default, this date is set to now.",
                "format" : "date"
              },
              "QueryIpAddresses" : {
                "type" : "array",
                "description" : "The IP addresses used for the logged calls.",
                "items" : {
                  "type" : "string"
                }
              },
              "QueryUserAgents" : {
                "type" : "array",
                "description" : "The user agents of the HTTP requests of the logged calls.",
                "items" : {
                  "type" : "string"
                }
              },
              "RequestIds" : {
                "type" : "array",
                "description" : "The request IDs provided in the responses of the logged calls.",
                "items" : {
                  "type" : "string"
                }
              },
              "ResponseStatusCodes" : {
                "type" : "array",
                "description" : "The HTTP status codes of the logged calls.",
                "items" : {
                  "type" : "integer"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          },
          "NextPageToken" : {
            "type" : "string",
            "description" : "The token to request the next page of results."
          },
          "ResultsPerPage" : {
            "type" : "integer",
            "description" : "The maximum number of logs returned in a single response (between `1`and `1000`, both included). By default, `100`."
          },
          "With" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "boolean",
                "description" : "By default or if set to true, the account ID is displayed."
              },
              "CallDuration" : {
                "type" : "boolean",
                "description" : "If set to true, the duration of the call is displayed."
              },
              "QueryAccessKey" : {
                "type" : "boolean",
                "description" : "If set to true, the access key is displayed."
              },
              "QueryApiName" : {
                "type" : "boolean",
                "description" : "If set to true, the name of the API is displayed."
              },
              "QueryApiVersion" : {
                "type" : "boolean",
                "description" : "If set to true, the version of the API is displayed."
              },
              "QueryCallName" : {
                "type" : "boolean",
                "description" : "If set to true, the name of the call is displayed."
              },
              "QueryDate" : {
                "type" : "boolean",
                "description" : "If set to true, the date of the call is displayed."
              },
              "QueryHeaderRaw" : {
                "type" : "boolean",
                "description" : "If set to true, the raw header of the HTTP request is displayed."
              },
              "QueryHeaderSize" : {
                "type" : "boolean",
                "description" : "If set to true, the size of the raw header of the HTTP request is displayed."
              },
              "QueryIpAddress" : {
                "type" : "boolean",
                "description" : "If set to true, the IP address is displayed."
              },
              "QueryPayloadRaw" : {
                "type" : "boolean",
                "description" : "If set to true, the raw payload of the HTTP request is displayed."
              },
              "QueryPayloadSize" : {
                "type" : "boolean",
                "description" : "If set to true, the size of the raw payload of the HTTP request is displayed."
              },
              "QueryUserAgent" : {
                "type" : "boolean",
                "description" : "If set to true, the user agent of the HTTP request is displayed."
              },
              "RequestId" : {
                "type" : "boolean",
                "description" : "By default ot if set to true, the request ID is displayed."
              },
              "ResponseSize" : {
                "type" : "boolean",
                "description" : "If set to true, the size of the response is displayed."
              },
              "ResponseStatusCode" : {
                "type" : "boolean",
                "description" : "If set to true, the HTTP status code of the response is displayed."
              }
            },
            "additionalProperties" : false,
            "description" : "The information to display in each returned log. If this parameter is not specified, all available fields are considered as true."
          }
        },
        "additionalProperties" : false
      },
      "ResponseContext" : {
        "type" : "object",
        "properties" : {
          "RequestId" : {
            "type" : "string",
            "description" : "The ID of the request."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the context of the response."
      },
      "DeleteSecurityGroupResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateRouteRequest" : {
        "required" : [ "DestinationIpRange", "RouteTableId" ],
        "type" : "object",
        "properties" : {
          "DestinationIpRange" : {
            "type" : "string",
            "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "GatewayId" : {
            "type" : "string",
            "description" : "The ID of an Internet service or virtual gateway attached to your Net."
          },
          "NatServiceId" : {
            "type" : "string",
            "description" : "The ID of a NAT service."
          },
          "NetPeeringId" : {
            "type" : "string",
            "description" : "The ID of a Net peering connection."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of a network interface card (NIC)."
          },
          "RouteTableId" : {
            "type" : "string",
            "description" : "The ID of the route table."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of a NAT VM in your Net."
          }
        },
        "additionalProperties" : false
      },
      "Route" : {
        "type" : "object",
        "properties" : {
          "CreationMethod" : {
            "type" : "string",
            "description" : "The method used to create the route."
          },
          "DestinationIpRange" : {
            "type" : "string",
            "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
          },
          "DestinationServiceId" : {
            "type" : "string",
            "description" : "The ID of the OUTSCALE service."
          },
          "GatewayId" : {
            "type" : "string",
            "description" : "The ID of the Internet service or virtual gateway attached to the Net."
          },
          "NatServiceId" : {
            "type" : "string",
            "description" : "The ID of a NAT service attached to the Net."
          },
          "NetAccessPointId" : {
            "type" : "string",
            "description" : "The ID of the Net access point."
          },
          "NetPeeringId" : {
            "type" : "string",
            "description" : "The ID of the Net peering connection."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
          },
          "VmAccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the VM."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of a VM specified in a route in the table."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the route."
      },
      "ReadLocationsResponse" : {
        "type" : "object",
        "properties" : {
          "Locations" : {
            "type" : "array",
            "description" : "Information about one or more locations.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Code" : {
                  "type" : "string",
                  "description" : "The location code, to be set as the `Location` parameter of the *CreateDirectLink* method when creating a DirectLink."
                },
                "Name" : {
                  "type" : "string",
                  "description" : "The name and description of the location, corresponding to a datacenter."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the DirectLink location."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateNatServiceRequest" : {
        "required" : [ "PublicIpId", "SubnetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "PublicIpId" : {
            "type" : "string",
            "description" : "The allocation ID of the EIP to associate with the NAT service.<br />\nIf the EIP is already associated with another resource, you must first disassociate it."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet in which you want to create the NAT service."
          }
        },
        "additionalProperties" : false
      },
      "SendResetPasswordEmailRequest" : {
        "required" : [ "Email" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Email" : {
            "type" : "string",
            "description" : "The email address provided for the account."
          }
        },
        "additionalProperties" : false
      },
      "LinkRouteTable" : {
        "type" : "object",
        "properties" : {
          "LinkRouteTableId" : {
            "type" : "string",
            "description" : "The ID of the association between the route table and the Subnet."
          },
          "Main" : {
            "type" : "boolean",
            "description" : "If true, the route table is the main one."
          },
          "RouteTableId" : {
            "type" : "string",
            "description" : "The ID of the route table."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet."
          }
        },
        "additionalProperties" : false,
        "description" : "One or more associations between the route table and the Subnets."
      },
      "CreateSnapshotExportTaskRequest" : {
        "required" : [ "OsuExport", "SnapshotId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "OsuExport" : {
            "required" : [ "DiskImageFormat", "OsuBucket" ],
            "type" : "object",
            "properties" : {
              "DiskImageFormat" : {
                "type" : "string",
                "description" : "The format of the export disk (`qcow2` \\| `raw`)."
              },
              "OsuApiKey" : {
                "type" : "object",
                "properties" : {
                  "ApiKeyId" : {
                    "type" : "string",
                    "description" : "The API key of the OOS account that enables you to access the bucket."
                  },
                  "SecretKey" : {
                    "type" : "string",
                    "description" : "The secret key of the OOS account that enables you to access the bucket."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the OOS API key."
              },
              "OsuBucket" : {
                "type" : "string",
                "description" : "The name of the OOS bucket where you want to export the object."
              },
              "OsuManifestUrl" : {
                "type" : "string",
                "description" : "The URL of the manifest file."
              },
              "OsuPrefix" : {
                "type" : "string",
                "description" : "The prefix for the key of the OOS object."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the OOS export task to create."
          },
          "SnapshotId" : {
            "type" : "string",
            "description" : "The ID of the snapshot to export."
          }
        },
        "additionalProperties" : false
      },
      "SecurityGroup" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of a user that has been granted permission."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the security group."
          },
          "InboundRules" : {
            "type" : "array",
            "description" : "The inbound rules associated with the security group.",
            "items" : {
              "type" : "object",
              "properties" : {
                "FromPortRange" : {
                  "type" : "integer",
                  "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                },
                "IpProtocol" : {
                  "type" : "string",
                  "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                },
                "IpRanges" : {
                  "type" : "array",
                  "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "SecurityGroupsMembers" : {
                  "type" : "array",
                  "description" : "Information about one or more members of a security group.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "AccountId" : {
                        "type" : "string",
                        "description" : "The account ID of a user."
                      },
                      "SecurityGroupId" : {
                        "type" : "string",
                        "description" : "The ID of the security group."
                      },
                      "SecurityGroupName" : {
                        "type" : "string",
                        "description" : "The name of the security group."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the member of a security group."
                  }
                },
                "ServiceIds" : {
                  "type" : "array",
                  "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "ToPortRange" : {
                  "type" : "integer",
                  "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the security group rule."
            }
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net for the security group."
          },
          "OutboundRules" : {
            "type" : "array",
            "description" : "The outbound rules associated with the security group.",
            "items" : {
              "type" : "object",
              "properties" : {
                "FromPortRange" : {
                  "type" : "integer",
                  "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                },
                "IpProtocol" : {
                  "type" : "string",
                  "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                },
                "IpRanges" : {
                  "type" : "array",
                  "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "SecurityGroupsMembers" : {
                  "type" : "array",
                  "description" : "Information about one or more members of a security group.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "AccountId" : {
                        "type" : "string",
                        "description" : "The account ID of a user."
                      },
                      "SecurityGroupId" : {
                        "type" : "string",
                        "description" : "The ID of the security group."
                      },
                      "SecurityGroupName" : {
                        "type" : "string",
                        "description" : "The name of the security group."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the member of a security group."
                  }
                },
                "ServiceIds" : {
                  "type" : "array",
                  "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                  "items" : {
                    "type" : "string"
                  }
                },
                "ToPortRange" : {
                  "type" : "integer",
                  "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the security group rule."
            }
          },
          "SecurityGroupId" : {
            "type" : "string",
            "description" : "The ID of the security group."
          },
          "SecurityGroupName" : {
            "type" : "string",
            "description" : "The name of the security group."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the security group.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the security group."
      },
      "LinkRouteTableResponse" : {
        "type" : "object",
        "properties" : {
          "LinkRouteTableId" : {
            "type" : "string",
            "description" : "The ID of the association between the route table and the Subnet."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateLoadBalancerResponse" : {
        "type" : "object",
        "properties" : {
          "LoadBalancer" : {
            "type" : "object",
            "properties" : {
              "AccessLog" : {
                "type" : "object",
                "properties" : {
                  "IsEnabled" : {
                    "type" : "boolean",
                    "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                  },
                  "OsuBucketName" : {
                    "type" : "string",
                    "description" : "The name of the OOS bucket for the access logs."
                  },
                  "OsuBucketPrefix" : {
                    "type" : "string",
                    "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                  },
                  "PublicationInterval" : {
                    "type" : "integer",
                    "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about access logs."
              },
              "ApplicationStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The stickiness policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieName" : {
                      "type" : "string",
                      "description" : "The name of the application cookie used for stickiness."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "BackendVmIds" : {
                "type" : "array",
                "description" : "One or more IDs of back-end VMs for the load balancer.",
                "items" : {
                  "type" : "string"
                }
              },
              "DnsName" : {
                "type" : "string",
                "description" : "The DNS name of the load balancer."
              },
              "HealthCheck" : {
                "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                "type" : "object",
                "properties" : {
                  "CheckInterval" : {
                    "type" : "integer",
                    "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                  },
                  "HealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                  },
                  "Path" : {
                    "type" : "string",
                    "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                  },
                  "Port" : {
                    "type" : "integer",
                    "description" : "The port number (between `1` and `65535`, both included)."
                  },
                  "Protocol" : {
                    "type" : "string",
                    "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                  },
                  "Timeout" : {
                    "type" : "integer",
                    "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                  },
                  "UnhealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the health check configuration."
              },
              "Listeners" : {
                "type" : "array",
                "description" : "The listeners for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "BackendPort" : {
                      "type" : "integer",
                      "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                    },
                    "BackendProtocol" : {
                      "type" : "string",
                      "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "LoadBalancerPort" : {
                      "type" : "integer",
                      "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                    },
                    "LoadBalancerProtocol" : {
                      "type" : "string",
                      "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "PolicyNames" : {
                      "type" : "array",
                      "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ServerCertificateId" : {
                      "type" : "string",
                      "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the listener."
                }
              },
              "LoadBalancerName" : {
                "type" : "string",
                "description" : "The name of the load balancer."
              },
              "LoadBalancerStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieExpirationPeriod" : {
                      "type" : "integer",
                      "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The name of the stickiness policy."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "LoadBalancerType" : {
                "type" : "string",
                "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the load balancer."
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceSecurityGroup" : {
                "type" : "object",
                "properties" : {
                  "SecurityGroupAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the security group."
                  },
                  "SecurityGroupName" : {
                    "type" : "string",
                    "description" : "The name of the security group."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
              },
              "Subnets" : {
                "type" : "array",
                "description" : "The ID of the Subnet in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The ID of the Subregion in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the load balancer.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the load balancer."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteVmsRequest" : {
        "required" : [ "VmIds" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VmIds" : {
            "type" : "array",
            "description" : "One or more IDs of VMs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "Region" : {
        "type" : "object",
        "properties" : {
          "Endpoint" : {
            "type" : "string",
            "description" : "The hostname of the gateway to access the Region."
          },
          "RegionName" : {
            "type" : "string",
            "description" : "The administrative name of the Region."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the Region."
      },
      "CreateListenerRuleResponse" : {
        "type" : "object",
        "properties" : {
          "ListenerRule" : {
            "type" : "object",
            "properties" : {
              "Action" : {
                "type" : "string",
                "description" : "The type of action for the rule (always `forward`)."
              },
              "HostNamePattern" : {
                "type" : "string",
                "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]."
              },
              "ListenerId" : {
                "type" : "integer",
                "description" : "The ID of the listener."
              },
              "ListenerRuleId" : {
                "type" : "integer",
                "description" : "The ID of the listener rule."
              },
              "ListenerRuleName" : {
                "type" : "string",
                "description" : "A human-readable name for the listener rule."
              },
              "PathPattern" : {
                "type" : "string",
                "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
              },
              "Priority" : {
                "type" : "integer",
                "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
              },
              "VmIds" : {
                "type" : "array",
                "description" : "The IDs of the backend VMs.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the listener rule."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ClientGateway" : {
        "type" : "object",
        "properties" : {
          "BgpAsn" : {
            "type" : "integer",
            "description" : "An Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet."
          },
          "ClientGatewayId" : {
            "type" : "string",
            "description" : "The ID of the client gateway."
          },
          "ConnectionType" : {
            "type" : "string",
            "description" : "The type of communication tunnel used by the client gateway (only `ipsec.1` is supported)."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The public IPv4 address of the client gateway (must be a fixed address into a NATed network)."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the client gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the client gateway.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the client gateway."
      },
      "DeleteNetPeeringRequest" : {
        "required" : [ "NetPeeringId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetPeeringId" : {
            "type" : "string",
            "description" : "The ID of the Net peering connection you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "MaintenanceEvent" : {
        "type" : "object",
        "properties" : {
          "Code" : {
            "type" : "string",
            "description" : "The code of the event (`system-reboot` \\| `system-maintenance`)."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the event."
          },
          "NotAfter" : {
            "type" : "string",
            "description" : "The latest scheduled end time for the event.",
            "format" : "date"
          },
          "NotBefore" : {
            "type" : "string",
            "description" : "The earliest scheduled start time for the event.",
            "format" : "date"
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the maintenance event."
      },
      "DeleteNetAccessPointRequest" : {
        "required" : [ "NetAccessPointId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetAccessPointId" : {
            "type" : "string",
            "description" : "The ID of the Net access point."
          }
        },
        "additionalProperties" : false
      },
      "UpdateCaRequest" : {
        "required" : [ "CaId" ],
        "type" : "object",
        "properties" : {
          "CaId" : {
            "type" : "string",
            "description" : "The ID of the CA."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the CA."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "DeleteFlexibleGpuRequest" : {
        "required" : [ "FlexibleGpuId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "FlexibleGpuId" : {
            "type" : "string",
            "description" : "The ID of the fGPU you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "QuotaTypes" : {
        "type" : "object",
        "properties" : {
          "QuotaType" : {
            "type" : "string",
            "description" : "The resource ID if it is a resource-specific quota, `global` if it is not."
          },
          "Quotas" : {
            "type" : "array",
            "description" : "One or more quotas associated with the user.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the quotas."
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the quota."
                },
                "MaxValue" : {
                  "type" : "integer",
                  "description" : "The maximum value of the quota for the OUTSCALE user account (if there is no limit, `0`)."
                },
                "Name" : {
                  "type" : "string",
                  "description" : "The unique name of the quota."
                },
                "QuotaCollection" : {
                  "type" : "string",
                  "description" : "The group name of the quota."
                },
                "ShortDescription" : {
                  "type" : "string",
                  "description" : "The description of the quota."
                },
                "UsedValue" : {
                  "type" : "integer",
                  "description" : "The limit value currently used by the OUTSCALE user account."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the quota."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more quotas."
      },
      "BackendVmHealth" : {
        "type" : "object",
        "properties" : {
          "Description" : {
            "type" : "string",
            "description" : "The description of the state of the back-end VM."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the back-end VM (`InService` \\| `OutOfService` \\| `Unknown`)."
          },
          "StateReason" : {
            "type" : "string",
            "description" : "Information about the cause of `OutOfService` VMs.<br />\nSpecifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \\| `Instance` \\| `N/A`)."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the back-end VM."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the health of a back-end VM."
      },
      "Vm" : {
        "type" : "object",
        "properties" : {
          "Architecture" : {
            "type" : "string",
            "description" : "The architecture of the VM (`i386` \\| `x86_64`)."
          },
          "BlockDeviceMappings" : {
            "type" : "array",
            "description" : "The block device mapping of the VM.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Bsu" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                    },
                    "LinkDate" : {
                      "type" : "string",
                      "description" : "The time and date of attachment of the volume to the VM.",
                      "format" : "date"
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of the volume."
                    },
                    "VolumeId" : {
                      "type" : "string",
                      "description" : "The ID of the volume."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the created BSU volume."
                },
                "DeviceName" : {
                  "type" : "string",
                  "description" : "The name of the device."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the created block device mapping."
            }
          },
          "BsuOptimized" : {
            "type" : "boolean",
            "description" : "If true, the VM is optimized for BSU I/O."
          },
          "ClientToken" : {
            "type" : "string",
            "description" : "The idempotency token provided when launching the VM."
          },
          "CreationDate" : {
            "type" : "string",
            "description" : "The date and time at which the VM was created.",
            "format" : "datetime"
          },
          "DeletionProtection" : {
            "type" : "boolean",
            "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
          },
          "Hypervisor" : {
            "type" : "string",
            "description" : "The hypervisor type of the VMs (`ovm` \\| `xen`)."
          },
          "ImageId" : {
            "type" : "string",
            "description" : "The ID of the OMI used to create the VM."
          },
          "IsSourceDestChecked" : {
            "type" : "boolean",
            "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
          },
          "KeypairName" : {
            "type" : "string",
            "description" : "The name of the keypair used when launching the VM."
          },
          "LaunchNumber" : {
            "type" : "integer",
            "description" : "The number for the VM when launching a group of several VMs (for example, 0, 1, 2, and so on)."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net in which the VM is running."
          },
          "Nics" : {
            "type" : "array",
            "description" : "(Net only) The network interface cards (NICs) the VMs are attached to.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the NIC."
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the NIC."
                },
                "IsSourceDestChecked" : {
                  "type" : "boolean",
                  "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
                },
                "LinkNic" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "If true, the NIC is deleted when the VM is terminated."
                    },
                    "DeviceNumber" : {
                      "type" : "integer",
                      "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
                    },
                    "LinkNicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC to attach."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the network interface card (NIC)."
                },
                "LinkPublicIp" : {
                  "type" : "object",
                  "properties" : {
                    "PublicDnsName" : {
                      "type" : "string",
                      "description" : "The name of the public DNS."
                    },
                    "PublicIp" : {
                      "type" : "string",
                      "description" : "The External IP address (EIP) associated with the NIC."
                    },
                    "PublicIpAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the EIP."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the EIP associated with the NIC."
                },
                "MacAddress" : {
                  "type" : "string",
                  "description" : "The Media Access Control (MAC) address of the NIC."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net for the NIC."
                },
                "NicId" : {
                  "type" : "string",
                  "description" : "The ID of the NIC."
                },
                "PrivateDnsName" : {
                  "type" : "string",
                  "description" : "The name of the private DNS."
                },
                "PrivateIps" : {
                  "type" : "array",
                  "description" : "The private IP address or addresses of the NIC.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "IsPrimary" : {
                        "type" : "boolean",
                        "description" : "If true, the IP address is the primary private IP address of the NIC."
                      },
                      "LinkPublicIp" : {
                        "type" : "object",
                        "properties" : {
                          "PublicDnsName" : {
                            "type" : "string",
                            "description" : "The name of the public DNS."
                          },
                          "PublicIp" : {
                            "type" : "string",
                            "description" : "The External IP address (EIP) associated with the NIC."
                          },
                          "PublicIpAccountId" : {
                            "type" : "string",
                            "description" : "The account ID of the owner of the EIP."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the EIP associated with the NIC."
                      },
                      "PrivateDnsName" : {
                        "type" : "string",
                        "description" : "The name of the private DNS."
                      },
                      "PrivateIp" : {
                        "type" : "string",
                        "description" : "The private IP address."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the private IP of the NIC."
                  }
                },
                "SecurityGroups" : {
                  "type" : "array",
                  "description" : "One or more IDs of security groups for the NIC.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "SecurityGroupId" : {
                        "type" : "string",
                        "description" : "The ID of the security group."
                      },
                      "SecurityGroupName" : {
                        "type" : "string",
                        "description" : "The name of the security group."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the security group."
                  }
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the NIC (`available` \\| `attaching` \\| `in-use` \\| `detaching`)."
                },
                "SubnetId" : {
                  "type" : "string",
                  "description" : "The ID of the Subnet for the NIC."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the network interface card (NIC)."
            }
          },
          "OsFamily" : {
            "type" : "string",
            "description" : "Indicates the operating system (OS) of the VM."
          },
          "Performance" : {
            "type" : "string",
            "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`)."
          },
          "Placement" : {
            "type" : "object",
            "properties" : {
              "SubregionName" : {
                "type" : "string",
                "description" : "The name of the Subregion."
              },
              "Tenancy" : {
                "type" : "string",
                "description" : "The tenancy of the VM (`default` \\| `dedicated`)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the placement of the VM."
          },
          "PrivateDnsName" : {
            "type" : "string",
            "description" : "The name of the private DNS."
          },
          "PrivateIp" : {
            "type" : "string",
            "description" : "The primary private IP address of the VM."
          },
          "ProductCodes" : {
            "type" : "array",
            "description" : "The product code associated with the OMI used to create the VM (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
            "items" : {
              "type" : "string"
            }
          },
          "PublicDnsName" : {
            "type" : "string",
            "description" : "The name of the public DNS."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The public IP address of the VM."
          },
          "ReservationId" : {
            "type" : "string",
            "description" : "The reservation ID of the VM."
          },
          "RootDeviceName" : {
            "type" : "string",
            "description" : "The name of the root device for the VM (for example, /dev/vda1)."
          },
          "RootDeviceType" : {
            "type" : "string",
            "description" : "The type of root device used by the VM (always `bsu`)."
          },
          "SecurityGroups" : {
            "type" : "array",
            "description" : "One or more security groups associated with the VM.",
            "items" : {
              "type" : "object",
              "properties" : {
                "SecurityGroupId" : {
                  "type" : "string",
                  "description" : "The ID of the security group."
                },
                "SecurityGroupName" : {
                  "type" : "string",
                  "description" : "The name of the security group."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the security group."
            }
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the VM (`pending` \\| `running` \\| `stopping` \\| `stopped` \\| `shutting-down` \\| `terminated` \\| `quarantine`)."
          },
          "StateReason" : {
            "type" : "string",
            "description" : "The reason explaining the current state of the VM."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet for the VM."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the VM.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "UserData" : {
            "type" : "string",
            "description" : "The Base64-encoded MIME user data."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          },
          "VmInitiatedShutdownBehavior" : {
            "type" : "string",
            "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted."
          },
          "VmType" : {
            "type" : "string",
            "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the VM."
      },
      "UpdateSubnetResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Subnet" : {
            "type" : "object",
            "properties" : {
              "AvailableIpsCount" : {
                "type" : "integer",
                "description" : "The number of available IP addresses in the Subnets."
              },
              "IpRange" : {
                "type" : "string",
                "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
              },
              "MapPublicIpOnLaunch" : {
                "type" : "boolean",
                "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net in which the Subnet is."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the Subnet (`pending` \\| `available`)."
              },
              "SubnetId" : {
                "type" : "string",
                "description" : "The ID of the Subnet."
              },
              "SubregionName" : {
                "type" : "string",
                "description" : "The name of the Subregion in which the Subnet is located."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Subnet.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Subnet."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkPublicIpResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateApiAccessRuleRequest" : {
        "type" : "object",
        "properties" : {
          "CaIds" : {
            "type" : "array",
            "description" : " One or more IDs of Client Certificate Authorities (CAs).",
            "items" : {
              "type" : "string"
            }
          },
          "Cns" : {
            "type" : "array",
            "description" : "One or more Client Certificate Common Names (CNs). If this parameter is specified, you must also specify the `CaIds` parameter.",
            "items" : {
              "type" : "string"
            }
          },
          "Description" : {
            "type" : "string",
            "description" : "A description for the API access rule."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "IpRanges" : {
            "type" : "array",
            "description" : "One or more IP ranges, in CIDR notation (for example, 192.0.2.0/16).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "CreateKeypairRequest" : {
        "required" : [ "KeypairName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "KeypairName" : {
            "type" : "string",
            "description" : "A unique name for the keypair, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters)."
          },
          "PublicKey" : {
            "type" : "string",
            "description" : "The public key. It must be base64-encoded."
          }
        },
        "additionalProperties" : false
      },
      "ReadDhcpOptionsResponse" : {
        "type" : "object",
        "properties" : {
          "DhcpOptionsSets" : {
            "type" : "array",
            "description" : "Information about one or more DHCP options sets.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Default" : {
                  "type" : "boolean",
                  "description" : "If true, the DHCP options set is a default one. If false, it is not."
                },
                "DhcpOptionsSetId" : {
                  "type" : "string",
                  "description" : "The ID of the DHCP options set."
                },
                "DomainName" : {
                  "type" : "string",
                  "description" : "The domain name."
                },
                "DomainNameServers" : {
                  "type" : "array",
                  "description" : "One or more IP addresses for the domain name servers.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "NtpServers" : {
                  "type" : "array",
                  "description" : "One or more IP addresses for the NTP servers.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the DHCP options set.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the DHCP options set."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "StopVmsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Vms" : {
            "type" : "array",
            "description" : "Information about one or more stopped VMs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "CurrentState" : {
                  "type" : "string",
                  "description" : "The current state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                },
                "PreviousState" : {
                  "type" : "string",
                  "description" : "The previous state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the state of the VM."
            }
          }
        },
        "additionalProperties" : false
      },
      "UpdateLoadBalancerResponse" : {
        "type" : "object",
        "properties" : {
          "LoadBalancer" : {
            "type" : "object",
            "properties" : {
              "AccessLog" : {
                "type" : "object",
                "properties" : {
                  "IsEnabled" : {
                    "type" : "boolean",
                    "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                  },
                  "OsuBucketName" : {
                    "type" : "string",
                    "description" : "The name of the OOS bucket for the access logs."
                  },
                  "OsuBucketPrefix" : {
                    "type" : "string",
                    "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                  },
                  "PublicationInterval" : {
                    "type" : "integer",
                    "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about access logs."
              },
              "ApplicationStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The stickiness policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieName" : {
                      "type" : "string",
                      "description" : "The name of the application cookie used for stickiness."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "BackendVmIds" : {
                "type" : "array",
                "description" : "One or more IDs of back-end VMs for the load balancer.",
                "items" : {
                  "type" : "string"
                }
              },
              "DnsName" : {
                "type" : "string",
                "description" : "The DNS name of the load balancer."
              },
              "HealthCheck" : {
                "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                "type" : "object",
                "properties" : {
                  "CheckInterval" : {
                    "type" : "integer",
                    "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                  },
                  "HealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                  },
                  "Path" : {
                    "type" : "string",
                    "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                  },
                  "Port" : {
                    "type" : "integer",
                    "description" : "The port number (between `1` and `65535`, both included)."
                  },
                  "Protocol" : {
                    "type" : "string",
                    "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                  },
                  "Timeout" : {
                    "type" : "integer",
                    "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                  },
                  "UnhealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the health check configuration."
              },
              "Listeners" : {
                "type" : "array",
                "description" : "The listeners for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "BackendPort" : {
                      "type" : "integer",
                      "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                    },
                    "BackendProtocol" : {
                      "type" : "string",
                      "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "LoadBalancerPort" : {
                      "type" : "integer",
                      "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                    },
                    "LoadBalancerProtocol" : {
                      "type" : "string",
                      "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "PolicyNames" : {
                      "type" : "array",
                      "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ServerCertificateId" : {
                      "type" : "string",
                      "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the listener."
                }
              },
              "LoadBalancerName" : {
                "type" : "string",
                "description" : "The name of the load balancer."
              },
              "LoadBalancerStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieExpirationPeriod" : {
                      "type" : "integer",
                      "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The name of the stickiness policy."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "LoadBalancerType" : {
                "type" : "string",
                "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the load balancer."
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceSecurityGroup" : {
                "type" : "object",
                "properties" : {
                  "SecurityGroupAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the security group."
                  },
                  "SecurityGroupName" : {
                    "type" : "string",
                    "description" : "The name of the security group."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
              },
              "Subnets" : {
                "type" : "array",
                "description" : "The ID of the Subnet in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The ID of the Subregion in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the load balancer.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the load balancer."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateLoadBalancerRequest" : {
        "required" : [ "LoadBalancerName" ],
        "type" : "object",
        "properties" : {
          "AccessLog" : {
            "type" : "object",
            "properties" : {
              "IsEnabled" : {
                "type" : "boolean",
                "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
              },
              "OsuBucketName" : {
                "type" : "string",
                "description" : "The name of the OOS bucket for the access logs."
              },
              "OsuBucketPrefix" : {
                "type" : "string",
                "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
              },
              "PublicationInterval" : {
                "type" : "integer",
                "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about access logs."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "HealthCheck" : {
            "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
            "type" : "object",
            "properties" : {
              "CheckInterval" : {
                "type" : "integer",
                "description" : "The number of seconds between two pings (between `5` and `600` both included)."
              },
              "HealthyThreshold" : {
                "type" : "integer",
                "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
              },
              "Path" : {
                "type" : "string",
                "description" : "If you use the HTTP or HTTPS protocols, the ping path."
              },
              "Port" : {
                "type" : "integer",
                "description" : "The port number (between `1` and `65535`, both included)."
              },
              "Protocol" : {
                "type" : "string",
                "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
              },
              "Timeout" : {
                "type" : "integer",
                "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
              },
              "UnhealthyThreshold" : {
                "type" : "integer",
                "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the health check configuration."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer."
          },
          "LoadBalancerPort" : {
            "type" : "integer",
            "description" : "The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate."
          },
          "PolicyNames" : {
            "type" : "array",
            "description" : "The name of the policy you want to enable for the listener.",
            "items" : {
              "type" : "string"
            }
          },
          "SecurityGroups" : {
            "type" : "array",
            "description" : "(Net only) One or more IDs of security groups you want to assign to the load balancer. You need to specify the already assigned security groups that you want to keep along with the new ones you are assigning. If the list is empty, the default security group of the Net is assigned to the load balancer.",
            "items" : {
              "type" : "string"
            }
          },
          "ServerCertificateId" : {
            "type" : "string",
            "description" : "The Outscale Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > Outscale Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat). If this parameter is specified, you must also specify the `LoadBalancerPort` parameter."
          }
        },
        "additionalProperties" : false
      },
      "CreateAccountRequest" : {
        "required" : [ "City", "CompanyName", "Country", "CustomerId", "Email", "FirstName", "LastName", "ZipCode" ],
        "type" : "object",
        "properties" : {
          "City" : {
            "type" : "string",
            "description" : "The city of the account owner."
          },
          "CompanyName" : {
            "type" : "string",
            "description" : "The name of the company for the account."
          },
          "Country" : {
            "type" : "string",
            "description" : "The country of the account owner."
          },
          "CustomerId" : {
            "type" : "string",
            "description" : "The ID of the customer. It must be 8 digits."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Email" : {
            "type" : "string",
            "description" : "The email address for the account."
          },
          "FirstName" : {
            "type" : "string",
            "description" : "The first name of the account owner."
          },
          "JobTitle" : {
            "type" : "string",
            "description" : "The job title of the account owner."
          },
          "LastName" : {
            "type" : "string",
            "description" : "The last name of the account owner."
          },
          "MobileNumber" : {
            "type" : "string",
            "description" : "The mobile phone number of the account owner."
          },
          "PhoneNumber" : {
            "type" : "string",
            "description" : "The landline phone number of the account owner."
          },
          "StateProvince" : {
            "type" : "string",
            "description" : "The state/province of the account."
          },
          "VatNumber" : {
            "type" : "string",
            "description" : "The value added tax (VAT) number for the account."
          },
          "ZipCode" : {
            "type" : "string",
            "description" : "The ZIP code of the city."
          }
        },
        "additionalProperties" : false
      },
      "ReadListenerRulesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "ListenerRuleNames" : {
                "type" : "array",
                "description" : "The names of the listener rules.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadImageExportTasksResponse" : {
        "type" : "object",
        "properties" : {
          "ImageExportTasks" : {
            "type" : "array",
            "description" : "Information about one or more image export tasks.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Comment" : {
                  "type" : "string",
                  "description" : "If the OMI export task fails, an error message appears."
                },
                "ImageId" : {
                  "type" : "string",
                  "description" : "The ID of the OMI to be exported."
                },
                "OsuExport" : {
                  "required" : [ "DiskImageFormat", "OsuBucket" ],
                  "type" : "object",
                  "properties" : {
                    "DiskImageFormat" : {
                      "type" : "string",
                      "description" : "The format of the export disk (`qcow2` \\| `raw`)."
                    },
                    "OsuBucket" : {
                      "type" : "string",
                      "description" : "The name of the OOS bucket the OMI is exported to."
                    },
                    "OsuManifestUrl" : {
                      "type" : "string",
                      "description" : "The URL of the manifest file."
                    },
                    "OsuPrefix" : {
                      "type" : "string",
                      "description" : "The prefix for the key of the OOS object corresponding to the image."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the OMI export task."
                },
                "Progress" : {
                  "type" : "integer",
                  "description" : "The progress of the OMI export task, as a percentage."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the OMI export task (`pending/queued` \\| `pending` \\| `completed` \\| `failed` \\| `cancelled`)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the image export task.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "TaskId" : {
                  "type" : "string",
                  "description" : "The ID of the OMI export task."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the OMI export task."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadDirectLinkInterfacesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "DirectLinkIds" : {
                "type" : "array",
                "description" : "The IDs of the DirectLinks.",
                "items" : {
                  "type" : "string"
                }
              },
              "DirectLinkInterfaceIds" : {
                "type" : "array",
                "description" : "The IDs of the DirectLink interfaces.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "Quota" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the quotas."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the quota."
          },
          "MaxValue" : {
            "type" : "integer",
            "description" : "The maximum value of the quota for the OUTSCALE user account (if there is no limit, `0`)."
          },
          "Name" : {
            "type" : "string",
            "description" : "The unique name of the quota."
          },
          "QuotaCollection" : {
            "type" : "string",
            "description" : "The group name of the quota."
          },
          "ShortDescription" : {
            "type" : "string",
            "description" : "The description of the quota."
          },
          "UsedValue" : {
            "type" : "integer",
            "description" : "The limit value currently used by the OUTSCALE user account."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the quota."
      },
      "CreateRouteRequest" : {
        "required" : [ "DestinationIpRange", "RouteTableId" ],
        "type" : "object",
        "properties" : {
          "DestinationIpRange" : {
            "type" : "string",
            "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "GatewayId" : {
            "type" : "string",
            "description" : "The ID of an Internet service or virtual gateway attached to your Net."
          },
          "NatServiceId" : {
            "type" : "string",
            "description" : "The ID of a NAT service."
          },
          "NetPeeringId" : {
            "type" : "string",
            "description" : "The ID of a Net peering connection."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of a NIC."
          },
          "RouteTableId" : {
            "type" : "string",
            "description" : "The ID of the route table for which you want to create a route."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of a NAT VM in your Net (attached to exactly one NIC)."
          }
        },
        "additionalProperties" : false
      },
      "FiltersQuota" : {
        "type" : "object",
        "properties" : {
          "Collections" : {
            "type" : "array",
            "description" : "The group names of the quotas.",
            "items" : {
              "type" : "string"
            }
          },
          "QuotaNames" : {
            "type" : "array",
            "description" : "The names of the quotas.",
            "items" : {
              "type" : "string"
            }
          },
          "QuotaTypes" : {
            "type" : "array",
            "description" : "The resource IDs if these are resource-specific quotas, `global` if they are not.",
            "items" : {
              "type" : "string"
            }
          },
          "ShortDescriptions" : {
            "type" : "array",
            "description" : "The description of the quotas.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadNetPeeringsResponse" : {
        "type" : "object",
        "properties" : {
          "NetPeerings" : {
            "type" : "array",
            "description" : "Information about one or more Net peering connections.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccepterNet" : {
                  "type" : "object",
                  "properties" : {
                    "AccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the accepter Net."
                    },
                    "IpRange" : {
                      "type" : "string",
                      "description" : "The IP range for the accepter Net, in CIDR notation (for example, 10.0.0.0/16)."
                    },
                    "NetId" : {
                      "type" : "string",
                      "description" : "The ID of the accepter Net."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the accepter Net."
                },
                "NetPeeringId" : {
                  "type" : "string",
                  "description" : "The ID of the Net peering connection."
                },
                "SourceNet" : {
                  "type" : "object",
                  "properties" : {
                    "AccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the source Net."
                    },
                    "IpRange" : {
                      "type" : "string",
                      "description" : "The IP range for the source Net, in CIDR notation (for example, 10.0.0.0/16)."
                    },
                    "NetId" : {
                      "type" : "string",
                      "description" : "The ID of the source Net."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the source Net."
                },
                "State" : {
                  "type" : "object",
                  "properties" : {
                    "Message" : {
                      "type" : "string",
                      "description" : "Additional information about the state of the Net peering connection."
                    },
                    "Name" : {
                      "type" : "string",
                      "description" : "The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the state of the Net peering connection."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the Net peering connection.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the Net peering connection."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadFlexibleGpusResponse" : {
        "type" : "object",
        "properties" : {
          "FlexibleGpus" : {
            "type" : "array",
            "description" : "Information about one or more fGPUs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "DeleteOnVmDeletion" : {
                  "type" : "boolean",
                  "description" : "If true, the fGPU is deleted when the VM is terminated."
                },
                "FlexibleGpuId" : {
                  "type" : "string",
                  "description" : "The ID of the fGPU."
                },
                "Generation" : {
                  "type" : "string",
                  "description" : "The compatible processor generation."
                },
                "ModelName" : {
                  "type" : "string",
                  "description" : "The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`)."
                },
                "SubregionName" : {
                  "type" : "string",
                  "description" : "The Subregion where the fGPU is located."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM the fGPU is attached to, if any."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the flexible GPU (fGPU)."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteVpnConnectionRouteResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadSecurityGroupsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "SecurityGroups" : {
            "type" : "array",
            "description" : "Information about one or more security groups.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The account ID of a user that has been granted permission."
                },
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the security group."
                },
                "InboundRules" : {
                  "type" : "array",
                  "description" : "The inbound rules associated with the security group.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "FromPortRange" : {
                        "type" : "integer",
                        "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                      },
                      "IpProtocol" : {
                        "type" : "string",
                        "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                      },
                      "IpRanges" : {
                        "type" : "array",
                        "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SecurityGroupsMembers" : {
                        "type" : "array",
                        "description" : "Information about one or more members of a security group.",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "AccountId" : {
                              "type" : "string",
                              "description" : "The account ID of a user."
                            },
                            "SecurityGroupId" : {
                              "type" : "string",
                              "description" : "The ID of the security group."
                            },
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the member of a security group."
                        }
                      },
                      "ServiceIds" : {
                        "type" : "array",
                        "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ToPortRange" : {
                        "type" : "integer",
                        "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the security group rule."
                  }
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net for the security group."
                },
                "OutboundRules" : {
                  "type" : "array",
                  "description" : "The outbound rules associated with the security group.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "FromPortRange" : {
                        "type" : "integer",
                        "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                      },
                      "IpProtocol" : {
                        "type" : "string",
                        "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                      },
                      "IpRanges" : {
                        "type" : "array",
                        "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "SecurityGroupsMembers" : {
                        "type" : "array",
                        "description" : "Information about one or more members of a security group.",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "AccountId" : {
                              "type" : "string",
                              "description" : "The account ID of a user."
                            },
                            "SecurityGroupId" : {
                              "type" : "string",
                              "description" : "The ID of the security group."
                            },
                            "SecurityGroupName" : {
                              "type" : "string",
                              "description" : "The name of the security group."
                            }
                          },
                          "additionalProperties" : false,
                          "description" : "Information about the member of a security group."
                        }
                      },
                      "ServiceIds" : {
                        "type" : "array",
                        "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "ToPortRange" : {
                        "type" : "integer",
                        "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the security group rule."
                  }
                },
                "SecurityGroupId" : {
                  "type" : "string",
                  "description" : "The ID of the security group."
                },
                "SecurityGroupName" : {
                  "type" : "string",
                  "description" : "The name of the security group."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the security group.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the security group."
            }
          }
        },
        "additionalProperties" : false
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "Code" : {
            "type" : "string",
            "description" : "The location code, to be set as the `Location` parameter of the *CreateDirectLink* method when creating a DirectLink."
          },
          "Name" : {
            "type" : "string",
            "description" : "The name and description of the location, corresponding to a datacenter."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the DirectLink location."
      },
      "ReadAdminPasswordRequest" : {
        "required" : [ "VmId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          }
        },
        "additionalProperties" : false
      },
      "DeleteListenerRuleRequest" : {
        "required" : [ "ListenerRuleName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ListenerRuleName" : {
            "type" : "string",
            "description" : "The name of the rule you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "Account" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The ID of the account."
          },
          "City" : {
            "type" : "string",
            "description" : "The city of the account owner."
          },
          "CompanyName" : {
            "type" : "string",
            "description" : "The name of the company for the account."
          },
          "Country" : {
            "type" : "string",
            "description" : "The country of the account owner."
          },
          "CustomerId" : {
            "type" : "string",
            "description" : "The ID of the customer."
          },
          "Email" : {
            "type" : "string",
            "description" : "The email address for the account."
          },
          "FirstName" : {
            "type" : "string",
            "description" : "The first name of the account owner."
          },
          "JobTitle" : {
            "type" : "string",
            "description" : "The job title of the account owner."
          },
          "LastName" : {
            "type" : "string",
            "description" : "The last name of the account owner."
          },
          "MobileNumber" : {
            "type" : "string",
            "description" : "The mobile phone number of the account owner."
          },
          "PhoneNumber" : {
            "type" : "string",
            "description" : "The landline phone number of the account owner."
          },
          "StateProvince" : {
            "type" : "string",
            "description" : "The state/province of the account."
          },
          "VatNumber" : {
            "type" : "string",
            "description" : "The value added tax (VAT) number for the account."
          },
          "ZipCode" : {
            "type" : "string",
            "description" : "The ZIP code of the city."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the account."
      },
      "CreateVolumeRequest" : {
        "required" : [ "SubregionName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Iops" : {
            "type" : "integer",
            "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
          },
          "Size" : {
            "type" : "integer",
            "description" : "The size of the volume, in gibibytes (GiB). The maximum allowed size for a volume is 14901 GiB. This parameter is required if the volume is not created from a snapshot (`SnapshotId` unspecified). "
          },
          "SnapshotId" : {
            "type" : "string",
            "description" : "The ID of the snapshot from which you want to create the volume."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The Subregion in which you want to create the volume."
          },
          "VolumeType" : {
            "type" : "string",
            "description" : "The type of volume you want to create (`io1` \\| `gp2` \\| `standard`). If not specified, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
          }
        },
        "additionalProperties" : false
      },
      "ApiAccessPolicy" : {
        "type" : "object",
        "properties" : {
          "MaxAccessKeyExpirationSeconds" : {
            "type" : "integer",
            "description" : "The maximum possible lifetime for your access keys, in seconds. If `0`, your access keys can have unlimited lifetimes.",
            "format" : "int64"
          },
          "RequireTrustedEnv" : {
            "type" : "boolean",
            "description" : "If true, a trusted session is activated, allowing you to bypass Certificate Authorities (CAs) enforcement. For more information, see the `ApiKeyAuth` authentication scheme in the [Authentication](#authentication) section."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the API access policy."
      },
      "DeleteImageResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadVirtualGatewaysRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "ConnectionTypes" : {
                "type" : "array",
                "description" : "The types of the virtual gateways (only `ipsec.1` is supported).",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkNetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets the virtual gateways are attached to.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkStates" : {
                "type" : "array",
                "description" : "The current states of the attachments between the virtual gateways and the Nets (`attaching` \\| `attached` \\| `detaching` \\| `detached`).",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the virtual gateways (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the virtual gateways.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the virtual gateways.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the virtual gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              },
              "VirtualGatewayIds" : {
                "type" : "array",
                "description" : "The IDs of the virtual gateways.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "DeleteFlexibleGpuResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "RejectNetPeeringRequest" : {
        "required" : [ "NetPeeringId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetPeeringId" : {
            "type" : "string",
            "description" : "The ID of the Net peering connection you want to reject."
          }
        },
        "additionalProperties" : false
      },
      "UpdateRouteResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "RouteTable" : {
            "type" : "object",
            "properties" : {
              "LinkRouteTables" : {
                "type" : "array",
                "description" : "One or more associations between the route table and Subnets.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "LinkRouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the association between the route table and the Subnet."
                    },
                    "Main" : {
                      "type" : "boolean",
                      "description" : "If true, the route table is the main one."
                    },
                    "RouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the route table."
                    },
                    "SubnetId" : {
                      "type" : "string",
                      "description" : "The ID of the Subnet."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "One or more associations between the route table and the Subnets."
                }
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the route table."
              },
              "RoutePropagatingVirtualGateways" : {
                "type" : "array",
                "description" : "Information about virtual gateways propagating routes.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "VirtualGatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the virtual gateway."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route propagating virtual gateway."
                }
              },
              "RouteTableId" : {
                "type" : "string",
                "description" : "The ID of the route table."
              },
              "Routes" : {
                "type" : "array",
                "description" : "One or more routes in the route table.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CreationMethod" : {
                      "type" : "string",
                      "description" : "The method used to create the route."
                    },
                    "DestinationIpRange" : {
                      "type" : "string",
                      "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                    },
                    "DestinationServiceId" : {
                      "type" : "string",
                      "description" : "The ID of the OUTSCALE service."
                    },
                    "GatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                    },
                    "NatServiceId" : {
                      "type" : "string",
                      "description" : "The ID of a NAT service attached to the Net."
                    },
                    "NetAccessPointId" : {
                      "type" : "string",
                      "description" : "The ID of the Net access point."
                    },
                    "NetPeeringId" : {
                      "type" : "string",
                      "description" : "The ID of the Net peering connection."
                    },
                    "NicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                    },
                    "VmAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the VM."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of a VM specified in a route in the table."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route."
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the route table.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the route table."
          }
        },
        "additionalProperties" : false
      },
      "ReadServerCertificatesResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "ServerCertificates" : {
            "type" : "array",
            "description" : "Information about one or more server certificates.",
            "items" : {
              "type" : "object",
              "properties" : {
                "ExpirationDate" : {
                  "type" : "string",
                  "description" : "The date at which the server certificate expires.",
                  "format" : "date"
                },
                "Id" : {
                  "type" : "string",
                  "description" : "The ID of the server certificate."
                },
                "Name" : {
                  "type" : "string",
                  "description" : "The name of the server certificate."
                },
                "Path" : {
                  "type" : "string",
                  "description" : "The path to the server certificate."
                },
                "UploadDate" : {
                  "type" : "string",
                  "description" : "The date at which the server certificate has been uploaded.",
                  "format" : "date"
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the server certificate."
            }
          }
        },
        "additionalProperties" : false
      },
      "ReadAccessKeysRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "AccessKeyIds" : {
                "type" : "array",
                "description" : "The IDs of the access keys.",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the access keys (`ACTIVE` \\| `INACTIVE`).",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadRegionsResponse" : {
        "type" : "object",
        "properties" : {
          "Regions" : {
            "type" : "array",
            "description" : "Information about one or more Regions.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Endpoint" : {
                  "type" : "string",
                  "description" : "The hostname of the gateway to access the Region."
                },
                "RegionName" : {
                  "type" : "string",
                  "description" : "The administrative name of the Region."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the Region."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "AccessKeySecretKey" : {
        "type" : "object",
        "properties" : {
          "AccessKeyId" : {
            "type" : "string",
            "description" : "The ID of the secret access key."
          },
          "CreationDate" : {
            "type" : "string",
            "description" : "The date and time of creation of the secret access key.",
            "format" : "datetime"
          },
          "ExpirationDate" : {
            "type" : "string",
            "description" : "The date at which the access key expires.",
            "format" : "datetime"
          },
          "LastModificationDate" : {
            "type" : "string",
            "description" : "The date and time of the last modification of the secret access key.",
            "format" : "datetime"
          },
          "SecretKey" : {
            "type" : "string",
            "description" : "The secret access key that enables you to send requests."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the secret access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the secret access key."
      },
      "SecurityGroupLight" : {
        "type" : "object",
        "properties" : {
          "SecurityGroupId" : {
            "type" : "string",
            "description" : "The ID of the security group."
          },
          "SecurityGroupName" : {
            "type" : "string",
            "description" : "The name of the security group."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the security group."
      },
      "DeleteServerCertificateResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteDirectLinkInterfaceResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeregisterVmsInLoadBalancerRequest" : {
        "required" : [ "BackendVmIds", "LoadBalancerName" ],
        "type" : "object",
        "properties" : {
          "BackendVmIds" : {
            "type" : "array",
            "description" : "One or more IDs of back-end VMs.",
            "items" : {
              "type" : "string"
            }
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer."
          }
        },
        "additionalProperties" : false
      },
      "CreateAccountResponse" : {
        "type" : "object",
        "properties" : {
          "Account" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The ID of the account."
              },
              "City" : {
                "type" : "string",
                "description" : "The city of the account owner."
              },
              "CompanyName" : {
                "type" : "string",
                "description" : "The name of the company for the account."
              },
              "Country" : {
                "type" : "string",
                "description" : "The country of the account owner."
              },
              "CustomerId" : {
                "type" : "string",
                "description" : "The ID of the customer."
              },
              "Email" : {
                "type" : "string",
                "description" : "The email address for the account."
              },
              "FirstName" : {
                "type" : "string",
                "description" : "The first name of the account owner."
              },
              "JobTitle" : {
                "type" : "string",
                "description" : "The job title of the account owner."
              },
              "LastName" : {
                "type" : "string",
                "description" : "The last name of the account owner."
              },
              "MobileNumber" : {
                "type" : "string",
                "description" : "The mobile phone number of the account owner."
              },
              "PhoneNumber" : {
                "type" : "string",
                "description" : "The landline phone number of the account owner."
              },
              "StateProvince" : {
                "type" : "string",
                "description" : "The state/province of the account."
              },
              "VatNumber" : {
                "type" : "string",
                "description" : "The value added tax (VAT) number for the account."
              },
              "ZipCode" : {
                "type" : "string",
                "description" : "The ZIP code of the city."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the account."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "Log" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the logged call."
          },
          "CallDuration" : {
            "type" : "integer",
            "description" : "The duration of the logged call, in microseconds."
          },
          "QueryAccessKey" : {
            "type" : "string",
            "description" : "The access key used for the logged call."
          },
          "QueryApiName" : {
            "type" : "string",
            "description" : "The name of the API used by the logged call (always `oapi` for the OUTSCALE API)."
          },
          "QueryApiVersion" : {
            "type" : "string",
            "description" : "The version of the API used by the logged call."
          },
          "QueryCallName" : {
            "type" : "string",
            "description" : "The name of the logged call."
          },
          "QueryDate" : {
            "type" : "string",
            "description" : "The date of the logged call, in ISO 8601 format.",
            "format" : "date"
          },
          "QueryHeaderRaw" : {
            "type" : "string",
            "description" : "The raw header of the HTTP request of the logged call."
          },
          "QueryHeaderSize" : {
            "type" : "integer",
            "description" : "The size of the raw header of the HTTP request of the logged call, in bytes."
          },
          "QueryIpAddress" : {
            "type" : "string",
            "description" : "The IP address used for the logged call."
          },
          "QueryPayloadRaw" : {
            "type" : "string",
            "description" : "The raw payload of the HTTP request of the logged call."
          },
          "QueryPayloadSize" : {
            "type" : "integer",
            "description" : "The size of the raw payload of the HTTP request of the logged call, in bytes."
          },
          "QueryUserAgent" : {
            "type" : "string",
            "description" : "The user agent of the HTTP request of the logged call."
          },
          "RequestId" : {
            "type" : "string",
            "description" : "The request ID provided in the response of the logged call."
          },
          "ResponseSize" : {
            "type" : "integer",
            "description" : "The size of the response of the logged call, in bytes."
          },
          "ResponseStatusCode" : {
            "type" : "integer",
            "description" : "The HTTP status code of the response of the logged call."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the log."
      },
      "LinkNicLight" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "If true, the NIC is deleted when the VM is terminated."
          },
          "DeviceNumber" : {
            "type" : "integer",
            "description" : "The device index for the NIC attachment (between 1 and 7, both included)."
          },
          "LinkNicId" : {
            "type" : "string",
            "description" : "The ID of the NIC to attach."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the network interface card (NIC)."
      },
      "UpdateAccessKeyRequest" : {
        "required" : [ "AccessKeyId", "State" ],
        "type" : "object",
        "properties" : {
          "AccessKeyId" : {
            "type" : "string",
            "description" : "The ID of the access key."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "State" : {
            "type" : "string",
            "description" : "The new state for the access key (`ACTIVE` \\| `INACTIVE`)."
          }
        },
        "additionalProperties" : false
      },
      "ReadAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "Accounts" : {
            "type" : "array",
            "description" : "The list of the accounts.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The ID of the account."
                },
                "City" : {
                  "type" : "string",
                  "description" : "The city of the account owner."
                },
                "CompanyName" : {
                  "type" : "string",
                  "description" : "The name of the company for the account."
                },
                "Country" : {
                  "type" : "string",
                  "description" : "The country of the account owner."
                },
                "CustomerId" : {
                  "type" : "string",
                  "description" : "The ID of the customer."
                },
                "Email" : {
                  "type" : "string",
                  "description" : "The email address for the account."
                },
                "FirstName" : {
                  "type" : "string",
                  "description" : "The first name of the account owner."
                },
                "JobTitle" : {
                  "type" : "string",
                  "description" : "The job title of the account owner."
                },
                "LastName" : {
                  "type" : "string",
                  "description" : "The last name of the account owner."
                },
                "MobileNumber" : {
                  "type" : "string",
                  "description" : "The mobile phone number of the account owner."
                },
                "PhoneNumber" : {
                  "type" : "string",
                  "description" : "The landline phone number of the account owner."
                },
                "StateProvince" : {
                  "type" : "string",
                  "description" : "The state/province of the account."
                },
                "VatNumber" : {
                  "type" : "string",
                  "description" : "The value added tax (VAT) number for the account."
                },
                "ZipCode" : {
                  "type" : "string",
                  "description" : "The ZIP code of the city."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the account."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "RegisterVmsInLoadBalancerResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteTagsRequest" : {
        "required" : [ "ResourceIds", "Tags" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "ResourceIds" : {
            "type" : "array",
            "description" : "One or more resource IDs.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags to delete (if you set a tag value, only the tags matching exactly this value are deleted).",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false
      },
      "FiltersAccessKeys" : {
        "type" : "object",
        "properties" : {
          "AccessKeyIds" : {
            "type" : "array",
            "description" : "The IDs of the access keys.",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the access keys (`ACTIVE` \\| `INACTIVE`).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "PermissionsOnResourceCreation" : {
        "type" : "object",
        "properties" : {
          "Additions" : {
            "type" : "object",
            "properties" : {
              "AccountIds" : {
                "type" : "array",
                "description" : "The account ID of one or more users who have permissions for the resource.",
                "items" : {
                  "type" : "string"
                }
              },
              "GlobalPermission" : {
                "type" : "boolean",
                "description" : "If true, the resource is public. If false, the resource is private."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the users who have permissions for the resource."
          },
          "Removals" : {
            "type" : "object",
            "properties" : {
              "AccountIds" : {
                "type" : "array",
                "description" : "The account ID of one or more users who have permissions for the resource.",
                "items" : {
                  "type" : "string"
                }
              },
              "GlobalPermission" : {
                "type" : "boolean",
                "description" : "If true, the resource is public. If false, the resource is private."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the users who have permissions for the resource."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the permissions for the resource."
      },
      "Keypair" : {
        "type" : "object",
        "properties" : {
          "KeypairFingerprint" : {
            "type" : "string",
            "description" : "The MD5 public key fingerprint as specified in section 4 of RFC 4716."
          },
          "KeypairName" : {
            "type" : "string",
            "description" : "The name of the keypair."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the keypair."
      },
      "FiltersRouteTable" : {
        "type" : "object",
        "properties" : {
          "LinkRouteTableIds" : {
            "type" : "array",
            "description" : "The IDs of the route tables involved in the associations.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkRouteTableLinkRouteTableIds" : {
            "type" : "array",
            "description" : "The IDs of the associations between the route tables and the Subnets.",
            "items" : {
              "type" : "string"
            }
          },
          "LinkRouteTableMain" : {
            "type" : "boolean",
            "description" : "If true, the route tables are the main ones for their Nets."
          },
          "LinkSubnetIds" : {
            "type" : "array",
            "description" : "The IDs of the Subnets involved in the associations.",
            "items" : {
              "type" : "string"
            }
          },
          "NetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets for the route tables.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteCreationMethods" : {
            "type" : "array",
            "description" : "The methods used to create a route.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteDestinationIpRanges" : {
            "type" : "array",
            "description" : "The IP ranges specified in routes in the tables.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteDestinationServiceIds" : {
            "type" : "array",
            "description" : "The service IDs specified in routes in the tables.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteGatewayIds" : {
            "type" : "array",
            "description" : "The IDs of the gateways specified in routes in the tables.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteNatServiceIds" : {
            "type" : "array",
            "description" : "The IDs of the NAT services specified in routes in the tables.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteNetPeeringIds" : {
            "type" : "array",
            "description" : "The IDs of the Net peering connections specified in routes in the tables.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteStates" : {
            "type" : "array",
            "description" : "The states of routes in the route tables (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteTableIds" : {
            "type" : "array",
            "description" : "The IDs of the route tables.",
            "items" : {
              "type" : "string"
            }
          },
          "RouteVmIds" : {
            "type" : "array",
            "description" : "The IDs of the VMs specified in routes in the tables.",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the route tables.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the route tables.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the route tables, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "RegisterVmsInLoadBalancerRequest" : {
        "required" : [ "BackendVmIds", "LoadBalancerName" ],
        "type" : "object",
        "properties" : {
          "BackendVmIds" : {
            "type" : "array",
            "description" : "One or more IDs of back-end VMs.<br />\nSpecifying the same ID several times has no effect as each back-end VM has equal weight.",
            "items" : {
              "type" : "string"
            }
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer."
          }
        },
        "additionalProperties" : false
      },
      "DeleteNatServiceResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LinkedVolume" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
          },
          "DeviceName" : {
            "type" : "string",
            "description" : "The name of the device."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the attachment of the volume (`attaching` \\| `detaching` \\| `attached` \\| `detached`)."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          },
          "VolumeId" : {
            "type" : "string",
            "description" : "The ID of the volume."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about volume attachment."
      },
      "ReadSubnetsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "AvailableIpsCounts" : {
                "type" : "array",
                "description" : "The number of available IPs.",
                "items" : {
                  "type" : "integer"
                }
              },
              "IpRanges" : {
                "type" : "array",
                "description" : "The IP ranges in the Subnets, in CIDR notation (for example, 10.0.0.0/16).",
                "items" : {
                  "type" : "string"
                }
              },
              "NetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets in which the Subnets are.",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the Subnets (`pending` \\| `available`).",
                "items" : {
                  "type" : "string"
                }
              },
              "SubnetIds" : {
                "type" : "array",
                "description" : "The IDs of the Subnets.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The names of the Subregions in which the Subnets are located.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the Subnets.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the Subnets.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the Subnets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "Subnet" : {
        "type" : "object",
        "properties" : {
          "AvailableIpsCount" : {
            "type" : "integer",
            "description" : "The number of available IP addresses in the Subnets."
          },
          "IpRange" : {
            "type" : "string",
            "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
          },
          "MapPublicIpOnLaunch" : {
            "type" : "boolean",
            "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net in which the Subnet is."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the Subnet (`pending` \\| `available`)."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet."
          },
          "SubregionName" : {
            "type" : "string",
            "description" : "The name of the Subregion in which the Subnet is located."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the Subnet.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the Subnet."
      },
      "CreateInternetServiceResponse" : {
        "type" : "object",
        "properties" : {
          "InternetService" : {
            "type" : "object",
            "properties" : {
              "InternetServiceId" : {
                "type" : "string",
                "description" : "The ID of the Internet service."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net attached to the Internet service."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the attachment of the Net to the Internet service (always `available`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Internet service.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Internet service."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "UpdateSubnetRequest" : {
        "required" : [ "MapPublicIpOnLaunch", "SubnetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "MapPublicIpOnLaunch" : {
            "type" : "boolean",
            "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet."
          }
        },
        "additionalProperties" : false
      },
      "NicForVmCreation" : {
        "type" : "object",
        "properties" : {
          "DeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "By default or if set to true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](#updatenic)."
          },
          "Description" : {
            "type" : "string",
            "description" : "The description of the NIC, if you are creating a NIC when creating the VM."
          },
          "DeviceNumber" : {
            "type" : "integer",
            "description" : "The index of the VM device for the NIC attachment (between 0 and 7, both included). This parameter is required if you create a NIC when creating the VM."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC, if you are attaching an existing NIC when creating a VM."
          },
          "PrivateIps" : {
            "type" : "array",
            "description" : "One or more private IP addresses to assign to the NIC, if you create a NIC when creating a VM. Only one private IP address can be the primary private IP address.",
            "items" : {
              "type" : "object",
              "properties" : {
                "IsPrimary" : {
                  "type" : "boolean",
                  "description" : "If true, the IP address is the primary private IP address of the NIC."
                },
                "PrivateIp" : {
                  "type" : "string",
                  "description" : "The private IP address of the NIC."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the private IP."
            }
          },
          "SecondaryPrivateIpCount" : {
            "type" : "integer",
            "description" : "The number of secondary private IP addresses, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP address in the `PrivateIps` parameter."
          },
          "SecurityGroupIds" : {
            "type" : "array",
            "description" : "One or more IDs of security groups for the NIC, if you acreate a NIC when creating a VM.",
            "items" : {
              "type" : "string"
            }
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet for the NIC, if you create a NIC when creating a VM."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the network interface card (NIC) when creating a virtual machine (VM)."
      },
      "PermissionsOnResource" : {
        "type" : "object",
        "properties" : {
          "AccountIds" : {
            "type" : "array",
            "description" : "The account ID of one or more users who have permissions for the resource.",
            "items" : {
              "type" : "string"
            }
          },
          "GlobalPermission" : {
            "type" : "boolean",
            "description" : "If true, the resource is public. If false, the resource is private."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the users who have permissions for the resource."
      },
      "LoadBalancerTag" : {
        "type" : "object",
        "properties" : {
          "Key" : {
            "type" : "string",
            "description" : "The key of the tag."
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer."
          },
          "Value" : {
            "type" : "string",
            "description" : "The value of the tag."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the load balancer tag."
      },
      "UpdateApiAccessRuleResponse" : {
        "type" : "object",
        "properties" : {
          "ApiAccessRule" : {
            "type" : "object",
            "properties" : {
              "ApiAccessRuleId" : {
                "type" : "string",
                "description" : " The ID of the API access rule."
              },
              "CaIds" : {
                "type" : "array",
                "description" : "One or more IDs of Client Certificate Authorities (CAs) used for the API access rule.",
                "items" : {
                  "type" : "string"
                }
              },
              "Cns" : {
                "type" : "array",
                "description" : "One or more Client Certificate Common Names (CNs).",
                "items" : {
                  "type" : "string"
                }
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the API access rule."
              },
              "IpRanges" : {
                "type" : "array",
                "description" : "One or more IP ranges used for the API access rule, in CIDR notation (for example, 192.0.2.0/16).",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the API access rule."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LinkInternetServiceRequest" : {
        "required" : [ "InternetServiceId", "NetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "InternetServiceId" : {
            "type" : "string",
            "description" : "The ID of the Internet service you want to attach."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net to which you want to attach the Internet service."
          }
        },
        "additionalProperties" : false
      },
      "CreateVirtualGatewayResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "VirtualGateway" : {
            "type" : "object",
            "properties" : {
              "ConnectionType" : {
                "type" : "string",
                "description" : "The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported)."
              },
              "NetToVirtualGatewayLinks" : {
                "type" : "array",
                "description" : "The Net to which the virtual gateway is attached.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "NetId" : {
                      "type" : "string",
                      "description" : "The ID of the Net to which the virtual gateway is attached."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the attachment."
                }
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the virtual gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the virtual gateway.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "VirtualGatewayId" : {
                "type" : "string",
                "description" : "The ID of the virtual gateway."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the virtual gateway."
          }
        },
        "additionalProperties" : false
      },
      "ReadVpnConnectionsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "VpnConnections" : {
            "type" : "array",
            "description" : "Information about one or more VPN connections.",
            "items" : {
              "type" : "object",
              "properties" : {
                "ClientGatewayConfiguration" : {
                  "type" : "string",
                  "description" : "Example configuration for the client gateway."
                },
                "ClientGatewayId" : {
                  "type" : "string",
                  "description" : "The ID of the client gateway used on the client end of the connection."
                },
                "ConnectionType" : {
                  "type" : "string",
                  "description" : "The type of VPN connection (always `ipsec.1`)."
                },
                "Routes" : {
                  "type" : "array",
                  "description" : "Information about one or more static routes associated with the VPN connection, if any.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "DestinationIpRange" : {
                        "type" : "string",
                        "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                      },
                      "RouteType" : {
                        "type" : "string",
                        "description" : "The type of route (always `static`)."
                      },
                      "State" : {
                        "type" : "string",
                        "description" : "The current state of the static route (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the route."
                  }
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the VPN connection (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                },
                "StaticRoutesOnly" : {
                  "type" : "boolean",
                  "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the VPN connection.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "VirtualGatewayId" : {
                  "type" : "string",
                  "description" : "The ID of the virtual gateway used on the OUTSCALE end of the connection."
                },
                "VpnConnectionId" : {
                  "type" : "string",
                  "description" : "The ID of the VPN connection."
                },
                "VpnOptions" : {
                  "type" : "object",
                  "properties" : {
                    "Phase1Options" : {
                      "type" : "object",
                      "properties" : {
                        "DpdTimeoutAction" : {
                          "type" : "string",
                          "description" : "The action to carry out after a Dead Peer Detection (DPD) timeout occurs."
                        },
                        "DpdTimeoutSeconds" : {
                          "type" : "integer",
                          "description" : "The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds."
                        },
                        "IkeVersions" : {
                          "type" : "array",
                          "description" : "The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Phase1DhGroupNumbers" : {
                          "type" : "array",
                          "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "Phase1EncryptionAlgorithms" : {
                          "type" : "array",
                          "description" : "The encryption algorithms allowed for the VPN tunnel for phase 1.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Phase1IntegrityAlgorithms" : {
                          "type" : "array",
                          "description" : "The integrity algorithms allowed for the VPN tunnel for phase 1.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Phase1LifetimeSeconds" : {
                          "type" : "integer",
                          "description" : "The lifetime for phase 1 of the IKE negotiation process, in seconds."
                        },
                        "ReplayWindowSize" : {
                          "type" : "integer",
                          "description" : "The number of packets in an IKE replay window."
                        },
                        "StartupAction" : {
                          "type" : "string",
                          "description" : "The action to carry out when establishing tunnels for a VPN connection."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. "
                    },
                    "Phase2Options" : {
                      "type" : "object",
                      "properties" : {
                        "Phase2DhGroupNumbers" : {
                          "type" : "array",
                          "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 2.",
                          "items" : {
                            "type" : "integer"
                          }
                        },
                        "Phase2EncryptionAlgorithms" : {
                          "type" : "array",
                          "description" : "The encryption algorithms allowed for the VPN tunnel for phase 2.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Phase2IntegrityAlgorithms" : {
                          "type" : "array",
                          "description" : "The integrity algorithms allowed for the VPN tunnel for phase 2.",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "Phase2LifetimeSeconds" : {
                          "type" : "integer",
                          "description" : "The lifetime for phase 2 of the Internet Key Exchange (IKE) negociation process, in seconds."
                        },
                        "PreSharedKey" : {
                          "type" : "string",
                          "description" : "The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. "
                    },
                    "TunnelInsideIpRange" : {
                      "type" : "string",
                      "description" : "The IP range for the tunnel in your VPN connection."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the VPN options."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about a VPN connection."
            }
          }
        },
        "additionalProperties" : false
      },
      "StartVmsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Vms" : {
            "type" : "array",
            "description" : "Information about one or more started VMs.",
            "items" : {
              "type" : "object",
              "properties" : {
                "CurrentState" : {
                  "type" : "string",
                  "description" : "The current state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                },
                "PreviousState" : {
                  "type" : "string",
                  "description" : "The previous state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of the VM."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the state of the VM."
            }
          }
        },
        "additionalProperties" : false
      },
      "CreateNetAccessPointRequest" : {
        "required" : [ "NetId", "ServiceName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net."
          },
          "RouteTableIds" : {
            "type" : "array",
            "description" : "One or more IDs of route tables to use for the connection.",
            "items" : {
              "type" : "string"
            }
          },
          "ServiceName" : {
            "type" : "string",
            "description" : "The name of the service (in the format `com.outscale.region.service`)."
          }
        },
        "additionalProperties" : false
      },
      "AccessKey" : {
        "type" : "object",
        "properties" : {
          "AccessKeyId" : {
            "type" : "string",
            "description" : "The ID of the access key."
          },
          "CreationDate" : {
            "type" : "string",
            "description" : "The date and time of creation of the access key.",
            "format" : "datetime"
          },
          "ExpirationDate" : {
            "type" : "string",
            "description" : "The date at which the access key expires.",
            "format" : "datetime"
          },
          "LastModificationDate" : {
            "type" : "string",
            "description" : "The date and time of the last modification of the access key.",
            "format" : "datetime"
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the access key (`ACTIVE` if the key is valid for API calls, or `INACTIVE` if not)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the access key."
      },
      "RoutePropagatingVirtualGateway" : {
        "type" : "object",
        "properties" : {
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the virtual gateway."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the route propagating virtual gateway."
      },
      "DeleteNetPeeringResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteSubnetResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateServerCertificateResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "ServerCertificate" : {
            "type" : "object",
            "properties" : {
              "ExpirationDate" : {
                "type" : "string",
                "description" : "The date at which the server certificate expires.",
                "format" : "date"
              },
              "Id" : {
                "type" : "string",
                "description" : "The ID of the server certificate."
              },
              "Name" : {
                "type" : "string",
                "description" : "The name of the server certificate."
              },
              "Path" : {
                "type" : "string",
                "description" : "The path to the server certificate."
              },
              "UploadDate" : {
                "type" : "string",
                "description" : "The date at which the server certificate has been uploaded.",
                "format" : "date"
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the server certificate."
          }
        },
        "additionalProperties" : false
      },
      "ReadLoadBalancersRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "LoadBalancerNames" : {
                "type" : "array",
                "description" : "The names of the load balancers.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "OsuExportImageExportTask" : {
        "required" : [ "DiskImageFormat", "OsuBucket" ],
        "type" : "object",
        "properties" : {
          "DiskImageFormat" : {
            "type" : "string",
            "description" : "The format of the export disk (`qcow2` \\| `raw`)."
          },
          "OsuBucket" : {
            "type" : "string",
            "description" : "The name of the OOS bucket the OMI is exported to."
          },
          "OsuManifestUrl" : {
            "type" : "string",
            "description" : "The URL of the manifest file."
          },
          "OsuPrefix" : {
            "type" : "string",
            "description" : "The prefix for the key of the OOS object corresponding to the image."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the OMI export task."
      },
      "CreateNicRequest" : {
        "required" : [ "SubnetId" ],
        "type" : "object",
        "properties" : {
          "Description" : {
            "type" : "string",
            "description" : "A description for the NIC."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "PrivateIps" : {
            "type" : "array",
            "description" : "The primary private IP address for the NIC.<br />\nThis IP address must be within the IP address range of the Subnet that you specify with the `SubnetId` attribute.<br />\nIf you do not specify this attribute, a random private IP address is selected within the IP address range of the Subnet.",
            "items" : {
              "type" : "object",
              "properties" : {
                "IsPrimary" : {
                  "type" : "boolean",
                  "description" : "If true, the IP address is the primary private IP address of the NIC."
                },
                "PrivateIp" : {
                  "type" : "string",
                  "description" : "The private IP address of the NIC."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the private IP."
            }
          },
          "SecurityGroupIds" : {
            "type" : "array",
            "description" : "One or more IDs of security groups for the NIC.",
            "items" : {
              "type" : "string"
            }
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet in which you want to create the NIC."
          }
        },
        "additionalProperties" : false
      },
      "ReadSubregionsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "SubregionNames" : {
                "type" : "array",
                "description" : "The names of the Subregions.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "FiltersImage" : {
        "type" : "object",
        "properties" : {
          "AccountAliases" : {
            "type" : "array",
            "description" : "The account aliases of the owners of the OMIs.",
            "items" : {
              "type" : "string"
            }
          },
          "AccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owners of the OMIs. By default, all the OMIs for which you have launch permissions are described.",
            "items" : {
              "type" : "string"
            }
          },
          "Architectures" : {
            "type" : "array",
            "description" : "The architectures of the OMIs (`i386` \\| `x86_64`).",
            "items" : {
              "type" : "string"
            }
          },
          "BlockDeviceMappingDeleteOnVmDeletion" : {
            "type" : "boolean",
            "description" : "Whether the volumes are deleted or not when terminating the VM."
          },
          "BlockDeviceMappingDeviceNames" : {
            "type" : "array",
            "description" : "The device names for the volumes.",
            "items" : {
              "type" : "string"
            }
          },
          "BlockDeviceMappingSnapshotIds" : {
            "type" : "array",
            "description" : "The IDs of the snapshots used to create the volumes.",
            "items" : {
              "type" : "string"
            }
          },
          "BlockDeviceMappingVolumeSizes" : {
            "type" : "array",
            "description" : "The sizes of the volumes, in gibibytes (GiB).",
            "items" : {
              "type" : "integer"
            }
          },
          "BlockDeviceMappingVolumeTypes" : {
            "type" : "array",
            "description" : "The types of volumes (`standard` \\| `gp2` \\| `io1`).",
            "items" : {
              "type" : "string"
            }
          },
          "Descriptions" : {
            "type" : "array",
            "description" : "The descriptions of the OMIs, provided when they were created.",
            "items" : {
              "type" : "string"
            }
          },
          "FileLocations" : {
            "type" : "array",
            "description" : "The locations of the buckets where the OMI files are stored.",
            "items" : {
              "type" : "string"
            }
          },
          "Hypervisors" : {
            "type" : "array",
            "description" : "The hypervisor type of the OMI (always `xen`).",
            "items" : {
              "type" : "string"
            }
          },
          "ImageIds" : {
            "type" : "array",
            "description" : "The IDs of the OMIs.",
            "items" : {
              "type" : "string"
            }
          },
          "ImageNames" : {
            "type" : "array",
            "description" : "The names of the OMIs, provided when they were created.",
            "items" : {
              "type" : "string"
            }
          },
          "PermissionsToLaunchAccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the users who have launch permissions for the OMIs.",
            "items" : {
              "type" : "string"
            }
          },
          "PermissionsToLaunchGlobalPermission" : {
            "type" : "boolean",
            "description" : "If true, lists all public OMIs. If false, lists all private OMIs."
          },
          "ProductCodes" : {
            "type" : "array",
            "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
            "items" : {
              "type" : "string"
            }
          },
          "RootDeviceNames" : {
            "type" : "array",
            "description" : "The device names of the root devices (for example, `/dev/sda1`).",
            "items" : {
              "type" : "string"
            }
          },
          "RootDeviceTypes" : {
            "type" : "array",
            "description" : "The types of root device used by the OMIs (always `bsu`).",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the OMIs (`pending` \\| `available` \\| `failed`).",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the OMIs.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the OMIs.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the OMIs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          },
          "VirtualizationTypes" : {
            "type" : "array",
            "description" : "The virtualization types (always `hvm`).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "FiltersCa" : {
        "type" : "object",
        "properties" : {
          "CaFingerprints" : {
            "type" : "array",
            "description" : "The fingerprints of the CAs.",
            "items" : {
              "type" : "string"
            }
          },
          "CaIds" : {
            "type" : "array",
            "description" : "The IDs of the CAs.",
            "items" : {
              "type" : "string"
            }
          },
          "Descriptions" : {
            "type" : "array",
            "description" : "The descriptions of the CAs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadConsumptionAccountResponse" : {
        "type" : "object",
        "properties" : {
          "ConsumptionEntries" : {
            "type" : "array",
            "description" : "Information about the resources consumed during the specified time period.",
            "items" : {
              "type" : "object",
              "properties" : {
                "AccountId" : {
                  "type" : "string",
                  "description" : "The ID of your TINA account."
                },
                "Category" : {
                  "type" : "string",
                  "description" : "The category of the resource (for example, `network`)."
                },
                "FromDate" : {
                  "type" : "string",
                  "description" : "The beginning of the time period."
                },
                "Operation" : {
                  "type" : "string",
                  "description" : "The API call that triggered the resource consumption (for example, `RunInstances` or `CreateVolume`)."
                },
                "PayingAccountId" : {
                  "type" : "string",
                  "description" : "The ID of the TINA account which is billed for your consumption. It can be different from your account in the `AccountId` parameter."
                },
                "Service" : {
                  "type" : "string",
                  "description" : "The service of the API call (`TinaOS-FCU`, `TinaOS-LBU`, `TinaOS-DirectLink`, `TinaOS-OOS`, or `TinaOS-OSU`)."
                },
                "SubregionName" : {
                  "type" : "string",
                  "description" : "The name of the Subregion."
                },
                "Title" : {
                  "type" : "string",
                  "description" : "A description of the consumed resource."
                },
                "ToDate" : {
                  "type" : "string",
                  "description" : "The end of the time period."
                },
                "Type" : {
                  "type" : "string",
                  "description" : "The type of resource, depending on the API call."
                },
                "Value" : {
                  "type" : "number",
                  "description" : "The consumed amount for the resource. The unit depends on the resource type. For more information, see the `Title` element.",
                  "format" : "double"
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the resources consumed during the specified time period."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteDirectLinkRequest" : {
        "required" : [ "DirectLinkId" ],
        "type" : "object",
        "properties" : {
          "DirectLinkId" : {
            "type" : "string",
            "description" : "The ID of the DirectLink you want to delete."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "Key" : {
            "type" : "string",
            "description" : "The key of the tag, with a minimum of 1 character."
          },
          "ResourceId" : {
            "type" : "string",
            "description" : "The ID of the resource."
          },
          "ResourceType" : {
            "type" : "string",
            "description" : "The type of the resource."
          },
          "Value" : {
            "type" : "string",
            "description" : "The value of the tag, between 0 and 255 characters."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the tag."
      },
      "ReadRouteTablesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "LinkRouteTableIds" : {
                "type" : "array",
                "description" : "The IDs of the route tables involved in the associations.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkRouteTableLinkRouteTableIds" : {
                "type" : "array",
                "description" : "The IDs of the associations between the route tables and the Subnets.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkRouteTableMain" : {
                "type" : "boolean",
                "description" : "If true, the route tables are the main ones for their Nets."
              },
              "LinkSubnetIds" : {
                "type" : "array",
                "description" : "The IDs of the Subnets involved in the associations.",
                "items" : {
                  "type" : "string"
                }
              },
              "NetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets for the route tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteCreationMethods" : {
                "type" : "array",
                "description" : "The methods used to create a route.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteDestinationIpRanges" : {
                "type" : "array",
                "description" : "The IP ranges specified in routes in the tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteDestinationServiceIds" : {
                "type" : "array",
                "description" : "The service IDs specified in routes in the tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteGatewayIds" : {
                "type" : "array",
                "description" : "The IDs of the gateways specified in routes in the tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteNatServiceIds" : {
                "type" : "array",
                "description" : "The IDs of the NAT services specified in routes in the tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteNetPeeringIds" : {
                "type" : "array",
                "description" : "The IDs of the Net peering connections specified in routes in the tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteStates" : {
                "type" : "array",
                "description" : "The states of routes in the route tables (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteTableIds" : {
                "type" : "array",
                "description" : "The IDs of the route tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "RouteVmIds" : {
                "type" : "array",
                "description" : "The IDs of the VMs specified in routes in the tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the route tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the route tables.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the route tables, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadPublicIpsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "LinkPublicIpIds" : {
                "type" : "array",
                "description" : "The IDs representing the associations of EIPs with VMs or NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "NicAccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owners of the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "NicIds" : {
                "type" : "array",
                "description" : "The IDs of the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "Placements" : {
                "type" : "array",
                "description" : "Whether the EIPs are for use in the public Cloud or in a Net.",
                "items" : {
                  "type" : "string"
                }
              },
              "PrivateIps" : {
                "type" : "array",
                "description" : "The private IP addresses associated with the EIPs.",
                "items" : {
                  "type" : "string"
                }
              },
              "PublicIpIds" : {
                "type" : "array",
                "description" : "The IDs of the External IP addresses (EIPs).",
                "items" : {
                  "type" : "string"
                }
              },
              "PublicIps" : {
                "type" : "array",
                "description" : "The External IP addresses (EIPs).",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the EIPs.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the EIPs.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the EIPs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              },
              "VmIds" : {
                "type" : "array",
                "description" : "The IDs of the VMs.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "DeleteKeypairResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LinkPrivateIpsRequest" : {
        "required" : [ "NicId" ],
        "type" : "object",
        "properties" : {
          "AllowRelink" : {
            "type" : "boolean",
            "description" : "If true, allows an IP address that is already assigned to another NIC in the same Subnet to be assigned to the NIC you specified."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NicId" : {
            "type" : "string",
            "description" : "The ID of the NIC."
          },
          "PrivateIps" : {
            "type" : "array",
            "description" : "The secondary private IP address or addresses you want to assign to the NIC within the IP address range of the Subnet.",
            "items" : {
              "type" : "string"
            }
          },
          "SecondaryPrivateIpCount" : {
            "type" : "integer",
            "description" : "The number of secondary private IP addresses to assign to the NIC."
          }
        },
        "additionalProperties" : false
      },
      "CreateRouteTableResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "RouteTable" : {
            "type" : "object",
            "properties" : {
              "LinkRouteTables" : {
                "type" : "array",
                "description" : "One or more associations between the route table and Subnets.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "LinkRouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the association between the route table and the Subnet."
                    },
                    "Main" : {
                      "type" : "boolean",
                      "description" : "If true, the route table is the main one."
                    },
                    "RouteTableId" : {
                      "type" : "string",
                      "description" : "The ID of the route table."
                    },
                    "SubnetId" : {
                      "type" : "string",
                      "description" : "The ID of the Subnet."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "One or more associations between the route table and the Subnets."
                }
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the route table."
              },
              "RoutePropagatingVirtualGateways" : {
                "type" : "array",
                "description" : "Information about virtual gateways propagating routes.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "VirtualGatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the virtual gateway."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route propagating virtual gateway."
                }
              },
              "RouteTableId" : {
                "type" : "string",
                "description" : "The ID of the route table."
              },
              "Routes" : {
                "type" : "array",
                "description" : "One or more routes in the route table.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CreationMethod" : {
                      "type" : "string",
                      "description" : "The method used to create the route."
                    },
                    "DestinationIpRange" : {
                      "type" : "string",
                      "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                    },
                    "DestinationServiceId" : {
                      "type" : "string",
                      "description" : "The ID of the OUTSCALE service."
                    },
                    "GatewayId" : {
                      "type" : "string",
                      "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                    },
                    "NatServiceId" : {
                      "type" : "string",
                      "description" : "The ID of a NAT service attached to the Net."
                    },
                    "NetAccessPointId" : {
                      "type" : "string",
                      "description" : "The ID of the Net access point."
                    },
                    "NetPeeringId" : {
                      "type" : "string",
                      "description" : "The ID of the Net peering connection."
                    },
                    "NicId" : {
                      "type" : "string",
                      "description" : "The ID of the NIC."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                    },
                    "VmAccountId" : {
                      "type" : "string",
                      "description" : "The account ID of the owner of the VM."
                    },
                    "VmId" : {
                      "type" : "string",
                      "description" : "The ID of a VM specified in a route in the table."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route."
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the route table.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the route table."
          }
        },
        "additionalProperties" : false
      },
      "UpdateFlexibleGpuResponse" : {
        "type" : "object",
        "properties" : {
          "FlexibleGpu" : {
            "type" : "object",
            "properties" : {
              "DeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "If true, the fGPU is deleted when the VM is terminated."
              },
              "FlexibleGpuId" : {
                "type" : "string",
                "description" : "The ID of the fGPU."
              },
              "Generation" : {
                "type" : "string",
                "description" : "The compatible processor generation."
              },
              "ModelName" : {
                "type" : "string",
                "description" : "The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs)."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`)."
              },
              "SubregionName" : {
                "type" : "string",
                "description" : "The Subregion where the fGPU is located."
              },
              "VmId" : {
                "type" : "string",
                "description" : "The ID of the VM the fGPU is attached to, if any."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the flexible GPU (fGPU)."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DirectLink" : {
        "type" : "object",
        "properties" : {
          "AccountId" : {
            "type" : "string",
            "description" : "The account ID of the owner of the DirectLink."
          },
          "Bandwidth" : {
            "type" : "string",
            "description" : "The physical link bandwidth (either 1 Gbps or 10 Gbps)."
          },
          "DirectLinkId" : {
            "type" : "string",
            "description" : "The ID of the DirectLink (for example, dxcon-xxxxxxxx)."
          },
          "DirectLinkName" : {
            "type" : "string",
            "description" : "The name of the DirectLink."
          },
          "Location" : {
            "type" : "string",
            "description" : "The datacenter where the DirectLink is located."
          },
          "RegionName" : {
            "type" : "string",
            "description" : "The Region in which the DirectLink has been created."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the DirectLink.<br />\n* `requested`: The DirectLink is requested but the request has not been validated yet.<br />\n* `pending`: The DirectLink request has been validated. It remains in the `pending` state until you establish the physical link.<br />\n* `available`: The physical link is established and the connection is ready to use.<br />\n* `deleting`: The deletion process is in progress.<br />\n* `deleted`: The DirectLink is deleted."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the DirectLink."
      },
      "UnlinkPublicIpRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "LinkPublicIpId" : {
            "type" : "string",
            "description" : "The ID representing the association of the EIP with the VM or the NIC. This parameter is required unless you use the `PublicIp` parameter."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The EIP. This parameter is required unless you use the `LinkPublicIpId` parameter."
          }
        },
        "additionalProperties" : false
      },
      "UnlinkPrivateIpsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteInternetServiceRequest" : {
        "required" : [ "InternetServiceId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "InternetServiceId" : {
            "type" : "string",
            "description" : "The ID of the Internet service you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "CreateImageResponse" : {
        "type" : "object",
        "properties" : {
          "Image" : {
            "type" : "object",
            "properties" : {
              "AccountAlias" : {
                "type" : "string",
                "description" : "The account alias of the owner of the OMI."
              },
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the OMI."
              },
              "Architecture" : {
                "type" : "string",
                "description" : "The architecture of the OMI (by default, `i386`)."
              },
              "BlockDeviceMappings" : {
                "type" : "array",
                "description" : "One or more block device mappings.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "Bsu" : {
                      "type" : "object",
                      "properties" : {
                        "DeleteOnVmDeletion" : {
                          "type" : "boolean",
                          "description" : "By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM."
                        },
                        "Iops" : {
                          "type" : "integer",
                          "description" : "The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000`."
                        },
                        "SnapshotId" : {
                          "type" : "string",
                          "description" : "The ID of the snapshot used to create the volume."
                        },
                        "VolumeSize" : {
                          "type" : "integer",
                          "description" : "The size of the volume, in gibibytes (GiB).<br />\nIf you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />\nIf you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one."
                        },
                        "VolumeType" : {
                          "type" : "string",
                          "description" : "The type of the volume (`standard` \\| `io1` \\| `gp2`). If not specified in the request, a `standard` volume is created.<br />\nFor more information about volume types, see [Volume Types and IOPS](https://wiki.outscale.net/display/EN/About+Volumes#AboutVolumes-VolumeTypesVolumeTypesandIOPS)."
                        }
                      },
                      "additionalProperties" : false,
                      "description" : "Information about the BSU volume to create."
                    },
                    "DeviceName" : {
                      "type" : "string",
                      "description" : "The name of the device."
                    },
                    "VirtualDeviceName" : {
                      "type" : "string",
                      "description" : "The name of the virtual device (ephemeralN)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "One or more parameters used to automatically set up volumes when the VM is created."
                }
              },
              "CreationDate" : {
                "type" : "string",
                "description" : "The date and time at which the OMI was created.",
                "format" : "date"
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the OMI."
              },
              "FileLocation" : {
                "type" : "string",
                "description" : "The location of the bucket where the OMI files are stored."
              },
              "ImageId" : {
                "type" : "string",
                "description" : "The ID of the OMI."
              },
              "ImageName" : {
                "type" : "string",
                "description" : "The name of the OMI."
              },
              "ImageType" : {
                "type" : "string",
                "description" : "The type of the OMI."
              },
              "PermissionsToLaunch" : {
                "type" : "object",
                "properties" : {
                  "AccountIds" : {
                    "type" : "array",
                    "description" : "The account ID of one or more users who have permissions for the resource.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "GlobalPermission" : {
                    "type" : "boolean",
                    "description" : "If true, the resource is public. If false, the resource is private."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the users who have permissions for the resource."
              },
              "ProductCodes" : {
                "type" : "array",
                "description" : "The product code associated with the OMI (`0001` Linux/Unix \\| `0002` Windows \\| `0004` Linux/Oracle \\| `0005` Windows 10).",
                "items" : {
                  "type" : "string"
                }
              },
              "RootDeviceName" : {
                "type" : "string",
                "description" : "The name of the root device."
              },
              "RootDeviceType" : {
                "type" : "string",
                "description" : "The type of root device used by the OMI (always `bsu`)."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the OMI (`pending` \\| `available` \\| `failed`)."
              },
              "StateComment" : {
                "type" : "object",
                "properties" : {
                  "StateCode" : {
                    "type" : "string",
                    "description" : "The code of the change of state."
                  },
                  "StateMessage" : {
                    "type" : "string",
                    "description" : "A message explaining the change of state."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the change of state."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the OMI.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the OMI."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateDirectLinkRequest" : {
        "required" : [ "Bandwidth", "DirectLinkName", "Location" ],
        "type" : "object",
        "properties" : {
          "Bandwidth" : {
            "type" : "string",
            "description" : "The bandwidth of the DirectLink (`1Gbps` \\| `10Gbps`)."
          },
          "DirectLinkName" : {
            "type" : "string",
            "description" : "The name of the DirectLink."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Location" : {
            "type" : "string",
            "description" : "The code of the requested location for the DirectLink, returned by the [ReadLocations](#readlocations) method."
          }
        },
        "additionalProperties" : false
      },
      "CreateSecurityGroupResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "SecurityGroup" : {
            "type" : "object",
            "properties" : {
              "AccountId" : {
                "type" : "string",
                "description" : "The account ID of a user that has been granted permission."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the security group."
              },
              "InboundRules" : {
                "type" : "array",
                "description" : "The inbound rules associated with the security group.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "FromPortRange" : {
                      "type" : "integer",
                      "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                    },
                    "IpProtocol" : {
                      "type" : "string",
                      "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                    },
                    "IpRanges" : {
                      "type" : "array",
                      "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "SecurityGroupsMembers" : {
                      "type" : "array",
                      "description" : "Information about one or more members of a security group.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of a user."
                          },
                          "SecurityGroupId" : {
                            "type" : "string",
                            "description" : "The ID of the security group."
                          },
                          "SecurityGroupName" : {
                            "type" : "string",
                            "description" : "The name of the security group."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the member of a security group."
                      }
                    },
                    "ServiceIds" : {
                      "type" : "array",
                      "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ToPortRange" : {
                      "type" : "integer",
                      "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group rule."
                }
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the security group."
              },
              "OutboundRules" : {
                "type" : "array",
                "description" : "The outbound rules associated with the security group.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "FromPortRange" : {
                      "type" : "integer",
                      "description" : "The beginning of the port range for the TCP and UDP protocols, or an ICMP type number."
                    },
                    "IpProtocol" : {
                      "type" : "string",
                      "description" : "The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Net, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)."
                    },
                    "IpRanges" : {
                      "type" : "array",
                      "description" : "One or more IP ranges for the security group rules, in CIDR notation (for example, 10.0.0.0/16).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "SecurityGroupsMembers" : {
                      "type" : "array",
                      "description" : "Information about one or more members of a security group.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "AccountId" : {
                            "type" : "string",
                            "description" : "The account ID of a user."
                          },
                          "SecurityGroupId" : {
                            "type" : "string",
                            "description" : "The ID of the security group."
                          },
                          "SecurityGroupName" : {
                            "type" : "string",
                            "description" : "The name of the security group."
                          }
                        },
                        "additionalProperties" : false,
                        "description" : "Information about the member of a security group."
                      }
                    },
                    "ServiceIds" : {
                      "type" : "array",
                      "description" : "One or more service IDs to allow traffic from a Net to access the corresponding OUTSCALE services. For more information, see [ReadNetAccessPointServices](#readnetaccesspointservices).",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ToPortRange" : {
                      "type" : "integer",
                      "description" : "The end of the port range for the TCP and UDP protocols, or an ICMP type number."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the security group rule."
                }
              },
              "SecurityGroupId" : {
                "type" : "string",
                "description" : "The ID of the security group."
              },
              "SecurityGroupName" : {
                "type" : "string",
                "description" : "The name of the security group."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the security group.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the security group."
          }
        },
        "additionalProperties" : false
      },
      "UpdateListenerRuleRequest" : {
        "required" : [ "ListenerRuleName" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "HostPattern" : {
            "type" : "string",
            "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].",
            "nullable" : true
          },
          "ListenerRuleName" : {
            "type" : "string",
            "description" : "The name of the listener rule."
          },
          "PathPattern" : {
            "type" : "string",
            "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?].",
            "nullable" : true
          }
        },
        "additionalProperties" : false
      },
      "UpdateVmRequest" : {
        "required" : [ "VmId" ],
        "type" : "object",
        "properties" : {
          "BlockDeviceMappings" : {
            "type" : "array",
            "description" : "One or more block device mappings of the VM.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Bsu" : {
                  "type" : "object",
                  "properties" : {
                    "DeleteOnVmDeletion" : {
                      "type" : "boolean",
                      "description" : "If set to true, the volume is deleted when terminating the VM. If set to false, the volume is not deleted when terminating the VM."
                    },
                    "VolumeId" : {
                      "type" : "string",
                      "description" : "The ID of the volume."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the BSU volume."
                },
                "DeviceName" : {
                  "type" : "string",
                  "description" : "The name of the device."
                },
                "NoDevice" : {
                  "type" : "string",
                  "description" : "Removes the device which is included in the block device mapping of the OMI."
                },
                "VirtualDeviceName" : {
                  "type" : "string",
                  "description" : "The name of the virtual device (ephemeralN)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the block device mapping."
            }
          },
          "BsuOptimized" : {
            "type" : "boolean",
            "description" : "If true, the VM is optimized for BSU I/O."
          },
          "DeletionProtection" : {
            "type" : "boolean",
            "description" : "If true, you cannot terminate the VM using Cockpit, the CLI or the API. If false, you can."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "IsSourceDestChecked" : {
            "type" : "boolean",
            "description" : "(Net only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Net."
          },
          "KeypairName" : {
            "type" : "string",
            "description" : "The name of the keypair.<br />\nTo complete the replacement, manually replace the old public key with the new public key in the ~/.ssh/authorized_keys file located in the VM. Restart the VM to apply the change."
          },
          "Performance" : {
            "type" : "string",
            "description" : "The performance of the VM (`medium` \\| `high` \\|  `highest`).",
            "enum" : [ "medium", "high", "highest" ]
          },
          "SecurityGroupIds" : {
            "type" : "array",
            "description" : "One or more IDs of security groups for the VM.",
            "items" : {
              "type" : "string"
            }
          },
          "UserData" : {
            "type" : "string",
            "description" : "The Base64-encoded MIME user data."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          },
          "VmInitiatedShutdownBehavior" : {
            "type" : "string",
            "description" : "The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated."
          },
          "VmType" : {
            "type" : "string",
            "description" : "The type of VM. For more information, see [Instance Types](https://wiki.outscale.net/display/EN/Instance+Types)."
          }
        },
        "additionalProperties" : false
      },
      "LinkNicResponse" : {
        "type" : "object",
        "properties" : {
          "LinkNicId" : {
            "type" : "string",
            "description" : "The ID of the NIC attachment."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateSubnetResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Subnet" : {
            "type" : "object",
            "properties" : {
              "AvailableIpsCount" : {
                "type" : "integer",
                "description" : "The number of available IP addresses in the Subnets."
              },
              "IpRange" : {
                "type" : "string",
                "description" : "The IP range in the Subnet, in CIDR notation (for example, 10.0.0.0/16)."
              },
              "MapPublicIpOnLaunch" : {
                "type" : "boolean",
                "description" : "If true, a public IP address is assigned to the network interface cards (NICs) created in the specified Subnet."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net in which the Subnet is."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the Subnet (`pending` \\| `available`)."
              },
              "SubnetId" : {
                "type" : "string",
                "description" : "The ID of the Subnet."
              },
              "SubregionName" : {
                "type" : "string",
                "description" : "The name of the Subregion in which the Subnet is located."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Subnet.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Subnet."
          }
        },
        "additionalProperties" : false
      },
      "CheckAuthenticationResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "AcceptNetPeeringRequest" : {
        "required" : [ "NetPeeringId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NetPeeringId" : {
            "type" : "string",
            "description" : "The ID of the Net peering connection you want to accept."
          }
        },
        "additionalProperties" : false
      },
      "CreateListenerRuleRequest" : {
        "required" : [ "Listener", "ListenerRule", "VmIds" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Listener" : {
            "required" : [ "LoadBalancerName", "LoadBalancerPort" ],
            "type" : "object",
            "properties" : {
              "LoadBalancerName" : {
                "type" : "string",
                "description" : "The name of the load balancer to which the listener is attached."
              },
              "LoadBalancerPort" : {
                "type" : "integer",
                "description" : "The port of load balancer on which the load balancer is listening (between `1` and `65535` both included)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the load balancer."
          },
          "ListenerRule" : {
            "required" : [ "ListenerRuleName", "Priority" ],
            "type" : "object",
            "properties" : {
              "Action" : {
                "type" : "string",
                "description" : "The type of action for the rule (always `forward`)."
              },
              "HostNamePattern" : {
                "type" : "string",
                "description" : "A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]. "
              },
              "ListenerRuleName" : {
                "type" : "string",
                "description" : "A human-readable name for the listener rule."
              },
              "PathPattern" : {
                "type" : "string",
                "description" : "A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?]."
              },
              "Priority" : {
                "type" : "integer",
                "description" : "The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the listener rule."
          },
          "VmIds" : {
            "type" : "array",
            "description" : "The IDs of the backend VMs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "DeleteVirtualGatewayResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteLoadBalancerResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteDirectLinkResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LoadBalancer" : {
        "type" : "object",
        "properties" : {
          "AccessLog" : {
            "type" : "object",
            "properties" : {
              "IsEnabled" : {
                "type" : "boolean",
                "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
              },
              "OsuBucketName" : {
                "type" : "string",
                "description" : "The name of the OOS bucket for the access logs."
              },
              "OsuBucketPrefix" : {
                "type" : "string",
                "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
              },
              "PublicationInterval" : {
                "type" : "integer",
                "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about access logs."
          },
          "ApplicationStickyCookiePolicies" : {
            "type" : "array",
            "description" : "The stickiness policies defined for the load balancer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "CookieName" : {
                  "type" : "string",
                  "description" : "The name of the application cookie used for stickiness."
                },
                "PolicyName" : {
                  "type" : "string",
                  "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the stickiness policy."
            }
          },
          "BackendVmIds" : {
            "type" : "array",
            "description" : "One or more IDs of back-end VMs for the load balancer.",
            "items" : {
              "type" : "string"
            }
          },
          "DnsName" : {
            "type" : "string",
            "description" : "The DNS name of the load balancer."
          },
          "HealthCheck" : {
            "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
            "type" : "object",
            "properties" : {
              "CheckInterval" : {
                "type" : "integer",
                "description" : "The number of seconds between two pings (between `5` and `600` both included)."
              },
              "HealthyThreshold" : {
                "type" : "integer",
                "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
              },
              "Path" : {
                "type" : "string",
                "description" : "If you use the HTTP or HTTPS protocols, the ping path."
              },
              "Port" : {
                "type" : "integer",
                "description" : "The port number (between `1` and `65535`, both included)."
              },
              "Protocol" : {
                "type" : "string",
                "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
              },
              "Timeout" : {
                "type" : "integer",
                "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
              },
              "UnhealthyThreshold" : {
                "type" : "integer",
                "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the health check configuration."
          },
          "Listeners" : {
            "type" : "array",
            "description" : "The listeners for the load balancer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "BackendPort" : {
                  "type" : "integer",
                  "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                },
                "BackendProtocol" : {
                  "type" : "string",
                  "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                },
                "LoadBalancerPort" : {
                  "type" : "integer",
                  "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                },
                "LoadBalancerProtocol" : {
                  "type" : "string",
                  "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                },
                "PolicyNames" : {
                  "type" : "array",
                  "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "ServerCertificateId" : {
                  "type" : "string",
                  "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the listener."
            }
          },
          "LoadBalancerName" : {
            "type" : "string",
            "description" : "The name of the load balancer."
          },
          "LoadBalancerStickyCookiePolicies" : {
            "type" : "array",
            "description" : "The policies defined for the load balancer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "CookieExpirationPeriod" : {
                  "type" : "integer",
                  "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                },
                "PolicyName" : {
                  "type" : "string",
                  "description" : "The name of the stickiness policy."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the stickiness policy."
            }
          },
          "LoadBalancerType" : {
            "type" : "string",
            "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net for the load balancer."
          },
          "SecurityGroups" : {
            "type" : "array",
            "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
            "items" : {
              "type" : "string"
            }
          },
          "SourceSecurityGroup" : {
            "type" : "object",
            "properties" : {
              "SecurityGroupAccountId" : {
                "type" : "string",
                "description" : "The account ID of the owner of the security group."
              },
              "SecurityGroupName" : {
                "type" : "string",
                "description" : "The name of the security group."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
          },
          "Subnets" : {
            "type" : "array",
            "description" : "The ID of the Subnet in which the load balancer was created.",
            "items" : {
              "type" : "string"
            }
          },
          "SubregionNames" : {
            "type" : "array",
            "description" : "The ID of the Subregion in which the load balancer was created.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the load balancer.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the load balancer."
      },
      "CreatePublicIpRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "UpdateCaResponse" : {
        "type" : "object",
        "properties" : {
          "Ca" : {
            "type" : "object",
            "properties" : {
              "CaFingerprint" : {
                "type" : "string",
                "description" : "The fingerprint of the CA."
              },
              "CaId" : {
                "type" : "string",
                "description" : "The ID of the CA."
              },
              "Description" : {
                "type" : "string",
                "description" : "The description of the CA."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Client Certificate Authority (CA)."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LinkPublicIpRequest" : {
        "type" : "object",
        "properties" : {
          "AllowRelink" : {
            "type" : "boolean",
            "description" : "If true, allows the EIP to be associated with the VM or NIC that you specify even if it is already associated with another VM or NIC. If false, prevents the EIP from being associated with the VM or NIC that you specify if it is already associated with another VM or NIC. (By default, true in the public Cloud, false in a Net.)"
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "NicId" : {
            "type" : "string",
            "description" : "(Net only) The ID of the NIC. This parameter is required if the VM has more than one NIC attached. Otherwise, you need to specify the `VmId` parameter instead. You cannot specify both parameters at the same time."
          },
          "PrivateIp" : {
            "type" : "string",
            "description" : "(Net only) The primary or secondary private IP address of the specified NIC. By default, the primary private IP address."
          },
          "PublicIp" : {
            "type" : "string",
            "description" : "The EIP. This parameter is required unless you use the `PublicIpId` parameter."
          },
          "PublicIpId" : {
            "type" : "string",
            "description" : "The allocation ID of the EIP. This parameter is required unless you use the `PublicIp` parameter."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM.<br />\n- In the public Cloud, this parameter is required.<br />\n- In a Net, this parameter is required if the VM has only one NIC. Otherwise, you need to specify the `NicId` parameter instead. You cannot specify both parameters at the same time."
          }
        },
        "additionalProperties" : false
      },
      "RouteTable" : {
        "type" : "object",
        "properties" : {
          "LinkRouteTables" : {
            "type" : "array",
            "description" : "One or more associations between the route table and Subnets.",
            "items" : {
              "type" : "object",
              "properties" : {
                "LinkRouteTableId" : {
                  "type" : "string",
                  "description" : "The ID of the association between the route table and the Subnet."
                },
                "Main" : {
                  "type" : "boolean",
                  "description" : "If true, the route table is the main one."
                },
                "RouteTableId" : {
                  "type" : "string",
                  "description" : "The ID of the route table."
                },
                "SubnetId" : {
                  "type" : "string",
                  "description" : "The ID of the Subnet."
                }
              },
              "additionalProperties" : false,
              "description" : "One or more associations between the route table and the Subnets."
            }
          },
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net for the route table."
          },
          "RoutePropagatingVirtualGateways" : {
            "type" : "array",
            "description" : "Information about virtual gateways propagating routes.",
            "items" : {
              "type" : "object",
              "properties" : {
                "VirtualGatewayId" : {
                  "type" : "string",
                  "description" : "The ID of the virtual gateway."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the route propagating virtual gateway."
            }
          },
          "RouteTableId" : {
            "type" : "string",
            "description" : "The ID of the route table."
          },
          "Routes" : {
            "type" : "array",
            "description" : "One or more routes in the route table.",
            "items" : {
              "type" : "object",
              "properties" : {
                "CreationMethod" : {
                  "type" : "string",
                  "description" : "The method used to create the route."
                },
                "DestinationIpRange" : {
                  "type" : "string",
                  "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                },
                "DestinationServiceId" : {
                  "type" : "string",
                  "description" : "The ID of the OUTSCALE service."
                },
                "GatewayId" : {
                  "type" : "string",
                  "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                },
                "NatServiceId" : {
                  "type" : "string",
                  "description" : "The ID of a NAT service attached to the Net."
                },
                "NetAccessPointId" : {
                  "type" : "string",
                  "description" : "The ID of the Net access point."
                },
                "NetPeeringId" : {
                  "type" : "string",
                  "description" : "The ID of the Net peering connection."
                },
                "NicId" : {
                  "type" : "string",
                  "description" : "The ID of the NIC."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                },
                "VmAccountId" : {
                  "type" : "string",
                  "description" : "The account ID of the owner of the VM."
                },
                "VmId" : {
                  "type" : "string",
                  "description" : "The ID of a VM specified in a route in the table."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the route."
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the route table.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the route table."
      },
      "Errors" : {
        "type" : "object",
        "properties" : {
          "Code" : {
            "type" : "string",
            "description" : "The code of the error."
          },
          "Details" : {
            "type" : "string",
            "description" : "The details of the error."
          },
          "Type" : {
            "type" : "string",
            "description" : "The type of the error."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the errors."
      },
      "LinkInternetServiceResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteServerCertificateRequest" : {
        "required" : [ "Name" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Name" : {
            "type" : "string",
            "description" : "The name of the server certificate you want to delete."
          }
        },
        "additionalProperties" : false
      },
      "VirtualGateway" : {
        "type" : "object",
        "properties" : {
          "ConnectionType" : {
            "type" : "string",
            "description" : "The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported)."
          },
          "NetToVirtualGatewayLinks" : {
            "type" : "array",
            "description" : "The Net to which the virtual gateway is attached.",
            "items" : {
              "type" : "object",
              "properties" : {
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net to which the virtual gateway is attached."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the attachment."
            }
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the virtual gateway (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
          },
          "Tags" : {
            "type" : "array",
            "description" : "One or more tags associated with the virtual gateway.",
            "items" : {
              "required" : [ "Key", "Value" ],
              "type" : "object",
              "properties" : {
                "Key" : {
                  "type" : "string",
                  "description" : "The key of the tag, with a minimum of 1 character."
                },
                "Value" : {
                  "type" : "string",
                  "description" : "The value of the tag, between 0 and 255 characters."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the tag."
            }
          },
          "VirtualGatewayId" : {
            "type" : "string",
            "description" : "The ID of the virtual gateway."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the virtual gateway."
      },
      "DeleteAccessKeyResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "LinkRouteTableRequest" : {
        "required" : [ "RouteTableId", "SubnetId" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "RouteTableId" : {
            "type" : "string",
            "description" : "The ID of the route table."
          },
          "SubnetId" : {
            "type" : "string",
            "description" : "The ID of the Subnet."
          }
        },
        "additionalProperties" : false
      },
      "StartVmsRequest" : {
        "required" : [ "VmIds" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VmIds" : {
            "type" : "array",
            "description" : "One or more IDs of VMs.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "FiltersDirectLink" : {
        "type" : "object",
        "properties" : {
          "DirectLinkIds" : {
            "type" : "array",
            "description" : "The IDs of the DirectLinks.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadServerCertificatesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "Paths" : {
                "type" : "array",
                "description" : "The paths to the server certificates.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadNicsRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "Descriptions" : {
                "type" : "array",
                "description" : "The descriptions of the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "IsSourceDestCheck" : {
                "type" : "boolean",
                "description" : "Whether the source/destination checking is enabled (true) or disabled (false)."
              },
              "LinkNicDeleteOnVmDeletion" : {
                "type" : "boolean",
                "description" : "Whether the NICs are deleted when the VMs they are attached to are terminated."
              },
              "LinkNicDeviceNumbers" : {
                "type" : "array",
                "description" : "The device numbers the NICs are attached to.",
                "items" : {
                  "type" : "integer"
                }
              },
              "LinkNicLinkNicIds" : {
                "type" : "array",
                "description" : "The attachment IDs of the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkNicStates" : {
                "type" : "array",
                "description" : "The states of the attachments.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkNicVmAccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owners of the VMs the NICs are attached to.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkNicVmIds" : {
                "type" : "array",
                "description" : "The IDs of the VMs the NICs are attached to.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkPublicIpAccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owners of the EIPs associated with the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkPublicIpLinkPublicIpIds" : {
                "type" : "array",
                "description" : "The association IDs returned when the EIPs were associated with the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkPublicIpPublicIpIds" : {
                "type" : "array",
                "description" : "The allocation IDs returned when the EIPs were allocated to their accounts.",
                "items" : {
                  "type" : "string"
                }
              },
              "LinkPublicIpPublicIps" : {
                "type" : "array",
                "description" : "The EIPs associated with the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "MacAddresses" : {
                "type" : "array",
                "description" : "The Media Access Control (MAC) addresses of the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "NetIds" : {
                "type" : "array",
                "description" : "The IDs of the Nets where the NICs are located.",
                "items" : {
                  "type" : "string"
                }
              },
              "NicIds" : {
                "type" : "array",
                "description" : "The IDs of the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "PrivateDnsNames" : {
                "type" : "array",
                "description" : "The private DNS names associated with the primary private IP addresses.",
                "items" : {
                  "type" : "string"
                }
              },
              "PrivateIpsLinkPublicIpAccountIds" : {
                "type" : "array",
                "description" : "The account IDs of the owner of the EIPs associated with the private IP addresses.",
                "items" : {
                  "type" : "string"
                }
              },
              "PrivateIpsLinkPublicIpPublicIps" : {
                "type" : "array",
                "description" : "The EIPs associated with the private IP addresses.",
                "items" : {
                  "type" : "string"
                }
              },
              "PrivateIpsPrimaryIp" : {
                "type" : "boolean",
                "description" : "The primary private IP addresses of the NICs."
              },
              "PrivateIpsPrivateIps" : {
                "type" : "array",
                "description" : "The private IP addresses of the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "SecurityGroupIds" : {
                "type" : "array",
                "description" : "The IDs of the security groups associated with the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "SecurityGroupNames" : {
                "type" : "array",
                "description" : "The names of the security groups associated with the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "States" : {
                "type" : "array",
                "description" : "The states of the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubnetIds" : {
                "type" : "array",
                "description" : "The IDs of the Subnets for the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The Subregions where the NICs are located.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagKeys" : {
                "type" : "array",
                "description" : "The keys of the tags associated with the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "TagValues" : {
                "type" : "array",
                "description" : "The values of the tags associated with the NICs.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "The key/value combination of the tags associated with the NICs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "ReadNetAccessPointServicesRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "Filters" : {
            "type" : "object",
            "properties" : {
              "ServiceIds" : {
                "type" : "array",
                "description" : "The IDs of the services.",
                "items" : {
                  "type" : "string"
                }
              },
              "ServiceNames" : {
                "type" : "array",
                "description" : "The names of the services.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "description" : "One or more filters."
          }
        },
        "additionalProperties" : false
      },
      "CreateVpnConnectionResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "VpnConnection" : {
            "type" : "object",
            "properties" : {
              "ClientGatewayConfiguration" : {
                "type" : "string",
                "description" : "Example configuration for the client gateway."
              },
              "ClientGatewayId" : {
                "type" : "string",
                "description" : "The ID of the client gateway used on the client end of the connection."
              },
              "ConnectionType" : {
                "type" : "string",
                "description" : "The type of VPN connection (always `ipsec.1`)."
              },
              "Routes" : {
                "type" : "array",
                "description" : "Information about one or more static routes associated with the VPN connection, if any.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "DestinationIpRange" : {
                      "type" : "string",
                      "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                    },
                    "RouteType" : {
                      "type" : "string",
                      "description" : "The type of route (always `static`)."
                    },
                    "State" : {
                      "type" : "string",
                      "description" : "The current state of the static route (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the route."
                }
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the VPN connection (`pending` \\| `available` \\| `deleting` \\| `deleted`)."
              },
              "StaticRoutesOnly" : {
                "type" : "boolean",
                "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the VPN connection.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "VirtualGatewayId" : {
                "type" : "string",
                "description" : "The ID of the virtual gateway used on the OUTSCALE end of the connection."
              },
              "VpnConnectionId" : {
                "type" : "string",
                "description" : "The ID of the VPN connection."
              },
              "VpnOptions" : {
                "type" : "object",
                "properties" : {
                  "Phase1Options" : {
                    "type" : "object",
                    "properties" : {
                      "DpdTimeoutAction" : {
                        "type" : "string",
                        "description" : "The action to carry out after a Dead Peer Detection (DPD) timeout occurs."
                      },
                      "DpdTimeoutSeconds" : {
                        "type" : "integer",
                        "description" : "The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds."
                      },
                      "IkeVersions" : {
                        "type" : "array",
                        "description" : "The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Phase1DhGroupNumbers" : {
                        "type" : "array",
                        "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "Phase1EncryptionAlgorithms" : {
                        "type" : "array",
                        "description" : "The encryption algorithms allowed for the VPN tunnel for phase 1.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Phase1IntegrityAlgorithms" : {
                        "type" : "array",
                        "description" : "The integrity algorithms allowed for the VPN tunnel for phase 1.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Phase1LifetimeSeconds" : {
                        "type" : "integer",
                        "description" : "The lifetime for phase 1 of the IKE negotiation process, in seconds."
                      },
                      "ReplayWindowSize" : {
                        "type" : "integer",
                        "description" : "The number of packets in an IKE replay window."
                      },
                      "StartupAction" : {
                        "type" : "string",
                        "description" : "The action to carry out when establishing tunnels for a VPN connection."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. "
                  },
                  "Phase2Options" : {
                    "type" : "object",
                    "properties" : {
                      "Phase2DhGroupNumbers" : {
                        "type" : "array",
                        "description" : "The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 2.",
                        "items" : {
                          "type" : "integer"
                        }
                      },
                      "Phase2EncryptionAlgorithms" : {
                        "type" : "array",
                        "description" : "The encryption algorithms allowed for the VPN tunnel for phase 2.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Phase2IntegrityAlgorithms" : {
                        "type" : "array",
                        "description" : "The integrity algorithms allowed for the VPN tunnel for phase 2.",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "Phase2LifetimeSeconds" : {
                        "type" : "integer",
                        "description" : "The lifetime for phase 2 of the Internet Key Exchange (IKE) negociation process, in seconds."
                      },
                      "PreSharedKey" : {
                        "type" : "string",
                        "description" : "The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. "
                  },
                  "TunnelInsideIpRange" : {
                    "type" : "string",
                    "description" : "The IP range for the tunnel in your VPN connection."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the VPN options."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about a VPN connection."
          }
        },
        "additionalProperties" : false
      },
      "ReadSubregionsResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "Subregions" : {
            "type" : "array",
            "description" : "Information about one or more Subregions.",
            "items" : {
              "type" : "object",
              "properties" : {
                "RegionName" : {
                  "type" : "string",
                  "description" : "The name of the Region containing the Subregion."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the Subregion (`available` \\| `information` \\| `impaired` \\| `unavailable`)."
                },
                "SubregionName" : {
                  "type" : "string",
                  "description" : "The name of the Subregion."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the Subregion."
            }
          }
        },
        "additionalProperties" : false
      },
      "NetToVirtualGatewayLink" : {
        "type" : "object",
        "properties" : {
          "NetId" : {
            "type" : "string",
            "description" : "The ID of the Net to which the virtual gateway is attached."
          },
          "State" : {
            "type" : "string",
            "description" : "The state of the attachment (`attaching` \\| `attached` \\| `detaching` \\| `detached`)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the attachment."
      },
      "CreateDhcpOptionsResponse" : {
        "type" : "object",
        "properties" : {
          "DhcpOptionsSet" : {
            "type" : "object",
            "properties" : {
              "Default" : {
                "type" : "boolean",
                "description" : "If true, the DHCP options set is a default one. If false, it is not."
              },
              "DhcpOptionsSetId" : {
                "type" : "string",
                "description" : "The ID of the DHCP options set."
              },
              "DomainName" : {
                "type" : "string",
                "description" : "The domain name."
              },
              "DomainNameServers" : {
                "type" : "array",
                "description" : "One or more IP addresses for the domain name servers.",
                "items" : {
                  "type" : "string"
                }
              },
              "NtpServers" : {
                "type" : "array",
                "description" : "One or more IP addresses for the NTP servers.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the DHCP options set.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the DHCP options set."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FiltersSecurityGroup" : {
        "type" : "object",
        "properties" : {
          "AccountIds" : {
            "type" : "array",
            "description" : "The account IDs of the owners of the security groups.",
            "items" : {
              "type" : "string"
            }
          },
          "Descriptions" : {
            "type" : "array",
            "description" : "The descriptions of the security groups.",
            "items" : {
              "type" : "string"
            }
          },
          "InboundRuleAccountIds" : {
            "type" : "array",
            "description" : "The account IDs that have been granted permissions.",
            "items" : {
              "type" : "string"
            }
          },
          "InboundRuleFromPortRanges" : {
            "type" : "array",
            "description" : "The beginnings of the port ranges for the TCP and UDP protocols, or the ICMP type numbers.",
            "items" : {
              "type" : "integer"
            }
          },
          "InboundRuleIpRanges" : {
            "type" : "array",
            "description" : "The IP ranges that have been granted permissions, in CIDR notation (for example, 10.0.0.0/24).",
            "items" : {
              "type" : "string"
            }
          },
          "InboundRuleProtocols" : {
            "type" : "array",
            "description" : "The IP protocols for the permissions (`tcp` \\| `udp` \\| `icmp`, or a protocol number, or `-1` for all protocols).",
            "items" : {
              "type" : "string"
            }
          },
          "InboundRuleSecurityGroupIds" : {
            "type" : "array",
            "description" : "The IDs of the security groups that have been granted permissions.",
            "items" : {
              "type" : "string"
            }
          },
          "InboundRuleSecurityGroupNames" : {
            "type" : "array",
            "description" : "The names of the security groups that have been granted permissions.",
            "items" : {
              "type" : "string"
            }
          },
          "InboundRuleToPortRanges" : {
            "type" : "array",
            "description" : "The ends of the port ranges for the TCP and UDP protocols, or the ICMP codes.",
            "items" : {
              "type" : "integer"
            }
          },
          "NetIds" : {
            "type" : "array",
            "description" : "The IDs of the Nets specified when the security groups were created.",
            "items" : {
              "type" : "string"
            }
          },
          "OutboundRuleAccountIds" : {
            "type" : "array",
            "description" : "The account IDs that have been granted permissions.",
            "items" : {
              "type" : "string"
            }
          },
          "OutboundRuleFromPortRanges" : {
            "type" : "array",
            "description" : "The beginnings of the port ranges for the TCP and UDP protocols, or the ICMP type numbers.",
            "items" : {
              "type" : "integer"
            }
          },
          "OutboundRuleIpRanges" : {
            "type" : "array",
            "description" : "The IP ranges that have been granted permissions, in CIDR notation (for example, 10.0.0.0/24).",
            "items" : {
              "type" : "string"
            }
          },
          "OutboundRuleProtocols" : {
            "type" : "array",
            "description" : "The IP protocols for the permissions (`tcp` \\| `udp` \\| `icmp`, or a protocol number, or `-1` for all protocols).",
            "items" : {
              "type" : "string"
            }
          },
          "OutboundRuleSecurityGroupIds" : {
            "type" : "array",
            "description" : "The IDs of the security groups that have been granted permissions.",
            "items" : {
              "type" : "string"
            }
          },
          "OutboundRuleSecurityGroupNames" : {
            "type" : "array",
            "description" : "The names of the security groups that have been granted permissions.",
            "items" : {
              "type" : "string"
            }
          },
          "OutboundRuleToPortRanges" : {
            "type" : "array",
            "description" : "The ends of the port ranges for the TCP and UDP protocols, or the ICMP codes.",
            "items" : {
              "type" : "integer"
            }
          },
          "SecurityGroupIds" : {
            "type" : "array",
            "description" : "The IDs of the security groups.",
            "items" : {
              "type" : "string"
            }
          },
          "SecurityGroupNames" : {
            "type" : "array",
            "description" : "The names of the security groups.",
            "items" : {
              "type" : "string"
            }
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the security groups.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the security groups.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the security groups, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "ReadProductTypesResponse" : {
        "type" : "object",
        "properties" : {
          "ProductTypes" : {
            "type" : "array",
            "description" : "Information about one or more product types.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Description" : {
                  "type" : "string",
                  "description" : "The description of the product type."
                },
                "ProductTypeId" : {
                  "type" : "string",
                  "description" : "The ID of the product type."
                },
                "Vendor" : {
                  "type" : "string",
                  "description" : "The vendor of the product type."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the product type."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "RebootVmsRequest" : {
        "required" : [ "VmIds" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "VmIds" : {
            "type" : "array",
            "description" : "One or more IDs of the VMs you want to reboot.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      },
      "ReadNetsResponse" : {
        "type" : "object",
        "properties" : {
          "Nets" : {
            "type" : "array",
            "description" : "Information about the described Nets.",
            "items" : {
              "type" : "object",
              "properties" : {
                "DhcpOptionsSetId" : {
                  "type" : "string",
                  "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
                },
                "IpRange" : {
                  "type" : "string",
                  "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net."
                },
                "State" : {
                  "type" : "string",
                  "description" : "The state of the Net (`pending` \\| `available`)."
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the Net.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                },
                "Tenancy" : {
                  "type" : "string",
                  "description" : "The VM tenancy in a Net."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the Net."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "ReadFlexibleGpuCatalogRequest" : {
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "CreateNetRequest" : {
        "required" : [ "IpRange" ],
        "type" : "object",
        "properties" : {
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          },
          "IpRange" : {
            "type" : "string",
            "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
          },
          "Tenancy" : {
            "type" : "string",
            "description" : "The tenancy options for the VMs (`default` if a VM created in a Net can be launched with any tenancy, `dedicated` if it can be launched with dedicated tenancy VMs running on single-tenant hardware)."
          }
        },
        "additionalProperties" : false
      },
      "VmState" : {
        "type" : "object",
        "properties" : {
          "CurrentState" : {
            "type" : "string",
            "description" : "The current state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
          },
          "PreviousState" : {
            "type" : "string",
            "description" : "The previous state of the VM (`InService` \\| `OutOfService` \\| `Unknown`)."
          },
          "VmId" : {
            "type" : "string",
            "description" : "The ID of the VM."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the state of the VM."
      },
      "ReadFlexibleGpuCatalogResponse" : {
        "type" : "object",
        "properties" : {
          "FlexibleGpuCatalog" : {
            "type" : "array",
            "description" : "Information about one or more fGPUs available in the public catalog.",
            "items" : {
              "type" : "object",
              "properties" : {
                "Generations" : {
                  "type" : "array",
                  "description" : "The generations of VMs that the fGPU is compatible with.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "MaxCpu" : {
                  "type" : "integer",
                  "description" : "The maximum number of VM vCores that the fGPU is compatible with."
                },
                "MaxRam" : {
                  "type" : "integer",
                  "description" : "The maximum amount of VM memory that the fGPU is compatible with."
                },
                "ModelName" : {
                  "type" : "string",
                  "description" : "The model of fGPU."
                },
                "VRam" : {
                  "type" : "integer",
                  "description" : "The amount of video RAM (VRAM) of the fGPU."
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the flexible GPU (fGPU) that is available in the public catalog."
            }
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "Service" : {
        "type" : "object",
        "properties" : {
          "IpRanges" : {
            "type" : "array",
            "description" : "The list of network prefixes used by the service, in CIDR notation.",
            "items" : {
              "type" : "string"
            }
          },
          "ServiceId" : {
            "type" : "string",
            "description" : "The ID of the service."
          },
          "ServiceName" : {
            "type" : "string",
            "description" : "The name of the service."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the service."
      },
      "DeleteCaResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "CreateLoadBalancerPolicyResponse" : {
        "type" : "object",
        "properties" : {
          "LoadBalancer" : {
            "type" : "object",
            "properties" : {
              "AccessLog" : {
                "type" : "object",
                "properties" : {
                  "IsEnabled" : {
                    "type" : "boolean",
                    "description" : "If true, access logs are enabled for your load balancer. If false, they are not. If you set this to true in your request, the `OsuBucketName` parameter is required."
                  },
                  "OsuBucketName" : {
                    "type" : "string",
                    "description" : "The name of the OOS bucket for the access logs."
                  },
                  "OsuBucketPrefix" : {
                    "type" : "string",
                    "description" : "The path to the folder of the access logs in your OOS bucket (by default, the `root` level of your bucket)."
                  },
                  "PublicationInterval" : {
                    "type" : "integer",
                    "description" : "The time interval for the publication of access logs in the OOS bucket, in minutes. This value can be either 5 or 60 (by default, 60)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about access logs."
              },
              "ApplicationStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The stickiness policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieName" : {
                      "type" : "string",
                      "description" : "The name of the application cookie used for stickiness."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "BackendVmIds" : {
                "type" : "array",
                "description" : "One or more IDs of back-end VMs for the load balancer.",
                "items" : {
                  "type" : "string"
                }
              },
              "DnsName" : {
                "type" : "string",
                "description" : "The DNS name of the load balancer."
              },
              "HealthCheck" : {
                "required" : [ "CheckInterval", "HealthyThreshold", "Port", "Protocol", "Timeout", "UnhealthyThreshold" ],
                "type" : "object",
                "properties" : {
                  "CheckInterval" : {
                    "type" : "integer",
                    "description" : "The number of seconds between two pings (between `5` and `600` both included)."
                  },
                  "HealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive successful pings before considering the VM as healthy (between `2` and `10` both included)."
                  },
                  "Path" : {
                    "type" : "string",
                    "description" : "If you use the HTTP or HTTPS protocols, the ping path."
                  },
                  "Port" : {
                    "type" : "integer",
                    "description" : "The port number (between `1` and `65535`, both included)."
                  },
                  "Protocol" : {
                    "type" : "string",
                    "description" : "The protocol for the URL of the VM (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                  },
                  "Timeout" : {
                    "type" : "integer",
                    "description" : "The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included)."
                  },
                  "UnhealthyThreshold" : {
                    "type" : "integer",
                    "description" : "The number of consecutive failed pings before considering the VM as unhealthy (between `2` and `10` both included)."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the health check configuration."
              },
              "Listeners" : {
                "type" : "array",
                "description" : "The listeners for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "BackendPort" : {
                      "type" : "integer",
                      "description" : "The port on which the back-end VM is listening (between `1` and `65535`, both included)."
                    },
                    "BackendProtocol" : {
                      "type" : "string",
                      "description" : "The protocol for routing traffic to back-end VMs (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "LoadBalancerPort" : {
                      "type" : "integer",
                      "description" : "The port on which the load balancer is listening (between 1 and `65535`, both included)."
                    },
                    "LoadBalancerProtocol" : {
                      "type" : "string",
                      "description" : "The routing protocol (`HTTP` \\| `HTTPS` \\| `TCP` \\| `SSL`)."
                    },
                    "PolicyNames" : {
                      "type" : "array",
                      "description" : "The names of the policies. If there are no policies enabled, the list is empty.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "ServerCertificateId" : {
                      "type" : "string",
                      "description" : "The OUTSCALE Resource Name (ORN) of the server certificate. For more information, see [Resource Identifiers > OUTSCALE Resource Names (ORNs)](https://wiki.outscale.net/display/EN/Resource+Identifiers#ResourceIdentifiers-ORNFormat)."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the listener."
                }
              },
              "LoadBalancerName" : {
                "type" : "string",
                "description" : "The name of the load balancer."
              },
              "LoadBalancerStickyCookiePolicies" : {
                "type" : "array",
                "description" : "The policies defined for the load balancer.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "CookieExpirationPeriod" : {
                      "type" : "integer",
                      "description" : "The time period, in seconds, after which the cookie should be considered stale.<br />\nIf `1`, the stickiness session lasts for the duration of the browser session."
                    },
                    "PolicyName" : {
                      "type" : "string",
                      "description" : "The name of the stickiness policy."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the stickiness policy."
                }
              },
              "LoadBalancerType" : {
                "type" : "string",
                "description" : "The type of load balancer. Valid only for load balancers in a Net.<br />\nIf `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP address.<br />\nIf `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP address."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net for the load balancer."
              },
              "SecurityGroups" : {
                "type" : "array",
                "description" : "One or more IDs of security groups for the load balancers. Valid only for load balancers in a Net.",
                "items" : {
                  "type" : "string"
                }
              },
              "SourceSecurityGroup" : {
                "type" : "object",
                "properties" : {
                  "SecurityGroupAccountId" : {
                    "type" : "string",
                    "description" : "The account ID of the owner of the security group."
                  },
                  "SecurityGroupName" : {
                    "type" : "string",
                    "description" : "The name of the security group."
                  }
                },
                "additionalProperties" : false,
                "description" : "Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />\nTo only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source."
              },
              "Subnets" : {
                "type" : "array",
                "description" : "The ID of the Subnet in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "SubregionNames" : {
                "type" : "array",
                "description" : "The ID of the Subregion in which the load balancer was created.",
                "items" : {
                  "type" : "string"
                }
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the load balancer.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the load balancer."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "NetPeeringState" : {
        "type" : "object",
        "properties" : {
          "Message" : {
            "type" : "string",
            "description" : "Additional information about the state of the Net peering connection."
          },
          "Name" : {
            "type" : "string",
            "description" : "The state of the Net peering connection (`pending-acceptance` \\| `active` \\| `rejected` \\| `failed` \\| `expired` \\| `deleted`)."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the state of the Net peering connection."
      },
      "FiltersTag" : {
        "type" : "object",
        "properties" : {
          "Keys" : {
            "type" : "array",
            "description" : "The keys of the tags that are assigned to the resources. You can use this filter alongside the `Values` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.",
            "items" : {
              "type" : "string"
            }
          },
          "ResourceIds" : {
            "type" : "array",
            "description" : "The IDs of the resources with which the tags are associated.",
            "items" : {
              "type" : "string"
            }
          },
          "ResourceTypes" : {
            "type" : "array",
            "description" : "The resource type (`vm` \\| `image` \\| `volume` \\| `snapshot` \\| `public-ip` \\| `security-group` \\| `route-table` \\| `nic` \\| `net` \\| `subnet` \\| `net-peering` \\| `net-access-point` \\| `nat-service` \\| `internet-service` \\| `client-gateway` \\| `virtual-gateway` \\| `vpn-connection` \\| `dhcp-options` \\| `task`).",
            "items" : {
              "type" : "string"
            }
          },
          "Values" : {
            "type" : "array",
            "description" : "The values of the tags that are assigned to the resources. You can use this filter alongside the `TagKeys` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "DeleteClientGatewayResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "FiltersVpnConnection" : {
        "type" : "object",
        "properties" : {
          "BgpAsns" : {
            "type" : "array",
            "description" : "The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.",
            "items" : {
              "type" : "integer"
            }
          },
          "ClientGatewayIds" : {
            "type" : "array",
            "description" : "The IDs of the client gateways.",
            "items" : {
              "type" : "string"
            }
          },
          "ConnectionTypes" : {
            "type" : "array",
            "description" : "The types of the VPN connections (only `ipsec.1` is supported).",
            "items" : {
              "type" : "string"
            }
          },
          "RouteDestinationIpRanges" : {
            "type" : "array",
            "description" : "The destination IP ranges.",
            "items" : {
              "type" : "string"
            }
          },
          "States" : {
            "type" : "array",
            "description" : "The states of the VPN connections (`pending` \\| `available` \\| `deleting` \\| `deleted`).",
            "items" : {
              "type" : "string"
            }
          },
          "StaticRoutesOnly" : {
            "type" : "boolean",
            "description" : "If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute)."
          },
          "TagKeys" : {
            "type" : "array",
            "description" : "The keys of the tags associated with the VPN connections.",
            "items" : {
              "type" : "string"
            }
          },
          "TagValues" : {
            "type" : "array",
            "description" : "The values of the tags associated with the VPN connections.",
            "items" : {
              "type" : "string"
            }
          },
          "Tags" : {
            "type" : "array",
            "description" : "The key/value combination of the tags associated with the VPN connections, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.",
            "items" : {
              "type" : "string"
            }
          },
          "VirtualGatewayIds" : {
            "type" : "array",
            "description" : "The IDs of the virtual gateways.",
            "items" : {
              "type" : "string"
            }
          },
          "VpnConnectionIds" : {
            "type" : "array",
            "description" : "The IDs of the VPN connections.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false,
        "description" : "One or more filters."
      },
      "CreateNetResponse" : {
        "type" : "object",
        "properties" : {
          "Net" : {
            "type" : "object",
            "properties" : {
              "DhcpOptionsSetId" : {
                "type" : "string",
                "description" : "The ID of the DHCP options set (or `default` if you want to associate the default one)."
              },
              "IpRange" : {
                "type" : "string",
                "description" : "The IP range for the Net, in CIDR notation (for example, 10.0.0.0/16)."
              },
              "NetId" : {
                "type" : "string",
                "description" : "The ID of the Net."
              },
              "State" : {
                "type" : "string",
                "description" : "The state of the Net (`pending` \\| `available`)."
              },
              "Tags" : {
                "type" : "array",
                "description" : "One or more tags associated with the Net.",
                "items" : {
                  "required" : [ "Key", "Value" ],
                  "type" : "object",
                  "properties" : {
                    "Key" : {
                      "type" : "string",
                      "description" : "The key of the tag, with a minimum of 1 character."
                    },
                    "Value" : {
                      "type" : "string",
                      "description" : "The value of the tag, between 0 and 255 characters."
                    }
                  },
                  "additionalProperties" : false,
                  "description" : "Information about the tag."
                }
              },
              "Tenancy" : {
                "type" : "string",
                "description" : "The VM tenancy in a Net."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the Net."
          },
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          }
        },
        "additionalProperties" : false
      },
      "DeleteDhcpOptionsRequest" : {
        "required" : [ "DhcpOptionsSetId" ],
        "type" : "object",
        "properties" : {
          "DhcpOptionsSetId" : {
            "type" : "string",
            "description" : "The ID of the DHCP options set you want to delete."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "OsuExportToCreate" : {
        "required" : [ "DiskImageFormat", "OsuBucket" ],
        "type" : "object",
        "properties" : {
          "DiskImageFormat" : {
            "type" : "string",
            "description" : "The format of the export disk (`qcow2` \\| `raw`)."
          },
          "OsuApiKey" : {
            "type" : "object",
            "properties" : {
              "ApiKeyId" : {
                "type" : "string",
                "description" : "The API key of the OOS account that enables you to access the bucket."
              },
              "SecretKey" : {
                "type" : "string",
                "description" : "The secret key of the OOS account that enables you to access the bucket."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the OOS API key."
          },
          "OsuBucket" : {
            "type" : "string",
            "description" : "The name of the OOS bucket where you want to export the object."
          },
          "OsuManifestUrl" : {
            "type" : "string",
            "description" : "The URL of the manifest file."
          },
          "OsuPrefix" : {
            "type" : "string",
            "description" : "The prefix for the key of the OOS object."
          }
        },
        "additionalProperties" : false,
        "description" : "Information about the OOS export task to create."
      },
      "DeleteDirectLinkInterfaceRequest" : {
        "required" : [ "DirectLinkInterfaceId" ],
        "type" : "object",
        "properties" : {
          "DirectLinkInterfaceId" : {
            "type" : "string",
            "description" : "The ID of the DirectLink interface you want to delete."
          },
          "DryRun" : {
            "type" : "boolean",
            "description" : "If true, checks whether you have the required permissions to perform the action."
          }
        },
        "additionalProperties" : false
      },
      "ReadRouteTablesResponse" : {
        "type" : "object",
        "properties" : {
          "ResponseContext" : {
            "type" : "object",
            "properties" : {
              "RequestId" : {
                "type" : "string",
                "description" : "The ID of the request."
              }
            },
            "additionalProperties" : false,
            "description" : "Information about the context of the response."
          },
          "RouteTables" : {
            "type" : "array",
            "description" : "Information about one or more route tables.",
            "items" : {
              "type" : "object",
              "properties" : {
                "LinkRouteTables" : {
                  "type" : "array",
                  "description" : "One or more associations between the route table and Subnets.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "LinkRouteTableId" : {
                        "type" : "string",
                        "description" : "The ID of the association between the route table and the Subnet."
                      },
                      "Main" : {
                        "type" : "boolean",
                        "description" : "If true, the route table is the main one."
                      },
                      "RouteTableId" : {
                        "type" : "string",
                        "description" : "The ID of the route table."
                      },
                      "SubnetId" : {
                        "type" : "string",
                        "description" : "The ID of the Subnet."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "One or more associations between the route table and the Subnets."
                  }
                },
                "NetId" : {
                  "type" : "string",
                  "description" : "The ID of the Net for the route table."
                },
                "RoutePropagatingVirtualGateways" : {
                  "type" : "array",
                  "description" : "Information about virtual gateways propagating routes.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "VirtualGatewayId" : {
                        "type" : "string",
                        "description" : "The ID of the virtual gateway."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the route propagating virtual gateway."
                  }
                },
                "RouteTableId" : {
                  "type" : "string",
                  "description" : "The ID of the route table."
                },
                "Routes" : {
                  "type" : "array",
                  "description" : "One or more routes in the route table.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "CreationMethod" : {
                        "type" : "string",
                        "description" : "The method used to create the route."
                      },
                      "DestinationIpRange" : {
                        "type" : "string",
                        "description" : "The IP range used for the destination match, in CIDR notation (for example, 10.0.0.0/24)."
                      },
                      "DestinationServiceId" : {
                        "type" : "string",
                        "description" : "The ID of the OUTSCALE service."
                      },
                      "GatewayId" : {
                        "type" : "string",
                        "description" : "The ID of the Internet service or virtual gateway attached to the Net."
                      },
                      "NatServiceId" : {
                        "type" : "string",
                        "description" : "The ID of a NAT service attached to the Net."
                      },
                      "NetAccessPointId" : {
                        "type" : "string",
                        "description" : "The ID of the Net access point."
                      },
                      "NetPeeringId" : {
                        "type" : "string",
                        "description" : "The ID of the Net peering connection."
                      },
                      "NicId" : {
                        "type" : "string",
                        "description" : "The ID of the NIC."
                      },
                      "State" : {
                        "type" : "string",
                        "description" : "The state of a route in the route table (`active` \\| `blackhole`). The `blackhole` state indicates that the target of the route is not available."
                      },
                      "VmAccountId" : {
                        "type" : "string",
                        "description" : "The account ID of the owner of the VM."
                      },
                      "VmId" : {
                        "type" : "string",
                        "description" : "The ID of a VM specified in a route in the table."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the route."
                  }
                },
                "Tags" : {
                  "type" : "array",
                  "description" : "One or more tags associated with the route table.",
                  "items" : {
                    "required" : [ "Key", "Value" ],
                    "type" : "object",
                    "properties" : {
                      "Key" : {
                        "type" : "string",
                        "description" : "The key of the tag, with a minimum of 1 character."
                      },
                      "Value" : {
                        "type" : "string",
                        "description" : "The value of the tag, between 0 and 255 characters."
                      }
                    },
                    "additionalProperties" : false,
                    "description" : "Information about the tag."
                  }
                }
              },
              "additionalProperties" : false,
              "description" : "Information about the route table."
            }
          }
        },
        "additionalProperties" : false
      }
    }
  },
  "x-axway" : {
    "backendURLs" : [ "https://api.us-east-2.outscale.com/api/v1", "https://api.ap-northeast-1.outscale.com/api/v1", "https://api.cloudgouv-eu-west-1.outscale.com/api/v1", "https://api.us-west-1.outscale.com/api/v1", "https://api.ap-northeast-1.outscale.jp/api/v1", "https://api.eu-west-2.outscale.com/api/v1" ],
    "serviceType" : "rest",
    "basePaths" : [ "https://api-env.demo.axway.com:8065" ],
    "expired" : false,
    "retirementDate" : 0,
    "corsEnabled" : true,
    "availableSDK" : {
      "ios-swift" : "/discovery/sdk/0bd25e10-daa6-4b88-9ba3-06091010e058/ios-swift",
      "titanium" : "/discovery/sdk/0bd25e10-daa6-4b88-9ba3-06091010e058/titanium",
      "android" : "/discovery/sdk/0bd25e10-daa6-4b88-9ba3-06091010e058/android",
      "nodejs" : "/discovery/sdk/0bd25e10-daa6-4b88-9ba3-06091010e058/nodejs"
    },
    "deprecated" : false,
    "apiResourceType" : "oas30",
    "state" : "published",
    "id" : "0bd25e10-daa6-4b88-9ba3-06091010e058",
    "accessGrantedDate" : 1637063404916,
    "tags" : {
      "LOLO" : [ "test_lolo" ],
      "ID" : [ "ID_DEVOPS" ],
      "TEST_LMA" : [ "Internal Tag" ],
      "TEST_LMA_UC" : [ "true" ]
    }
  }
}